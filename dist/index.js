!function(e){var n={};function t(a){if(n[a])return n[a].exports;var r=n[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(a,r,function(n){return e[n]}.bind(null,r));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=3)}([function(e,n){e.exports=React},function(e,n,t){var a;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
!function(){"use strict";var t={}.hasOwnProperty;function r(){for(var e=[],n=0;n<arguments.length;n++){var a=arguments[n];if(a){var o=typeof a;if("string"===o||"number"===o)e.push(a);else if(Array.isArray(a)&&a.length){var i=r.apply(null,a);i&&e.push(i)}else if("object"===o)for(var l in a)t.call(a,l)&&a[l]&&e.push(l)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(a=function(){return r}.apply(n,[]))||(e.exports=a)}()},function(e,n){e.exports=ReactDOM},function(e,n,t){e.exports=t(23)},function(e,n,t){var a=t(5);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(21)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){n=e.exports=t(6)(!1);var a=t(7),r=a(t(8)),o=a(t(9)),i=a(t(10)),l=a(t(11)),s=a(t(12)),c=a(t(13)),u=a(t(14)),p=a(t(15)),m=a(t(16)),d=a(t(17)),h=a(t(18)),f=a(t(19)),g=a(t(20));n.push([e.i,"* {\n  color: #3f4c4e;\n}\n\nh2 {\n  text-align: center;\n  font-size: 3rem;\n  font-family: 'Dancing Script', cursive;\n  margin: 0;\n}\n\nbody {\n  margin: 0;\n  position: relative;\n}\n\n.navMenu {\n  font-size: 18px;\n  position: relative;\n}\n\n.backdrop {\n  overflow: hidden;\n  position: fixed;\n  z-index: -1;\n  width: 100%;\n  height: 100vh;\n}\n\n.hero {\n  background-image: url("+r+");\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n\n.content {\n  margin-top: 50px;\n}\n\n.hero-content {\n  width: 100%;\n  display: flex;\n  height: 85vh;\n  justify-content: center;\n  align-items: center;\n}\n\n.hero-content blockquote {\n  width: 60%;\n}\n\n.hero-content h1 {\n  /* color: #FFFFFF; */\n}\n\nblockquote footer {\n  text-align: end;\n  font-size: 22px;\n  /* color: #FFFFFF; */\n}\n\n.meet {\n  display: flex;\n  background-color: #EDEAE5;\n  padding: 30px;\n\n}\n\n\n\n\n.profile {\n  display: flex;\n  width: 50%;\n  justify-content: center;\n  align-items: center;\n}\n\n.profilePhoto {\n  width: 100%;\n  max-width: 450px;\n  min-width: 0;\n  min-height: 0;\n  object-fit: contain;\n  border-radius: 25px;\n}\n\n.bio {\n  flex: 1 0 auto;\n  margin: 20px;\n  max-width: 50%;\n}\n\n.bio .bioSubtitle {\n  text-align: center;\n}\n\n.bio p {\n  word-wrap: break-word;\n  /* padding: 0px 30px; */\n}\n\n@media screen and (max-width: 400px) {\n  .meet {\n    flex-direction: column;\n  }\n\n  .bio,\n  .profile {\n    width: 100%;\n    max-width: 100%;\n  }\n}\n\n.practiceAreas {\n  display: flex;\n  flex-direction: column;\n  background-color: #FFFFFF;\n  padding: 30px;\n  box-shadow: inset 0 3px 6px rgba(0, 0, 0, 0.16);\n}\n\n\n\n.practiceAreas .areas {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 30px;\n  align-items: space-between;\n  justify-content: center;\n}\n\n.practiceAreas .areas>.area {\n  display: flex;\n  flex: 1 0 290px;\n  max-width: 290px;\n  height: 320px;\n  background: #F7F7F7;\n  border-radius: 2px;\n  flex-direction: column;\n  margin: 0 30px 30px 0;\n  position: relative;\n}\n\n.areaImage {\n  width: 100%;\n  height: 200px;\n  background-color: lightgray;\n}\n\n.areaEatingConcerns {\n  background: url("+o+") no-repeat;\n  background-size: 100% 140%;\n  background-position: left bottom -50px;\n}\n\n.areaLifestyle {\n  background: url("+i+") no-repeat;\n  background-size: cover;\n  background-position: left bottom -65px;\n}\n/* \n.areaLifestyle.lazy {\n  background: url('../res/lifestyle-placeholder.jpg') no-repeat;\n  background-size: cover;\n  background-position: left bottom -65px;\n} */\n\n.areaMedicalProblems {\n  background: url("+l+") no-repeat;\n  background-size: 100% 140%;\n  background-position: left;\n}\n\n/* .areaMedicalProblems.lazy {\n  background: url('../res/medicalproblems-placeholder.jpg') no-repeat;\n} */\n\n.areaRelationships {\n  background: url("+s+") no-repeat;\n  background-size: cover;\n  background-position: left bottom -80px;\n}\n/* \n.areaRelationshipsj.lazy {\n  background: url('../res/relationships.jpg') no-repeat;\n} */\n\n.areaStress {\n  background: url("+c+") no-repeat;\n  background-size: cover;\n  background-position: left bottom -80px;\n}\n\n/* .areaStress.lazy {\n  background: url('../res/stressmanagement-placeholder.jpg') no-repeat;\n} */\n\n.areaTransitions {\n  background: url("+u+") no-repeat;\n  background-size: cover;\n  background-position: left -20px;\n}\n\n/* .areaTransitions .lazy {\n  background: url('../res/transitions-placeholder.jpg') no-repeat;\n} */\n\n.areaText {\n  font-size: 30px;\n  height: 120px;\n  max-height: 120px;\n}\n\n.areaText div {\n  margin-left: 42px;\n  margin-top: 12px;\n}\n\n.areaOverlay {\n  background: transparent;\n  border: 1px solid black;\n  border-radius: 2px;\n  position: absolute;\n  width: 230px;\n  height: 260px;\n  margin: 30px;\n}\n\n.services {\n  height: 400px;\n  background-color: #FBEEC1;\n  display: flex;\n}\n\n.servicesDescription {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n}\n\n@media screen and (max-width: 400px) {\n  .servicesDescription {\n    width: 100%;\n  }\n\n  .servicesImage {\n    width: 0%;\n    display: none;\n  }\n\n  .hero-content blockquote h1 {\n    font-size: 1.75rem;\n  }\n\n  .hero-content blockquote footer {\n    font-size: 1.25rem;\n  }\n}\n\n.button {\n  display: inline-block;\n  border: none;\n  border-radius: 2px;\n  margin: 0;\n  text-decoration: none;\n  background: rgba(171, 208, 230, 1);\n  font-size: 18px;\n  cursor: pointer;\n  text-align: center;\n  transition: background 200ms ease-in-out, transform 100ms ease;\n  -webkit-appearance: none;\n  padding: 10px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.button:hover {\n  background: rgb(202, 226, 240);\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n}\n\n.readMore {\n  display: flex;\n  justify-content: center;\n}\n\n.classes {\n  display: flex;\n  justify-content: center;\n  background: #FFFFFF;\n  padding: 30px;\n  box-shadow: inset 0 3px 6px rgba(0, 0, 0, 0.16);\n}\n\n\n.contact {\n  background-color: #FFFFFF;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-top: 30px;\n  padding-bottom: 30px;\n}\n\n.contact form {\n  margin-top: 30px;\n}\n\n\n.group {\n  position: relative;\n  margin-bottom: 45px;\n}\n\ninput,\ntextarea {\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 300px;\n  border: none;\n  border-bottom: 1px solid #3f4c4e;\n  background: transparent;\n  color: #3f4c4e;\n}\n\ninput:focus {\n  outline: none;\n}\n\ntextarea:focus {\n  outline: none;\n}\n\n/* LABEL ======================================= */\nlabel {\n  color: #3f4c4e;\n  font-size: 18px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 0.2s ease all;\n  -moz-transition: 0.2s ease all;\n  -webkit-transition: 0.2s ease all;\n}\n\n/* active state */\ninput:focus~label,\ninput:valid~label {\n  top: -20px;\n  font-size: 14px;\n  color: #FFFFFF;\n}\n\ntextarea {\n  resize: none;\n  padding: 0;\n}\n\ntextarea:focus~label,\ntextarea:valid~label {\n  top: -20px;\n  font-size: 14px;\n  color: #FFFFFF;\n}\n\n/* TODO learn this */\n\n/* BOTTOM BARS ================================= */\n.bar {\n  position: relative;\n  display: block;\n  width: 300px;\n}\n\n.bar:before,\n.bar:after {\n  content: '';\n  height: 2px;\n  width: 0;\n  bottom: 1px;\n  position: absolute;\n  background: #3f4c4e;\n  transition: 0.2s ease all;\n  -moz-transition: 0.2s ease all;\n  -webkit-transition: 0.2s ease all;\n}\n\n.bar:before {\n  left: 50%;\n}\n\n.bar:after {\n  right: 50%;\n}\n\n/* active state */\ninput:focus~.bar:before,\ninput:focus~.bar:after {\n  width: 50%;\n}\n\n/* active state */\ntextarea:focus~.bar:before,\ntextarea:focus~.bar:after {\n  width: 50%;\n}\n\n/* HIGHLIGHTER ================================== */\n.highlight {\n  position: absolute;\n  height: 60%;\n  width: 100px;\n  top: 25%;\n  left: 0;\n  pointer-events: none;\n  opacity: 0.5;\n}\n\n/* active state */\ninput:focus~.highlight {\n  -webkit-animation: inputHighlighter 0.3s ease;\n  -moz-animation: inputHighlighter 0.3s ease;\n  animation: inputHighlighter 0.3s ease;\n}\n\n/* active state */\ntextarea:focus~.highlight {\n  -webkit-animation: inputHighlighter 0.3s ease;\n  -moz-animation: inputHighlighter 0.3s ease;\n  animation: inputHighlighter 0.3s ease;\n}\n\n/* ANIMATIONS ================ */\n@-webkit-keyframes inputHighlighter {\n  from {\n    background: #3f4c4e;\n  }\n\n  to {\n    width: 0;\n    background: transparent;\n  }\n}\n\n@-moz-keyframes inputHighlighter {\n  from {\n    background: #3f4c4e;\n  }\n\n  to {\n    width: 0;\n    background: transparent;\n  }\n}\n\n@keyframes inputHighlighter {\n  from {\n    background: #3f4c4e;\n  }\n\n  to {\n    width: 0;\n    background: transparent;\n  }\n}\n\n\n.footer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #EDEAE5;\n  padding: 20px;\n}\n\n#address:before {\n  content: '\\007C';\n  padding: 0 15px\n}\n\n#address:after {\n  content: '\\007C';\n  padding: 0 15px;\n}\n\n@media screen and (max-width: 776px) {\n\n  .footer {\n    flex-direction: column;\n    text-align: center;\n  }\n\n  #address:before {\n    content: none;\n    padding: 0\n  }\n  \n  #address:after {\n    content: none;\n    padding: 0;\n  }\n}\n\n\n.link:before {\n  content: \"\";\n  position: absolute;\n  width: 100%;\n  height: 3px;\n  bottom: -2px;\n  left: 0;\n  background: #3f4c4e;\n  visibility: hidden;\n  border-radius: 5px;\n  transform: scaleX(0);\n  transition: .25s linear;\n}\n\n.link:hover:before,\n.link:focus:before {\n  visibility: visible;\n  transform: scaleX(1);\n}\n\n/* .navMenu:before {\n  bottom: -5px !important;\n} */\n\n.contact {\n  background: center / cover no-repeat url("+p+");\n}\n\n/* .contact.lazy {\n  background: center / cover no-repeat url('../res/succulentBurst-placeholder.jpg');\n} */\n\n.moreClasses {\n  background: center / cover no-repeat url("+m+");\n}\n/* \n.moreClasses.lazy {\n  background: center / cover no-repeat url('../res/pineapple-placeholder.jpg');\n} */\n\n.moreResources {\n  background: center / cover no-repeat url("+d+");\n}\n/* \n.moreResources.lazy {\n  background: center / cover no-repeat url('../res/moreResources-placeholder.jpg');\n} */\n\n.morePractice {\n  background: center / cover no-repeat url("+h+");\n}\n\n/* .morePractice.lazy {\n  background: center / cover no-repeat url('../res/practiceareas-placeholder.jpg');\n} */\n\n.moreServices {\n  background: center / cover no-repeat url("+f+");\n}\n\n.moreServices.lazy {\n  /* background: center / cover no-repeat url('../res/cornerplant-placeholder.jpg'); */\n}\n\n.moreDocuments {\n  background: center / cover no-repeat url("+g+");\n\n}\n\n/* .moreDocuments.lazy {\n  background: center / cover no-repeat url('../res/succulentmat-placeholder.jpg');\n\n} */\n\n.signature {\n  font-family: 'Dancing Script', cursive;\n  font-size: 26px;\n}\n\n.navMenu:hover {\n  filter: brightness(1.2);\n}\n\n.page-title {\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n}\n\n.page-title .title {\n  font-size: 4rem;\n  font-family: 'Dancing Script', cursive;\n}\n\n.card {\n  background: #F7F7F7;\n  border-radius: 2px;\n  margin: 50px 15%;\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  min-width: 100px;\n}\n\n.card-body {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 100px;\n  padding: 20px;\n}\n\n.card-title {\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n  padding: 20px;\n  border-bottom: 1px solid #222222;\n  height: 100%;\n}\n\n.card-1 {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n}\n\n.card-2 {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.card-3 {\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n}\n\n.card-4 {\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n}\n\n.card-5 {\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);\n}\n\n.background {\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n\n.drawer-overlay {\n  position: fixed;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.30);\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  z-index: 20;\n}\n\n.drawer-container {\n  position: absolute;\n  left: 0;\n  top: 0;\n  display: flex;\n  width: 155px;\n  height: calc(100vh - 50px);\n  z-index: 100;\n  /* transition: all 0.3s ease-in-out; */\n  top: 50px;\n  position: fixed;\n}\n\n.drawer {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: #EDEAE5;\n  justify-content: flex-start;\n  box-shadow: 11px 10px 8px 0px rgba(0, 0, 0, 0.25), 10px 0 5px -5px rgba(0, 0, 0, 0);\n  transition: none;\n}\n\n.drawer+.dark {\n  background-color: #C0C3C6;\n}\n\n.drawer-button {\n  width: 100%;\n  height: 40px;\n}\n\n.header-nav-button {\n  height: 40px;\n  width: 100px;\n}\n\n.drawer-item {\n  display: flex;\n}\n\n.drawer-item>div {\n  flex: 1;\n  padding-bottom: 10px;\n}\n\n.header-hamburger {\n  cursor: pointer;\n}\n\n.header-hamburger:hover * {\n  color: #879092;\n}\n\n.hide {\n  display: none;\n}\n\n/* .moreServices h2 {\n  text-align: center;\n  font-size: 3rem;\n  margin: unset;\n  font-family: Roboto, sans-serif;\n} */",""])},function(e,n,t){"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map(function(n){var t=function(e,n){var t=e[1]||"",a=e[3];if(!a)return t;if(n&&"function"==typeof btoa){var r=(i=a,l=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(s," */")),o=a.sources.map(function(e){return"/*# sourceURL=".concat(a.sourceRoot).concat(e," */")});return[t].concat(o).concat([r]).join("\n")}var i,l,s;return[t].join("\n")}(n,e);return n[2]?"@media ".concat(n[2],"{").concat(t,"}"):t}).join("")},n.i=function(e,t){"string"==typeof e&&(e=[[null,e,""]]);for(var a={},r=0;r<this.length;r++){var o=this[r][0];null!=o&&(a[o]=!0)}for(var i=0;i<e.length;i++){var l=e[i];null!=l[0]&&a[l[0]]||(t&&!l[2]?l[2]=t:t&&(l[2]="(".concat(l[2],") and (").concat(t,")")),n.push(l))}},n}},function(e,n,t){"use strict";e.exports=function(e,n){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)||n?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},function(e,n){e.exports="dist/res/hero.jpg"},function(e,n){e.exports="dist/res/eatingconcerns.jpg"},function(e,n){e.exports="dist/res/lifestyle.jpg"},function(e,n){e.exports="dist/res/medicalproblems.jpg"},function(e,n){e.exports="dist/res/relationships.jpg"},function(e,n){e.exports="dist/res/stressmanagement.jpg"},function(e,n){e.exports="dist/res/transitions.jpg"},function(e,n){e.exports="dist/res/succulentBurst.jpg"},function(e,n){e.exports="dist/res/pineapple.jpg"},function(e,n){e.exports="dist/res/moreResources.jpg"},function(e,n){e.exports="dist/res/practiceareas.jpg"},function(e,n){e.exports="dist/res/cornerplant.jpg"},function(e,n){e.exports="dist/res/succulentmat.jpg"},function(e,n,t){var a,r,o={},i=(a=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=a.apply(this,arguments)),r}),l=function(e){var n={};return function(e,t){if("function"==typeof e)return e();if(void 0===n[e]){var a=function(e,n){return n?n.querySelector(e):document.querySelector(e)}.call(this,e,t);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(e){a=null}n[e]=a}return n[e]}}(),s=null,c=0,u=[],p=t(22);function m(e,n){for(var t=0;t<e.length;t++){var a=e[t],r=o[a.id];if(r){r.refs++;for(var i=0;i<r.parts.length;i++)r.parts[i](a.parts[i]);for(;i<a.parts.length;i++)r.parts.push(v(a.parts[i],n))}else{var l=[];for(i=0;i<a.parts.length;i++)l.push(v(a.parts[i],n));o[a.id]={id:a.id,refs:1,parts:l}}}}function d(e,n){for(var t=[],a={},r=0;r<e.length;r++){var o=e[r],i=n.base?o[0]+n.base:o[0],l={css:o[1],media:o[2],sourceMap:o[3]};a[i]?a[i].parts.push(l):t.push(a[i]={id:i,parts:[l]})}return t}function h(e,n){var t=l(e.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var a=u[u.length-1];if("top"===e.insertAt)a?a.nextSibling?t.insertBefore(n,a.nextSibling):t.appendChild(n):t.insertBefore(n,t.firstChild),u.push(n);else if("bottom"===e.insertAt)t.appendChild(n);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=l(e.insertAt.before,t);t.insertBefore(n,r)}}function f(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var n=u.indexOf(e);n>=0&&u.splice(n,1)}function g(e){var n=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var a=function(){0;return t.nc}();a&&(e.attrs.nonce=a)}return b(n,e.attrs),h(e,n),n}function b(e,n){Object.keys(n).forEach(function(t){e.setAttribute(t,n[t])})}function v(e,n){var t,a,r,o;if(n.transform&&e.css){if(!(o="function"==typeof n.transform?n.transform(e.css):n.transform.default(e.css)))return function(){};e.css=o}if(n.singleton){var i=c++;t=s||(s=g(n)),a=E.bind(null,t,i,!1),r=E.bind(null,t,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(e){var n=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",b(n,e.attrs),h(e,n),n}(n),a=function(e,n,t){var a=t.css,r=t.sourceMap,o=void 0===n.convertToAbsoluteUrls&&r;(n.convertToAbsoluteUrls||o)&&(a=p(a));r&&(a+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var i=new Blob([a],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,t,n),r=function(){f(t),t.href&&URL.revokeObjectURL(t.href)}):(t=g(n),a=function(e,n){var t=n.css,a=n.media;a&&e.setAttribute("media",a);if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}.bind(null,t),r=function(){f(t)});return a(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;a(e=n)}else r()}}e.exports=function(e,n){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(n=n||{}).attrs="object"==typeof n.attrs?n.attrs:{},n.singleton||"boolean"==typeof n.singleton||(n.singleton=i()),n.insertInto||(n.insertInto="head"),n.insertAt||(n.insertAt="bottom");var t=d(e,n);return m(t,n),function(e){for(var a=[],r=0;r<t.length;r++){var i=t[r];(l=o[i.id]).refs--,a.push(l)}e&&m(d(e,n),n);for(r=0;r<a.length;r++){var l;if(0===(l=a[r]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete o[l.id]}}}};var y,w=(y=[],function(e,n){return y[e]=n,y.filter(Boolean).join("\n")});function E(e,n,t,a){var r=t?"":a.css;if(e.styleSheet)e.styleSheet.cssText=w(n,r);else{var o=document.createTextNode(r),i=e.childNodes;i[n]&&e.removeChild(i[n]),i.length?e.insertBefore(o,i[n]):e.appendChild(o)}}},function(e,n){e.exports=function(e){var n="undefined"!=typeof window&&window.location;if(!n)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var t=n.protocol+"//"+n.host,a=t+n.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,n){var r,o=n.trim().replace(/^"(.*)"$/,function(e,n){return n}).replace(/^'(.*)'$/,function(e,n){return n});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?e:(r=0===o.indexOf("//")?o:0===o.indexOf("/")?t+o:a+o.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")})}},function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(2),i=t.n(o),l=t(1),s=t.n(l);function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function u(e){return"/"===e.charAt(0)}function p(e,n){for(var t=n,a=t+1,r=e.length;a<r;t+=1,a+=1)e[t]=e[a];e.pop()}var m=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",t=e&&e.split("/")||[],a=n&&n.split("/")||[],r=e&&u(e),o=n&&u(n),i=r||o;if(e&&u(e)?a=t:t.length&&(a.pop(),a=a.concat(t)),!a.length)return"/";var l=void 0;if(a.length){var s=a[a.length-1];l="."===s||".."===s||""===s}else l=!1;for(var c=0,m=a.length;m>=0;m--){var d=a[m];"."===d?p(a,m):".."===d?(p(a,m),c++):c&&(p(a,m),c--)}if(!i)for(;c--;c)a.unshift("..");!i||""===a[0]||a[0]&&u(a[0])||a.unshift("");var h=a.join("/");return l&&"/"!==h.substr(-1)&&(h+="/"),h};"function"==typeof Symbol&&Symbol.iterator;var d=!0,h="Invariant failed";var f=function(e,n){if(!e)throw d?new Error(h):new Error(h+": "+(n||""))};function g(e){return"/"===e.charAt(0)?e:"/"+e}function b(e,n){return function(e,n){return new RegExp("^"+n+"(\\/|\\?|#|$)","i").test(e)}(e,n)?e.substr(n.length):e}function v(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function y(e){var n=e.pathname,t=e.search,a=e.hash,r=n||"/";return t&&"?"!==t&&(r+="?"===t.charAt(0)?t:"?"+t),a&&"#"!==a&&(r+="#"===a.charAt(0)?a:"#"+a),r}function w(e,n,t,a){var r;"string"==typeof e?(r=function(e){var n=e||"/",t="",a="",r=n.indexOf("#");-1!==r&&(a=n.substr(r),n=n.substr(0,r));var o=n.indexOf("?");return-1!==o&&(t=n.substr(o),n=n.substr(0,o)),{pathname:n,search:"?"===t?"":t,hash:"#"===a?"":a}}(e)).state=n:(void 0===(r=c({},e)).pathname&&(r.pathname=""),r.search?"?"!==r.search.charAt(0)&&(r.search="?"+r.search):r.search="",r.hash?"#"!==r.hash.charAt(0)&&(r.hash="#"+r.hash):r.hash="",void 0!==n&&void 0===r.state&&(r.state=n));try{r.pathname=decodeURI(r.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+r.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return t&&(r.key=t),a?r.pathname?"/"!==r.pathname.charAt(0)&&(r.pathname=m(r.pathname,a.pathname)):r.pathname=a.pathname:r.pathname||(r.pathname="/"),r}function E(){var e=null;var n=[];return{setPrompt:function(n){return e=n,function(){e===n&&(e=null)}},confirmTransitionTo:function(n,t,a,r){if(null!=e){var o="function"==typeof e?e(n,t):e;"string"==typeof o?"function"==typeof a?a(o,r):r(!0):r(!1!==o)}else r(!0)},appendListener:function(e){var t=!0;function a(){t&&e.apply(void 0,arguments)}return n.push(a),function(){t=!1,n=n.filter(function(e){return e!==a})}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];n.forEach(function(e){return e.apply(void 0,t)})}}}var x=!("undefined"==typeof window||!window.document||!window.document.createElement);function k(e,n){n(window.confirm(e))}var C="popstate",T="hashchange";function S(){try{return window.history.state||{}}catch(e){return{}}}function N(e){void 0===e&&(e={}),x||f(!1);var n,t=window.history,a=(-1===(n=window.navigator.userAgent).indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,r=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e,i=o.forceRefresh,l=void 0!==i&&i,s=o.getUserConfirmation,u=void 0===s?k:s,p=o.keyLength,m=void 0===p?6:p,d=e.basename?v(g(e.basename)):"";function h(e){var n=e||{},t=n.key,a=n.state,r=window.location,o=r.pathname+r.search+r.hash;return d&&(o=b(o,d)),w(o,a,t)}function N(){return Math.random().toString(36).substr(2,m)}var I=E();function j(e){c(H,e),H.length=t.length,I.notifyListeners(H.location,H.action)}function A(e){(function(e){void 0===e.state&&navigator.userAgent.indexOf("CriOS")})(e)||F(h(e.state))}function M(){F(h(S()))}var O=!1;function F(e){if(O)O=!1,j();else{I.confirmTransitionTo(e,"POP",u,function(n){n?j({action:"POP",location:e}):function(e){var n=H.location,t=P.indexOf(n.key);-1===t&&(t=0);var a=P.indexOf(e.key);-1===a&&(a=0);var r=t-a;r&&(O=!0,z(r))}(e)})}}var D=h(S()),P=[D.key];function _(e){return d+y(e)}function z(e){t.go(e)}var R=0;function B(e){1===(R+=e)&&1===e?(window.addEventListener(C,A),r&&window.addEventListener(T,M)):0===R&&(window.removeEventListener(C,A),r&&window.removeEventListener(T,M))}var L=!1;var H={length:t.length,action:"POP",location:D,createHref:_,push:function(e,n){var r=w(e,n,N(),H.location);I.confirmTransitionTo(r,"PUSH",u,function(e){if(e){var n=_(r),o=r.key,i=r.state;if(a)if(t.pushState({key:o,state:i},null,n),l)window.location.href=n;else{var s=P.indexOf(H.location.key),c=P.slice(0,-1===s?0:s+1);c.push(r.key),P=c,j({action:"PUSH",location:r})}else window.location.href=n}})},replace:function(e,n){var r=w(e,n,N(),H.location);I.confirmTransitionTo(r,"REPLACE",u,function(e){if(e){var n=_(r),o=r.key,i=r.state;if(a)if(t.replaceState({key:o,state:i},null,n),l)window.location.replace(n);else{var s=P.indexOf(H.location.key);-1!==s&&(P[s]=r.key),j({action:"REPLACE",location:r})}else window.location.replace(n)}})},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&(e=!1);var n=I.setPrompt(e);return L||(B(1),L=!0),function(){return L&&(L=!1,B(-1)),n()}},listen:function(e){var n=I.appendListener(e);return B(1),function(){B(-1),n()}}};return H}function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function j(e){for(var n=1;n<arguments.length;n++)if(n%2){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.forEach(function(n){R(e,n,t[n])})}else Object.defineProperties(e,Object.getOwnPropertyDescriptors(arguments[n]));return e}function A(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function M(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function O(e,n,t){return n&&M(e.prototype,n),t&&M(e,t),e}function F(e,n){return!n||"object"!==I(n)&&"function"!=typeof n?P(e):n}function D(e){return(D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function P(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&z(e,n)}function z(e,n){return(z=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function R(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var B=function(e){function n(e){var t;A(this,n),R(P(t=F(this,D(n).call(this,e))),"history",void 0),R(P(t),"handleNav",function(e){switch(t.setState({page:e}),e.dock&&t.closeDrawer(),page.name){case"home":t.history.push("/");break;case"practice":t.history.push("/practice-areas");break;case"services":t.history.push("/services");break;case"classes":t.history.push("/classes");break;case"resources":t.history.push("/resources");break;case"docs":t.history.push("/client-documents")}}),R(P(t),"toggleDrawer",function(){t.setState(function(e){return{showDrawer:!e.showDrawer}})}),R(P(t),"closeDrawer",function(){t.setState({showDrawer:!1})}),t.state={page:{name:"home",scrollTo:null},showHamburger:!1,showDrawer:!1};var a=window.location.pathname;return t.currentPage=a,t.history=N(),t.history.listen(function(e){t.currentPage=e.pathname}),t}return _(n,r.a.Component),O(n,[{key:"componentDidMount",value:function(){var e=this;window.innerWidth>800?this.setState({showDrawer:!1}):this.setState({showDrawer:!1,showHamburger:!0}),window.addEventListener("resize",function(){var n=window.innerWidth,t=e.state.showHamburger;n>800&&t?e.setState({showDrawer:!1,showHamburger:!1}):n<800&&!t&&e.setState({showHamburger:!0})})}},{key:"render",value:function(){var e=this.state.page,n=e.name,t=r.a.createElement("div",null);switch(n){case"home":t=r.a.createElement(q,{onNav:this.handleNav});break;case"practice":t=r.a.createElement(W,null);break;case"services":t=r.a.createElement(G,null);break;case"classes":t=r.a.createElement($,null);break;case"resources":t=r.a.createElement(J,null);break;case"docs":t=r.a.createElement(V,null);break;case"fees":t=r.a.createElement(K,null)}return r.a.createElement("div",{style:{display:"flex",flexDirection:"column",fontFamily:"Roboto, sans-serif"}},r.a.createElement(H,{showHamburger:this.state.showHamburger,active:n,onNav:this.handleNav,openDrawer:this.toggleDrawer}),r.a.createElement(L,{page:e,closeDrawer:this.closeDrawer,showDrawer:this.state.showDrawer,onNav:this.handleNav},t),r.a.createElement(U,{onNav:this.handleNav}))}}]),n}(),L=function(e){function n(){var e,t;A(this,n);for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];return R(P(t=F(this,(e=D(n)).call.apply(e,[this].concat(o)))),"handleDrawerOverlayClick",function(){t.props.closeDrawer()}),R(P(t),"renderDrawer",function(){var e=t.props.showDrawer,n=s()("drawer-container",{hide:!e}),a=s()("drawer-overlay",{hide:!e});return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:n},r.a.createElement(ie,{handleContactClick:function(){t.props.onNav({name:"home",scrollTo:"contact",dock:!0})},handleServicesClick:function(){t.props.onNav({name:"services",scrollTo:0,dock:!0})},handlePracticeClick:function(){t.props.onNav({name:"practice",scrollTo:0,dock:!0})},handleClassesClick:function(){t.props.onNav({name:"classes",scrollTo:0,dock:!0})},handleDocumentsClick:function(){t.props.onNav({name:"docs",scrollTo:0,dock:!0})},handleResourcesClick:function(){t.props.onNav({name:"resources",scrollTo:0,dock:!0})}})),r.a.createElement("div",{className:a,onClick:t.handleDrawerOverlayClick}))}),t}return _(n,r.a.Component),O(n,[{key:"componentDidMount",value:function(){this.props.page.scrollTo&&setTimeout(function(){return document.getElementById("top").scrollIntoView()},0)}},{key:"componentDidUpdate",value:function(){var e=this.props.page;null===e.scrollTo&&void 0===e.scrollTo||("string"==typeof e.scrollTo&&setTimeout(function(){return document.getElementById(e.scrollTo).scrollIntoView({behavior:"smooth"})},0),"number"==typeof e.scrollTo&&setTimeout(function(){return window.scrollTo(0,e.scrollTo)},0))}},{key:"render",value:function(){var e=this.props.page.name,n=s()("backdrop",{"hero lazy":"home"===e,moreServices:"services"===e,moreResources:"resources"===e,moreDocuments:"docs"===e,moreFees:"fees"===e,moreClasses:"classes"===e,morePractice:"practice"===e});return r.a.createElement("div",{style:{minHeight:"calc(100vh - 60px)"}},r.a.createElement("div",{className:n}),r.a.createElement("div",null,this.renderDrawer(),this.props.children))}}]),n}(),H=function(e){var n={position:"fixed",left:0,top:0,height:50,width:"100%",display:"flex",justifyContent:"space-around",alignItems:"center",backgroundColor:"#EDEAE5",boxShadow:"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)",zIndex:24},t={cursor:"pointer"},a=e.active,o=e.onNav,i=e.showHamburger,l=e.openDrawer;return i?(n.justifyContent="space-between",r.a.createElement("div",{style:n},r.a.createElement("div",{className:"header-nav header-hamburger",style:{marginLeft:20},onClick:l},r.a.createElement("span",null,r.a.createElement("svg",{className:"hamburger",width:"34",height:"34",viewBox:"0 0 24 24"},r.a.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),r.a.createElement("path",{fill:"currentColor",d:"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"})))),r.a.createElement("div",{onClick:function(){return o({name:"home",scrollTo:"top"})},className:s()("navMenu","signature","link",{"navMenu--active":"home"===a}),style:j({},t,{marginRight:20})},"Stephanie Smith, Psy.D."))):r.a.createElement("div",{style:n},r.a.createElement("div",{onClick:function(){return o({name:"home",scrollTo:"top"})},className:s()("navMenu","signature","link",{"navMenu--active":"home"===a}),style:t},"Stephanie Smith, Psy.D."),r.a.createElement("div",{onClick:function(){return o({name:"practice",scrollTo:0})},className:s()("navMenu","link",{"navMenu--active":"practice"===a}),style:t},"Practice Areas"),r.a.createElement("div",{onClick:function(){return o({name:"services",scrollTo:0})},className:s()("navMenu","link",{"navMenu--active":"services"===a}),style:t},"Services"),r.a.createElement("div",{onClick:function(){return o({name:"classes",scrollTo:0})},className:s()("navMenu","link",{"navMenu--active":"classes"===a}),style:t},"Classes"),r.a.createElement("div",{onClick:function(){return o({name:"docs",scrollTo:0})},className:s()("navMenu","link",{"navMenu--active":"docs"===a}),style:t},"Documents"),r.a.createElement("div",{onClick:function(){return o({name:"home",scrollTo:"contact"})},className:s()("navMenu","link",{"navMenu--active":"contact"===a}),style:t},"Contact"),r.a.createElement("div",{onClick:function(){return o({name:"resources",scrollTo:0})},className:s()("navMenu","link",{"navMenu--active":"resources"===a}),style:t},"Resources"))},U=function(e){e.onNav;return r.a.createElement("div",{className:"footer"},r.a.createElement("span",null,"Stephanie Smith, Psy.D."),r.a.createElement("span",{id:"address"},"801 Alhambra Blvd, Suite 2B Sacramento, CA 95816"),r.a.createElement("span",null,"(916) 399-3615"))},q=function(e){var n=e.onNav;return r.a.createElement("div",null,r.a.createElement("div",{className:"backdrop"},r.a.createElement("div",{className:"hero ".concat("")})),r.a.createElement("div",{className:"content",id:"top"},r.a.createElement("div",{className:"hero-content"},r.a.createElement("blockquote",null,r.a.createElement("h1",null,'"And the day came when the risk to remain tight as a bud was more painful than the risk it took to blossom."'),r.a.createElement("footer",null,"- Anais Nin"))),r.a.createElement("div",{className:"meet card-2",id:"meet"},r.a.createElement("div",{className:"profile"},r.a.createElement("img",{className:"profilePhoto card-1",src:"res/profile.jpg"})),r.a.createElement("div",{className:"bio"},r.a.createElement("h2",{className:"bioTitle"},"Meet Dr. Stephanie Smith"),r.a.createElement("h3",{className:"bioSubtitle"},"Clinical Psychologist"),X)),r.a.createElement("div",{className:"practiceAreas",id:"practice"},r.a.createElement("h2",null,"Practice Areas"),r.a.createElement("div",{className:"areas"},r.a.createElement("div",{className:"area card-1"},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaEatingConcerns ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Eating",r.a.createElement("br",null)," Concerns"))),r.a.createElement("div",{className:"area card-1"},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaLifestyle ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Lifestyle",r.a.createElement("br",null)," Changes"))),r.a.createElement("div",{className:"area card-1"},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaTransitions ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Life",r.a.createElement("br",null)," Transitions"))),r.a.createElement("div",{className:"area card-1"},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaRelationships ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Relationship",r.a.createElement("br",null)," Challenges"))),r.a.createElement("div",{className:"area card-1"},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaMedicalProblems ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Health",r.a.createElement("br",null)," Difficulties"))),r.a.createElement("div",{className:"area card-1"},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaStress ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Stress",r.a.createElement("br",null)," Management")))),r.a.createElement("div",{className:"readMore"},r.a.createElement("button",{className:"readMore button",onClick:function(){return n({name:"practice",scrollTo:0})}},"READ MORE"))),r.a.createElement("div",{className:"contact card-2 ".concat(""),id:"contact"},r.a.createElement("h2",null,"Change begins today"),r.a.createElement("h3",{style:{fontSize:23}},"Request a consultation"),r.a.createElement("p",{style:{textAlign:"center",fontSize:19,lineHeight:1.9,marginTop:40}},"Call/Text: 916-399-3615",r.a.createElement("br",null),"Email: ",r.a.createElement("a",{type:"email",href:"mailto:StephanieSmithPsyD@protonmail.com",target:"_blank"},"StephanieSmithPsyD@protonmail.com"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.psychologytoday.com/profile/473076",target:"_blank"},"Connect through Psychology Today")))))},W=(r.a.createElement(r.a.Fragment,null,r.a.createElement("form",null,r.a.createElement("div",{class:"group"},r.a.createElement("input",{type:"text",required:!0}),r.a.createElement("span",{class:"highlight"}),r.a.createElement("span",{class:"bar"}),r.a.createElement("label",null,"Name")),r.a.createElement("div",{class:"group"},r.a.createElement("input",{type:"email",required:!0}),r.a.createElement("span",{class:"highlight"}),r.a.createElement("span",{class:"bar"}),r.a.createElement("label",null,"Email")),r.a.createElement("div",{class:"group"},r.a.createElement("input",{type:"phone",required:!0}),r.a.createElement("span",{class:"highlight"}),r.a.createElement("span",{class:"bar"}),r.a.createElement("label",null,"Phone")),r.a.createElement("div",{class:"group"},r.a.createElement("textarea",{type:"text",required:!0}),r.a.createElement("span",{class:"highlight"}),r.a.createElement("span",{class:"bar"}),r.a.createElement("label",null,"Message"))),r.a.createElement("div",{class:"readMore"},r.a.createElement("button",{className:"button"},"SEND"))),function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Practice Areas"}),r.a.createElement(re,{body:Y}))}),G=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Services"}),r.a.createElement(re,{body:Z}),r.a.createElement(re,{body:Q}),r.a.createElement(re,{body:ee}))},$=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Classes"}),r.a.createElement(re,{body:ne}))},V=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Client Documents"}),r.a.createElement(re,{body:ae}))},J=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Resources"}),r.a.createElement(re,{body:te}))},K=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Fees"}),r.a.createElement(re,{body:fees}))},X=r.a.createElement("p",null,"Welcome and thank you for visiting! This is a place to explore the possibility of change for a better tomorrow. There is no “one size fits all” approach to our time together. I work collaboratively with my clients to create an environment of respect and compassion that can be applied to renew their lives. Therapy has the power to both soothe and transform. I use techniques of one-on-one therapy and classes to spark meaningful and lasting change. I am known by my clients as being down to earth, genuine, and relatable. I look forward to partnering together to build your healthier tomorrow."),Y=r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",null,"Eating Concerns"),r.a.createElement("p",null,"Individuals noticing mindless, stress, emotional, or binge eating behaviors are welcome to consider both individual and class-based therapies with me. My approach to these concerns recognizes the complex role eating can play as a mechanism of coping for individual, family, and culturally systemic issues. We work together to acknowledge the fullness of this role as well as it's history, while honoring the desire that may exist to change. Through our work we can begin to develop new and healthier coping strategies as a natural outcome of increased awareness and self-compassion. I tailor my approach to the needs and style of the individual with whom I am working."),r.a.createElement("h3",null,"Lifestyle Changes"),r.a.createElement("p",null,'Most of us can relate to the running mental list of things we know we "should" be doing in order to be healthier. Maybe this is moving our bodies more, eating differently, improving sleep habits, or disconnecting from technology. Maybe it could be these things plus many more! While certainly excellent habits, looking at a list of personal wellness "to dos" can be overwhelming. In fact, we often avoid thinking about these healthy living items because it can feel hopeless. Unfortunately, often this means staying stuck in a rut of feeling unhealthy. Together, we can create a plan of small steps to work towards connecting behavior changes with your deepest values. Things that may have felt forced in the past can become things we are eager for. I will leverage my training in Lifestyle Medicine to help set manageable and research supported aims to produce real improvements in your health.'),r.a.createElement("h3",null,"Phase of Life Issues/Life Transitions"),r.a.createElement("p",null,'Though the phrase, "the only thing constant is change" is one familiar to many of us, this often feels like little comfort during the turmoil of a significant transition. Changes in life circumstances can impact us on every level of our being and external life. Seeking therapy during these times can be both anchor and guide light. I will support you to process the loss of how things have been. When you are ready, we will set consciously developed goals for the phase of life that you find yourself in now. We will work together to identify healthy core components of who you are evolving to be, and center our attention to nurture this growth. There is no set timeline of how long an adjustment period lasts. I will help you to move into the next part of your life in healthful ways, as quickly as is reasonable, and in complete respect for your own pace.'),r.a.createElement("h3",null,"Relationship Challenges"),r.a.createElement("p",null,"Romantic, family, social, and occupational relationships can all be sources of significant pleasure and, consequently, significant pain. There are a multitude of reasons relationships can become troubled. Many of the roots of these reasons can be traced to communication clarity. While we cannot change other people, we can identify personal qualities in ourselves that we wish to change for the wellbeing of a current or future relationship. Working towards identifying these areas, creating mindful awareness around them, and making values-based changes can provide both personal benefits and improvements to the relationship. We can work together to identify and optimize these changes while prioritizing effective and clear communication as the cornerstone to improved relationships."),r.a.createElement("h3",null,"Health Difficulties"),r.a.createElement("p",null,"There is no doubt that our physical wellbeing impacts our psychological wellbeing and vice versa. Whether you are looking for support in improving your management of a medical problem, handling the stress around it, or believe there may be lifestyle changes that will reverse the condition, I would be happy to support this aspect of your health. I am a trained health psychologist and work regularly with both chronic and acute medical conditions. I have personal and professional experience with the impacts physical health can have not only on oneself, but also on those around us. I believe support can make a substantive difference in managing a health concern as well as the emotional and social impacts of this. I will work with you to accept those realities that are unchanging, as well as recognize opportunities for positive growth."),r.a.createElement("h3",null,"Stress Management"),r.a.createElement("p",null,"At times we can find ourselves overwhelmed. The reasons for feeling overwhelmed might seem clear, or they may be hard to understand. It can feel like being trapped in parts of your own life. Talking through your stressors with a professional can allow space around painful parts of your experience that could ease the pressure. There may also be alternative perspectives that you aren’t able to see from being right in the thick of the stress, that may be visible from an outside perspective. Therapy can provide support to process your experiences and free you to be a more whole version of yourself; able to engage with the rest of your life and the people in it.")),Z=r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",{style:{textAlign:"center"}},"What to Expect"),r.a.createElement("h3",null,"Telephone Consult"),r.a.createElement("p",null,"As our first contact for either individual therapy or classes I offer a complementary 15-minute phone consultation. This is an opportunity for us to connect about the issues that bring you into care, and to determine whether working together is the best fit for your needs. I can answer any questions that you may have about coming into care and set up your first appointment or class.",r.a.createElement("br",null),r.a.createElement("i",null,"15-min initial telephone consult— free")),r.a.createElement("h3",null,"Initial Appointment"),r.a.createElement("p",null,"An initial individual therapy appointment is a 60-minute appointment. During this appointment I will review your complete intake form with you to ensure that I have an appropriate understanding of some of your history, what brings you into care, and your goals for our work together. I will answer any questions that you have to the best of my ability. We will also use this appointment to create some initial goals for care and to set up our mutual expectations for treatment.",r.a.createElement("br",null),r.a.createElement("i",null,"60-min initial individual appointment— $150")),r.a.createElement("h3",null,"Return Appointments"),r.a.createElement("p",null,"Return appointments are 50-minute appointments. During return appointments we will work together on your goals and I will support you through the process. We will regularly check in about the progress of care and make adjustments as needed to ensure that we are working effectively together.",r.a.createElement("br",null),r.a.createElement("i",null,"50-min return individual appointment— $150")),r.a.createElement("h3",null,"Classes"),r.a.createElement("p",null,'Classes are 90 minutes in length. Due to space needed, classes are held at a nearby location separate from the main therapy office. More information about class and class content can be found under the "Classes" tab. Though classes take place over 4 sessions, the full fee must be paid in advance of the first session. After this payment, no additional charges are incurred for the remainder of the classes unless an additional service is requested or provided.',r.a.createElement("br",null),r.a.createElement("i",null,"4-session (360-min) class series— $160")),r.a.createElement("h3",null,"TeleMental Health"),r.a.createElement("p",null,"On occasion it may be indicated for us to engage in tele-health either over the phone or through video communication. These services are offered to individuals only after we have initially established in-person therapeutic relationship through at least one in-person appointment. Due to licensing requirements, I am unable to provide these services to anyone out-of-state or country at the time of service. There are a variety of platforms available for this service and, though convenient, it is important to be aware that most are not HIPAA compliant. Completing the Informed Consent form acknowledges your understanding of this and acceptance of the risk should we utilize this format of care.",r.a.createElement("br",null),r.a.createElement("i",null,"5 to 25 minutes— $75"),r.a.createElement("br",null),r.a.createElement("i",null,"26-50 minutes— $150"))),Q=r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",{style:{textAlign:"center"}},"Payment and Reimbursement"),r.a.createElement("p",null,"You will be expected to pay for each session before/at the start of session, unless we agree otherwise. Payment may be made through cash, check, or HIPAA compliant application. Use of the HIPAA compliant application incurs an additional $5 charge.")),ee=r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",{style:{textAlign:"center"}},"Insurance"),r.a.createElement("p",null,'I am an "out of network provider" for insurance networks but will provide you a Superbill which you may use to request reimbursement. The coverage you receive is entirely dependent upon the plan that you have. I recommend that you contact your insurance company directly to determine your specific coverage. Some questions that may be helpful in this conversation include:'),r.a.createElement("ol",null,r.a.createElement("li",null,"Do I have mental health insurance benefits that cover psychotherapy?"),r.a.createElement("li",null,"Does my policy cover an out of network Licensed Psychologist? If so, what percentage is covered or what is the coverage amount per therapy session?"),r.a.createElement("li",null,"What is my deductible and has it been met?"),r.a.createElement("li",null,"Are my medical and mental health/behavioral health deductibles separate?"),r.a.createElement("li",null,"How many sessions per year does my health insurance cover?"),r.a.createElement("li",null,"Does the diagnosis matter? Are some diagnoses covered and others not?"),r.a.createElement("li",null,"What paperwork or forms do I need to submit for sessions to be covered?"),r.a.createElement("li",null,"Is approval required from my primary care physician?"))),ne=r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",null,"Mood & Food"),r.a.createElement("p",null,"Mood & Food is a class designed for individuals struggling with overeating, mindless eating, stress eating, emotional eating, shame around eating, or binge eating. The course is structured into 4 classes each lasting 90 minutes. The class centers on presented material, though questions and participation are welcome and encouraged. Class materials also include handouts and at-home practice exercises. During the course of the classes we will cover topics including:"),r.a.createElement("div",{style:{display:"flex",justifyContent:"center",flexFlow:"row wrap"}},r.a.createElement("ul",null,r.a.createElement("li",null,"what emotional eating is"),r.a.createElement("li",null,"cultural implications"),r.a.createElement("li",null,"environmental impacts"),r.a.createElement("li",null,"set point theory"),r.a.createElement("li",null,"emotional vs physical hunger"),r.a.createElement("li",null,"binge eating cycle"),r.a.createElement("li",null,"interpersonal dynamics around food"),r.a.createElement("li",null,"self-talk")),r.a.createElement("ul",null,r.a.createElement("li",null,"behavior analysis & behavior change"),r.a.createElement("li",null,"mindful eating"),r.a.createElement("li",null,"loving limits"),r.a.createElement("li",null,"self-compassion"),r.a.createElement("li",null,"managing difficult emotions"),r.a.createElement("li",null,"habit formation"),r.a.createElement("li",null,"stages of change"),r.a.createElement("li",null,"healthy eating guidelines"))),r.a.createElement("p",null,"By the end of the class series participants will be able to recognize opportunities for, prepare for, and make positive changes in their relationships with themselves, food, and their environment.")),te=r.a.createElement(r.a.Fragment,null,r.a.createElement("p",null,"The below are resources that I find to be clinically valuable. I have no affiliation with any of the individuals or entities indicated below. These resources are provided purely due to my perception of their clinical benefit. I receive no compensation of any kind for sharing these resources."),r.a.createElement("h3",null,"Webpages"),r.a.createElement("p",null,r.a.createElement("a",{href:"https://anxietycanada.com/",target:"_blank"},"Anxiety Canada")," is an excellent web resource for evidence based information about anxiety. The website is written in clear language that is thoughtful, easy to understand, and helpful."),r.a.createElement("p",null,r.a.createElement("a",{href:"https://maps.anxietycanada.com/courses/my-anxiety-plan-map-for-adults/",target:"_blank"},"My Anxiety Plan")," is the online course associated with Anxiety Canada. It is a free course that provides excellent information in addition to practical tools and practices for managing anxiety and anxiety-based conditions."),r.a.createElement("p",null,r.a.createElement("a",{href:"https://brenebrown.com/",target:"_blank"},"Brene Brown")," is an author, researcher, and speaker that I highly recommend. The link is to her main webpage. Below are specific resources of hers that I recommend."),r.a.createElement("p",null,r.a.createElement("a",{href:"https://ggsc.berkeley.edu/",target:"_blank"},"The Greater Good Science Center"),"- Berkeley is a center of research and innovation focusing on making positivity and positive change accessible to all."),r.a.createElement("p",null,r.a.createElement("a",{href:"https://www.edx.org/course/the-science-of-happiness-0",target:"_blank"},"The Science of Happiness")," is the online course from the Greater Good Science Center. It is a free 8-week course that provides tools to happier experiences and greater meaning in life."),r.a.createElement("p",null,r.a.createElement("a",{href:"https://ggia.berkeley.edu/",target:"_blank"},"Greater Good in Action")," provides doable practices for making concrete and impactful positive changes"),r.a.createElement("h3",null,"Videos"),r.a.createElement("a",{href:"https://www.ted.com/talks/brene_brown_on_vulnerability?utm_campaign=tedspread&utm_medium=referral&utm_source=tedcomshare",target:"_blank"},"The Power of Vulnerability- Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.ted.com/talks/brene_brown_listening_to_shame?utm_campaign=tedspread&utm_medium=referral&utm_source=tedcomshare",target:"_blank"},"Listening to Shame- Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://player.vimeo.com/video/261348709",target:"_blank"},"SuperSoul Sessions: The Anatomy of Trust- Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://brenebrown.com/videos/",target:"_blank"},"Additional Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://youtu.be/IvtZBUSplr4",target:"_blank"},"The Space Between Self-Esteem and Self-Compassion- Kristin Neff"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://self-compassion.org/videos/",target:"_blank"},"Additional Kristin Neff"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.ted.com/talks/sandra_aamodt_why_dieting_doesn_t_usually_work?utm_campaign=tedspread&utm_medium=referral&utm_source=tedcomshare",target:"_blank"},"Why Dieting Doesn't Usually Work- Sandra Aamodt"),r.a.createElement("br",null),r.a.createElement("h3",null,"Audio Recordings"),r.a.createElement("a",{href:"https://centerformsc.org/practice-msc/guided-meditations-and-exercises/",target:"_blank"},"Mindful Self Compassion Meditations"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.uclahealth.org/marc/mindful-meditations",target:"_blank"},"UCLA Meditations (Also available in Spanish!)"),r.a.createElement("br",null),r.a.createElement("h3",null,"Books"),r.a.createElement("a",{href:"https://geneenroth.com/books/",target:"_blank"},"Women, Food, and God by Geneen Roth"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://brenebrown.com/books-audio/",target:"_blank"},"The Gifts of Imperfection by Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://brenebrown.com/books-audio/",target:"_blank"},"Daring Greatly by Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://brenebrown.com/books-audio/",target:"_blank"},"Rising Strong by Brene Brown"),r.a.createElement("br",null)),ae=r.a.createElement(r.a.Fragment,null,r.a.createElement("p",null,"The following forms are for your review. If we have scheduled an in-person appointment, carefully read each of the forms below. Please print, complete, and bring the first three forms to our first appointment. We will review them together. If you would like for your health information to be shared with another individual or group, or would like me to gather information from them, please print, complete, and bring the Release of Information form to your next appointment which identifies the person or entity with whom your information should be shared."),r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement("a",{href:"./res/Informed Consent.pdf",download:!0,target:"_blank"},"Informed Consent")),r.a.createElement("li",null,r.a.createElement("a",{href:"./res/Intake Form.pdf",download:!0,target:"_blank"},"Intake Form")),r.a.createElement("li",null,r.a.createElement("a",{href:"./res/Receipt of Forms.pdf",download:!0,target:"_blank"},"Receipt of Forms")),r.a.createElement("li",null,r.a.createElement("a",{href:"./res/Privacy Policy.pdf",download:!0,target:"_blank"},"Privacy Policy")),r.a.createElement("li",null,r.a.createElement("a",{href:"./res/ROI.pdf",download:!0,target:"_blank"},"Release of Information")))),re=function(e){var n=e.title?r.a.createElement("div",{className:"card-title"},e.title):void 0;return r.a.createElement("div",{className:"card card-1"},n,r.a.createElement("div",{className:"card-body"},e.body))},oe=function(e){return r.a.createElement("div",{className:"page-title",id:"top"},r.a.createElement("div",{className:"title"},e.title))},ie=function(e){function n(){return A(this,n),F(this,D(n).apply(this,arguments))}return _(n,r.a.Component),O(n,[{key:"render",value:function(){var e=this.props,n=e.handlePracticeClick,t=e.handleServicesClick,a=e.handleClassesClick,o=e.handleContactClick,i=e.handleDocumentsClick,l=e.handleResourcesClick,c={cursor:"pointer",fontSize:20,borderBottom:"1px solid currentColor",padding:10};return r.a.createElement("div",{className:"drawer"},r.a.createElement("div",{onClick:n,className:s()("navMenu","link",{"navMenu--active":!1}),style:j({},c,{borderTop:"1px solid currentColor"})},"Practice Areas"),r.a.createElement("div",{onClick:t,className:s()("navMenu","link",{"navMenu--active":!1}),style:c},"Services"),r.a.createElement("div",{onClick:a,className:s()("navMenu","link",{"navMenu--active":!1}),style:c},"Classes"),r.a.createElement("div",{onClick:i,className:s()("navMenu","link",{"navMenu--active":!1}),style:c},"Documents"),r.a.createElement("div",{onClick:o,className:s()("navMenu","link",{"navMenu--active":!1}),style:c},"Contact"),r.a.createElement("div",{onClick:l,className:s()("navMenu","link",{"navMenu--active":!1}),style:c},"Resources"))}}]),n}();t(4);i.a.render(r.a.createElement(B),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,