!function(e){var n={};function t(a){if(n[a])return n[a].exports;var r=n[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(a,r,function(n){return e[n]}.bind(null,r));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=3)}([function(e,n){e.exports=React},function(e,n,t){var a;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
!function(){"use strict";var t={}.hasOwnProperty;function r(){for(var e=[],n=0;n<arguments.length;n++){var a=arguments[n];if(a){var o=typeof a;if("string"===o||"number"===o)e.push(a);else if(Array.isArray(a)&&a.length){var i=r.apply(null,a);i&&e.push(i)}else if("object"===o)for(var l in a)t.call(a,l)&&a[l]&&e.push(l)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(a=function(){return r}.apply(n,[]))||(e.exports=a)}()},function(e,n){e.exports=ReactDOM},function(e,n,t){e.exports=t(23)},function(e,n,t){var a=t(5);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(21)(a,r);a.locals&&(e.exports=a.locals)},function(e,n,t){n=e.exports=t(6)(!1);var a=t(7),r=a(t(8)),o=a(t(9)),i=a(t(10)),l=a(t(11)),s=a(t(12)),c=a(t(13)),u=a(t(14)),p=a(t(15)),m=a(t(16)),d=a(t(17)),h=a(t(18)),f=a(t(19)),g=a(t(20));n.push([e.i,"* {\n  color: #3f4c4e;\n}\n\nh2 {\n  text-align: center;\n  font-size: 3rem;\n  font-family: 'Dancing Script', cursive;\n  margin: 0;\n}\n\nbody {\n  margin: 0;\n  position: relative;\n}\n\n.navMenu {\n  font-size: 18px;\n  position: relative;\n}\n\n.backdrop {\n  overflow: hidden;\n  position: fixed;\n  z-index: -1;\n  width: 100%;\n  height: 100vh;\n}\n\n.hero {\n  background-image: url("+r+");\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n\n.content {\n  margin-top: 50px;\n}\n\n.hero-content {\n  width: 100%;\n  display: flex;\n  height: 85vh;\n  justify-content: center;\n  align-items: center;\n}\n\n.hero-content blockquote {\n  width: 60%;\n}\n\n.hero-content h1 {\n  /* color: #FFFFFF; */\n}\n\nblockquote footer {\n  text-align: end;\n  font-size: 22px;\n  /* color: #FFFFFF; */\n}\n\n.meet {\n  display: flex;\n  background-color: #EDEAE5;\n  padding: 30px;\n\n}\n\n\n\n\n.profile {\n  display: flex;\n  width: 50%;\n  justify-content: center;\n  align-items: center;\n}\n\n.profilePhoto {\n  width: 100%;\n  max-width: 450px;\n  min-width: 0;\n  min-height: 0;\n  object-fit: contain;\n  border-radius: 25px;\n}\n\n.bio {\n  flex: 1 0 auto;\n  margin: 20px;\n  max-width: 50%;\n}\n\n.bio .bioSubtitle {\n  text-align: center;\n}\n\n.bio p {\n  word-wrap: break-word;\n  /* padding: 0px 30px; */\n}\n\n@media screen and (max-width: 400px) {\n  .meet {\n    flex-direction: column;\n  }\n\n  .bio,\n  .profile {\n    width: 100%;\n    max-width: 100%;\n  }\n}\n\n.practiceAreas {\n  display: flex;\n  flex-direction: column;\n  background-color: #FFFFFF;\n  padding: 30px;\n  box-shadow: inset 0 3px 6px rgba(0, 0, 0, 0.16);\n}\n\n\n\n.practiceAreas .areas {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 30px;\n  align-items: space-between;\n  justify-content: center;\n}\n\n.practiceAreas .areas>.area {\n  display: flex;\n  flex: 1 0 290px;\n  max-width: 290px;\n  height: 320px;\n  background: #F7F7F7;\n  border-radius: 2px;\n  flex-direction: column;\n  margin: 0 30px 30px 0;\n  position: relative;\n}\n\n.practiceAreas .areas>.area:hover {\n  filter: brightness(1.2);\n  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\n  transition: box-shadow 0.3s ease-in-out;\n  cursor: pointer;\n}\n\n.areaImage {\n  width: 100%;\n  height: 200px;\n  background-color: lightgray;\n}\n\n.areaEatingConcerns {\n  background: url("+o+") no-repeat;\n  background-size: 100% 140%;\n  background-position: left bottom -50px;\n}\n\n.areaLifestyle {\n  background: url("+i+") no-repeat;\n  background-size: cover;\n  background-position: left bottom -65px;\n}\n/* \n.areaLifestyle.lazy {\n  background: url('../res/lifestyle-placeholder.jpg') no-repeat;\n  background-size: cover;\n  background-position: left bottom -65px;\n} */\n\n.areaMedicalProblems {\n  background: url("+l+") no-repeat;\n  background-size: 100% 140%;\n  background-position: left;\n}\n\n/* .areaMedicalProblems.lazy {\n  background: url('../res/medicalproblems-placeholder.jpg') no-repeat;\n} */\n\n.areaRelationships {\n  background: url("+s+") no-repeat;\n  background-size: cover;\n  background-position: left bottom -80px;\n}\n/* \n.areaRelationshipsj.lazy {\n  background: url('../res/relationships.jpg') no-repeat;\n} */\n\n.areaStress {\n  background: url("+c+") no-repeat;\n  background-size: cover;\n  background-position: left bottom -80px;\n}\n\n/* .areaStress.lazy {\n  background: url('../res/stressmanagement-placeholder.jpg') no-repeat;\n} */\n\n.areaTransitions {\n  background: url("+u+") no-repeat;\n  background-size: cover;\n  background-position: left -20px;\n}\n\n/* .areaTransitions .lazy {\n  background: url('../res/transitions-placeholder.jpg') no-repeat;\n} */\n\n.areaText {\n  font-size: 30px;\n  height: 120px;\n  max-height: 120px;\n}\n\n.areaText div {\n  margin-left: 42px;\n  margin-top: 12px;\n}\n\n.areaOverlay {\n  background: transparent;\n  border: 1px solid black;\n  border-radius: 2px;\n  position: absolute;\n  width: 230px;\n  height: 260px;\n  margin: 30px;\n}\n\n.services {\n  height: 400px;\n  background-color: #FBEEC1;\n  display: flex;\n}\n\n.servicesDescription {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n}\n\n@media screen and (max-width: 400px) {\n  .servicesDescription {\n    width: 100%;\n  }\n\n  .servicesImage {\n    width: 0%;\n    display: none;\n  }\n\n  .hero-content blockquote h1 {\n    font-size: 1.75rem;\n  }\n\n  .hero-content blockquote footer {\n    font-size: 1.25rem;\n  }\n}\n\n.button {\n  display: inline-block;\n  border: none;\n  border-radius: 2px;\n  margin: 0;\n  text-decoration: none;\n  background: rgba(171, 208, 230, 1);\n  font-size: 18px;\n  cursor: pointer;\n  text-align: center;\n  transition: background 200ms ease-in-out, transform 100ms ease;\n  -webkit-appearance: none;\n  padding: 10px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.button:hover {\n  background: rgb(202, 226, 240);\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n}\n\n.readMore {\n  display: flex;\n  justify-content: center;\n}\n\n.classes {\n  display: flex;\n  justify-content: center;\n  background: #FFFFFF;\n  padding: 30px;\n  box-shadow: inset 0 3px 6px rgba(0, 0, 0, 0.16);\n}\n\n\n.contact {\n  background-color: #FFFFFF;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-top: 30px;\n  padding-bottom: 30px;\n}\n\n.contact form {\n  margin-top: 30px;\n}\n\n\n.group {\n  position: relative;\n  margin-bottom: 45px;\n}\n\ninput,\ntextarea {\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 300px;\n  border: none;\n  border-bottom: 1px solid #3f4c4e;\n  background: transparent;\n  color: #3f4c4e;\n}\n\ninput:focus {\n  outline: none;\n}\n\ntextarea:focus {\n  outline: none;\n}\n\n/* LABEL ======================================= */\nlabel {\n  color: #3f4c4e;\n  font-size: 18px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 0.2s ease all;\n  -moz-transition: 0.2s ease all;\n  -webkit-transition: 0.2s ease all;\n}\n\n/* active state */\ninput:focus~label,\ninput:valid~label {\n  top: -20px;\n  font-size: 14px;\n  color: #FFFFFF;\n}\n\ntextarea {\n  resize: none;\n  padding: 0;\n}\n\ntextarea:focus~label,\ntextarea:valid~label {\n  top: -20px;\n  font-size: 14px;\n  color: #FFFFFF;\n}\n\n/* TODO learn this */\n\n/* BOTTOM BARS ================================= */\n.bar {\n  position: relative;\n  display: block;\n  width: 300px;\n}\n\n.bar:before,\n.bar:after {\n  content: '';\n  height: 2px;\n  width: 0;\n  bottom: 1px;\n  position: absolute;\n  background: #3f4c4e;\n  transition: 0.2s ease all;\n  -moz-transition: 0.2s ease all;\n  -webkit-transition: 0.2s ease all;\n}\n\n.bar:before {\n  left: 50%;\n}\n\n.bar:after {\n  right: 50%;\n}\n\n/* active state */\ninput:focus~.bar:before,\ninput:focus~.bar:after {\n  width: 50%;\n}\n\n/* active state */\ntextarea:focus~.bar:before,\ntextarea:focus~.bar:after {\n  width: 50%;\n}\n\n/* HIGHLIGHTER ================================== */\n.highlight {\n  position: absolute;\n  height: 60%;\n  width: 100px;\n  top: 25%;\n  left: 0;\n  pointer-events: none;\n  opacity: 0.5;\n}\n\n/* active state */\ninput:focus~.highlight {\n  -webkit-animation: inputHighlighter 0.3s ease;\n  -moz-animation: inputHighlighter 0.3s ease;\n  animation: inputHighlighter 0.3s ease;\n}\n\n/* active state */\ntextarea:focus~.highlight {\n  -webkit-animation: inputHighlighter 0.3s ease;\n  -moz-animation: inputHighlighter 0.3s ease;\n  animation: inputHighlighter 0.3s ease;\n}\n\n/* ANIMATIONS ================ */\n@-webkit-keyframes inputHighlighter {\n  from {\n    background: #3f4c4e;\n  }\n\n  to {\n    width: 0;\n    background: transparent;\n  }\n}\n\n@-moz-keyframes inputHighlighter {\n  from {\n    background: #3f4c4e;\n  }\n\n  to {\n    width: 0;\n    background: transparent;\n  }\n}\n\n@keyframes inputHighlighter {\n  from {\n    background: #3f4c4e;\n  }\n\n  to {\n    width: 0;\n    background: transparent;\n  }\n}\n\n\n.footer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #EDEAE5;\n  padding: 20px;\n}\n\n#address:before {\n  content: '\\007C';\n  padding: 0 15px\n}\n\n#address:after {\n  content: '\\007C';\n  padding: 0 15px;\n}\n\n@media screen and (max-width: 776px) {\n\n  .footer {\n    flex-direction: column;\n    text-align: center;\n  }\n\n  #address:before {\n    content: none;\n    padding: 0\n  }\n  \n  #address:after {\n    content: none;\n    padding: 0;\n  }\n}\n\n\n.link:before {\n  content: \"\";\n  position: absolute;\n  width: 100%;\n  height: 3px;\n  bottom: -2px;\n  left: 0;\n  background: #3f4c4e;\n  visibility: hidden;\n  border-radius: 5px;\n  transform: scaleX(0);\n  transition: .25s linear;\n}\n\n.link:hover:before,\n.link:focus:before {\n  visibility: visible;\n  transform: scaleX(1);\n}\n\n/* .navMenu:before {\n  bottom: -5px !important;\n} */\n\n.contact {\n  background: center / cover no-repeat url("+p+");\n}\n\n/* .contact.lazy {\n  background: center / cover no-repeat url('../res/succulentBurst-placeholder.jpg');\n} */\n\n.moreClasses {\n  background: center / cover no-repeat url("+m+");\n}\n/* \n.moreClasses.lazy {\n  background: center / cover no-repeat url('../res/pineapple-placeholder.jpg');\n} */\n\n.moreResources {\n  background: center / cover no-repeat url("+d+");\n}\n/* \n.moreResources.lazy {\n  background: center / cover no-repeat url('../res/moreResources-placeholder.jpg');\n} */\n\n.morePractice {\n  background: center / cover no-repeat url("+h+");\n}\n\n/* .morePractice.lazy {\n  background: center / cover no-repeat url('../res/practiceareas-placeholder.jpg');\n} */\n\n.moreServices {\n  background: center / cover no-repeat url("+f+");\n}\n\n.moreServices.lazy {\n  /* background: center / cover no-repeat url('../res/cornerplant-placeholder.jpg'); */\n}\n\n.moreDocuments {\n  background: center / cover no-repeat url("+g+");\n\n}\n\n/* .moreDocuments.lazy {\n  background: center / cover no-repeat url('../res/succulentmat-placeholder.jpg');\n\n} */\n\n.signature {\n  font-family: 'Dancing Script', cursive;\n  font-size: 26px;\n}\n\n.navMenu:hover {\n  filter: brightness(1.2);\n}\n\n.page-title {\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n}\n\n.page-title .title {\n  font-size: 4rem;\n  font-family: 'Dancing Script', cursive;\n}\n\n.card {\n  background: #F7F7F7;\n  border-radius: 2px;\n  margin: 50px 15%;\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  min-width: 100px;\n}\n\n.card-body {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 100px;\n  padding: 20px;\n}\n\n.card-title {\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n  padding: 20px;\n  border-bottom: 1px solid #222222;\n  height: 100%;\n}\n\n.card-1 {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n}\n\n.card-2 {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.card-3 {\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n}\n\n.card-4 {\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n}\n\n.card-5 {\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);\n}\n\n.background {\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n\n.drawer-overlay {\n  position: fixed;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.30);\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  z-index: 20;\n}\n\n.drawer-container {\n  position: absolute;\n  left: 0;\n  top: 0;\n  display: flex;\n  width: 155px;\n  height: calc(100vh - 50px);\n  z-index: 100;\n  /* transition: all 0.3s ease-in-out; */\n  top: 50px;\n  position: fixed;\n}\n\n.drawer {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: #EDEAE5;\n  justify-content: flex-start;\n  box-shadow: 11px 10px 8px 0px rgba(0, 0, 0, 0.25), 10px 0 5px -5px rgba(0, 0, 0, 0);\n  transition: none;\n}\n\n.drawer+.dark {\n  background-color: #C0C3C6;\n}\n\n.drawer-button {\n  width: 100%;\n  height: 40px;\n}\n\n.header-nav-button {\n  height: 40px;\n  width: 100px;\n}\n\n.drawer-item {\n  display: flex;\n}\n\n.drawer-item>div {\n  flex: 1;\n  padding-bottom: 10px;\n}\n\n.header-hamburger {\n  cursor: pointer;\n}\n\n.header-hamburger:hover * {\n  color: #879092;\n}\n\n.hide {\n  display: none;\n}\n\n/* .moreServices h2 {\n  text-align: center;\n  font-size: 3rem;\n  margin: unset;\n  font-family: Roboto, sans-serif;\n} */",""])},function(e,n,t){"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map(function(n){var t=function(e,n){var t=e[1]||"",a=e[3];if(!a)return t;if(n&&"function"==typeof btoa){var r=(i=a,l=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(s," */")),o=a.sources.map(function(e){return"/*# sourceURL=".concat(a.sourceRoot).concat(e," */")});return[t].concat(o).concat([r]).join("\n")}var i,l,s;return[t].join("\n")}(n,e);return n[2]?"@media ".concat(n[2],"{").concat(t,"}"):t}).join("")},n.i=function(e,t){"string"==typeof e&&(e=[[null,e,""]]);for(var a={},r=0;r<this.length;r++){var o=this[r][0];null!=o&&(a[o]=!0)}for(var i=0;i<e.length;i++){var l=e[i];null!=l[0]&&a[l[0]]||(t&&!l[2]?l[2]=t:t&&(l[2]="(".concat(l[2],") and (").concat(t,")")),n.push(l))}},n}},function(e,n,t){"use strict";e.exports=function(e,n){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)||n?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},function(e,n){e.exports="dist/res/hero.jpg"},function(e,n){e.exports="dist/res/eatingconcerns.jpg"},function(e,n){e.exports="dist/res/lifestyle.jpg"},function(e,n){e.exports="dist/res/medicalproblems.jpg"},function(e,n){e.exports="dist/res/relationships.jpg"},function(e,n){e.exports="dist/res/stressmanagement.jpg"},function(e,n){e.exports="dist/res/transitions.jpg"},function(e,n){e.exports="dist/res/succulentBurst.jpg"},function(e,n){e.exports="dist/res/pineapple.jpg"},function(e,n){e.exports="dist/res/moreResources.jpg"},function(e,n){e.exports="dist/res/practiceareas.jpg"},function(e,n){e.exports="dist/res/cornerplant.jpg"},function(e,n){e.exports="dist/res/succulentmat.jpg"},function(e,n,t){var a,r,o={},i=(a=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=a.apply(this,arguments)),r}),l=function(e){var n={};return function(e,t){if("function"==typeof e)return e();if(void 0===n[e]){var a=function(e,n){return n?n.querySelector(e):document.querySelector(e)}.call(this,e,t);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(e){a=null}n[e]=a}return n[e]}}(),s=null,c=0,u=[],p=t(22);function m(e,n){for(var t=0;t<e.length;t++){var a=e[t],r=o[a.id];if(r){r.refs++;for(var i=0;i<r.parts.length;i++)r.parts[i](a.parts[i]);for(;i<a.parts.length;i++)r.parts.push(v(a.parts[i],n))}else{var l=[];for(i=0;i<a.parts.length;i++)l.push(v(a.parts[i],n));o[a.id]={id:a.id,refs:1,parts:l}}}}function d(e,n){for(var t=[],a={},r=0;r<e.length;r++){var o=e[r],i=n.base?o[0]+n.base:o[0],l={css:o[1],media:o[2],sourceMap:o[3]};a[i]?a[i].parts.push(l):t.push(a[i]={id:i,parts:[l]})}return t}function h(e,n){var t=l(e.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var a=u[u.length-1];if("top"===e.insertAt)a?a.nextSibling?t.insertBefore(n,a.nextSibling):t.appendChild(n):t.insertBefore(n,t.firstChild),u.push(n);else if("bottom"===e.insertAt)t.appendChild(n);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=l(e.insertAt.before,t);t.insertBefore(n,r)}}function f(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var n=u.indexOf(e);n>=0&&u.splice(n,1)}function g(e){var n=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var a=function(){0;return t.nc}();a&&(e.attrs.nonce=a)}return b(n,e.attrs),h(e,n),n}function b(e,n){Object.keys(n).forEach(function(t){e.setAttribute(t,n[t])})}function v(e,n){var t,a,r,o;if(n.transform&&e.css){if(!(o="function"==typeof n.transform?n.transform(e.css):n.transform.default(e.css)))return function(){};e.css=o}if(n.singleton){var i=c++;t=s||(s=g(n)),a=E.bind(null,t,i,!1),r=E.bind(null,t,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(e){var n=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",b(n,e.attrs),h(e,n),n}(n),a=function(e,n,t){var a=t.css,r=t.sourceMap,o=void 0===n.convertToAbsoluteUrls&&r;(n.convertToAbsoluteUrls||o)&&(a=p(a));r&&(a+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var i=new Blob([a],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,t,n),r=function(){f(t),t.href&&URL.revokeObjectURL(t.href)}):(t=g(n),a=function(e,n){var t=n.css,a=n.media;a&&e.setAttribute("media",a);if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}.bind(null,t),r=function(){f(t)});return a(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;a(e=n)}else r()}}e.exports=function(e,n){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(n=n||{}).attrs="object"==typeof n.attrs?n.attrs:{},n.singleton||"boolean"==typeof n.singleton||(n.singleton=i()),n.insertInto||(n.insertInto="head"),n.insertAt||(n.insertAt="bottom");var t=d(e,n);return m(t,n),function(e){for(var a=[],r=0;r<t.length;r++){var i=t[r];(l=o[i.id]).refs--,a.push(l)}e&&m(d(e,n),n);for(r=0;r<a.length;r++){var l;if(0===(l=a[r]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete o[l.id]}}}};var y,w=(y=[],function(e,n){return y[e]=n,y.filter(Boolean).join("\n")});function E(e,n,t,a){var r=t?"":a.css;if(e.styleSheet)e.styleSheet.cssText=w(n,r);else{var o=document.createTextNode(r),i=e.childNodes;i[n]&&e.removeChild(i[n]),i.length?e.insertBefore(o,i[n]):e.appendChild(o)}}},function(e,n){e.exports=function(e){var n="undefined"!=typeof window&&window.location;if(!n)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var t=n.protocol+"//"+n.host,a=t+n.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,n){var r,o=n.trim().replace(/^"(.*)"$/,function(e,n){return n}).replace(/^'(.*)'$/,function(e,n){return n});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?e:(r=0===o.indexOf("//")?o:0===o.indexOf("/")?t+o:a+o.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")})}},function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(2),i=t.n(o),l=t(1),s=t.n(l);function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function u(e){return"/"===e.charAt(0)}function p(e,n){for(var t=n,a=t+1,r=e.length;a<r;t+=1,a+=1)e[t]=e[a];e.pop()}var m=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",t=e&&e.split("/")||[],a=n&&n.split("/")||[],r=e&&u(e),o=n&&u(n),i=r||o;if(e&&u(e)?a=t:t.length&&(a.pop(),a=a.concat(t)),!a.length)return"/";var l=void 0;if(a.length){var s=a[a.length-1];l="."===s||".."===s||""===s}else l=!1;for(var c=0,m=a.length;m>=0;m--){var d=a[m];"."===d?p(a,m):".."===d?(p(a,m),c++):c&&(p(a,m),c--)}if(!i)for(;c--;c)a.unshift("..");!i||""===a[0]||a[0]&&u(a[0])||a.unshift("");var h=a.join("/");return l&&"/"!==h.substr(-1)&&(h+="/"),h};"function"==typeof Symbol&&Symbol.iterator;var d=!0,h="Invariant failed";var f=function(e,n){if(!e)throw d?new Error(h):new Error(h+": "+(n||""))};function g(e){return"/"===e.charAt(0)?e:"/"+e}function b(e,n){return function(e,n){return new RegExp("^"+n+"(\\/|\\?|#|$)","i").test(e)}(e,n)?e.substr(n.length):e}function v(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function y(e){var n=e.pathname,t=e.search,a=e.hash,r=n||"/";return t&&"?"!==t&&(r+="?"===t.charAt(0)?t:"?"+t),a&&"#"!==a&&(r+="#"===a.charAt(0)?a:"#"+a),r}function w(e,n,t,a){var r;"string"==typeof e?(r=function(e){var n=e||"/",t="",a="",r=n.indexOf("#");-1!==r&&(a=n.substr(r),n=n.substr(0,r));var o=n.indexOf("?");return-1!==o&&(t=n.substr(o),n=n.substr(0,o)),{pathname:n,search:"?"===t?"":t,hash:"#"===a?"":a}}(e)).state=n:(void 0===(r=c({},e)).pathname&&(r.pathname=""),r.search?"?"!==r.search.charAt(0)&&(r.search="?"+r.search):r.search="",r.hash?"#"!==r.hash.charAt(0)&&(r.hash="#"+r.hash):r.hash="",void 0!==n&&void 0===r.state&&(r.state=n));try{r.pathname=decodeURI(r.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+r.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return t&&(r.key=t),a?r.pathname?"/"!==r.pathname.charAt(0)&&(r.pathname=m(r.pathname,a.pathname)):r.pathname=a.pathname:r.pathname||(r.pathname="/"),r}function E(){var e=null;var n=[];return{setPrompt:function(n){return e=n,function(){e===n&&(e=null)}},confirmTransitionTo:function(n,t,a,r){if(null!=e){var o="function"==typeof e?e(n,t):e;"string"==typeof o?"function"==typeof a?a(o,r):r(!0):r(!1!==o)}else r(!0)},appendListener:function(e){var t=!0;function a(){t&&e.apply(void 0,arguments)}return n.push(a),function(){t=!1,n=n.filter(function(e){return e!==a})}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];n.forEach(function(e){return e.apply(void 0,t)})}}}var x=!("undefined"==typeof window||!window.document||!window.document.createElement);function k(e,n){n(window.confirm(e))}var C="popstate",T="hashchange";function S(){try{return window.history.state||{}}catch(e){return{}}}function N(e){void 0===e&&(e={}),x||f(!1);var n,t=window.history,a=(-1===(n=window.navigator.userAgent).indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,r=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e,i=o.forceRefresh,l=void 0!==i&&i,s=o.getUserConfirmation,u=void 0===s?k:s,p=o.keyLength,m=void 0===p?6:p,d=e.basename?v(g(e.basename)):"";function h(e){var n=e||{},t=n.key,a=n.state,r=window.location,o=r.pathname+r.search+r.hash;return d&&(o=b(o,d)),w(o,a,t)}function N(){return Math.random().toString(36).substr(2,m)}var I=E();function j(e){c(H,e),H.length=t.length,I.notifyListeners(H.location,H.action)}function M(e){(function(e){void 0===e.state&&navigator.userAgent.indexOf("CriOS")})(e)||O(h(e.state))}function A(){O(h(S()))}var F=!1;function O(e){if(F)F=!1,j();else{I.confirmTransitionTo(e,"POP",u,function(n){n?j({action:"POP",location:e}):function(e){var n=H.location,t=P.indexOf(n.key);-1===t&&(t=0);var a=P.indexOf(e.key);-1===a&&(a=0);var r=t-a;r&&(F=!0,z(r))}(e)})}}var D=h(S()),P=[D.key];function R(e){return d+y(e)}function z(e){t.go(e)}var _=0;function L(e){1===(_+=e)&&1===e?(window.addEventListener(C,M),r&&window.addEventListener(T,A)):0===_&&(window.removeEventListener(C,M),r&&window.removeEventListener(T,A))}var B=!1;var H={length:t.length,action:"POP",location:D,createHref:R,push:function(e,n){var r=w(e,n,N(),H.location);I.confirmTransitionTo(r,"PUSH",u,function(e){if(e){var n=R(r),o=r.key,i=r.state;if(a)if(t.pushState({key:o,state:i},null,n),l)window.location.href=n;else{var s=P.indexOf(H.location.key),c=P.slice(0,-1===s?0:s+1);c.push(r.key),P=c,j({action:"PUSH",location:r})}else window.location.href=n}})},replace:function(e,n){var r=w(e,n,N(),H.location);I.confirmTransitionTo(r,"REPLACE",u,function(e){if(e){var n=R(r),o=r.key,i=r.state;if(a)if(t.replaceState({key:o,state:i},null,n),l)window.location.replace(n);else{var s=P.indexOf(H.location.key);-1!==s&&(P[s]=r.key),j({action:"REPLACE",location:r})}else window.location.replace(n)}})},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&(e=!1);var n=I.setPrompt(e);return B||(L(1),B=!0),function(){return B&&(B=!1,L(-1)),n()}},listen:function(e){var n=I.appendListener(e);return L(1),function(){L(-1),n()}}};return H}function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function j(e){for(var n=1;n<arguments.length;n++)if(n%2){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.forEach(function(n){_(e,n,t[n])})}else Object.defineProperties(e,Object.getOwnPropertyDescriptors(arguments[n]));return e}function M(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function A(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function F(e,n,t){return n&&A(e.prototype,n),t&&A(e,t),e}function O(e,n){return!n||"object"!==I(n)&&"function"!=typeof n?P(e):n}function D(e){return(D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function P(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function R(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&z(e,n)}function z(e,n){return(z=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function _(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var L=function(e){function n(e){var t;M(this,n),_(P(t=O(this,D(n).call(this,e))),"history",void 0),_(P(t),"handleNav",function(e){switch(t.setState({page:e}),e.dock&&t.closeDrawer(),page.name){case"home":t.history.push("/");break;case"practice":t.history.push("/practice-areas");break;case"services":t.history.push("/services");break;case"classes":t.history.push("/classes");break;case"resources":t.history.push("/resources");break;case"docs":t.history.push("/client-documents")}}),_(P(t),"toggleDrawer",function(){t.setState(function(e){return{showDrawer:!e.showDrawer}})}),_(P(t),"closeDrawer",function(){t.setState({showDrawer:!1})}),t.state={page:{name:"home",scrollTo:null},showHamburger:!1,showDrawer:!1};var a=window.location.pathname;return t.currentPage=a,t.history=N(),t.history.listen(function(e){t.currentPage=e.pathname}),t}return R(n,r.a.Component),F(n,[{key:"componentDidMount",value:function(){var e=this;window.innerWidth>800?this.setState({showDrawer:!1}):this.setState({showDrawer:!1,showHamburger:!0}),window.addEventListener("resize",function(){var n=window.innerWidth,t=e.state.showHamburger;n>800&&t?e.setState({showDrawer:!1,showHamburger:!1}):n<800&&!t&&e.setState({showHamburger:!0})})}},{key:"render",value:function(){var e=this.state.page,n=e.name,t=r.a.createElement("div",null);switch(n){case"home":t=r.a.createElement(W,{onNav:this.handleNav});break;case"practice":t=r.a.createElement(q,null);break;case"services":t=r.a.createElement(G,null);break;case"classes":t=r.a.createElement($,null);break;case"resources":t=r.a.createElement(Z,null);break;case"docs":t=r.a.createElement(V,null);break;case"fees":t=r.a.createElement(J,null)}return r.a.createElement("div",{style:{display:"flex",flexDirection:"column",fontFamily:"Roboto, sans-serif"}},r.a.createElement(H,{showHamburger:this.state.showHamburger,active:n,onNav:this.handleNav,openDrawer:this.toggleDrawer}),r.a.createElement(B,{page:e,closeDrawer:this.closeDrawer,showDrawer:this.state.showDrawer,onNav:this.handleNav},t),r.a.createElement(U,{onNav:this.handleNav}))}}]),n}(),B=function(e){function n(){var e,t;M(this,n);for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];return _(P(t=O(this,(e=D(n)).call.apply(e,[this].concat(o)))),"handleDrawerOverlayClick",function(){t.props.closeDrawer()}),_(P(t),"renderDrawer",function(){var e=t.props.showDrawer,n=s()("drawer-container",{hide:!e}),a=s()("drawer-overlay",{hide:!e});return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:n},r.a.createElement(ie,{handleContactClick:function(){t.props.onNav({name:"home",scrollTo:"contact",dock:!0})},handleServicesClick:function(){t.props.onNav({name:"services",scrollTo:0,dock:!0})},handlePracticeClick:function(){t.props.onNav({name:"practice",scrollTo:0,dock:!0})},handleClassesClick:function(){t.props.onNav({name:"classes",scrollTo:0,dock:!0})},handleDocumentsClick:function(){t.props.onNav({name:"docs",scrollTo:0,dock:!0})},handleResourcesClick:function(){t.props.onNav({name:"resources",scrollTo:0,dock:!0})}})),r.a.createElement("div",{className:a,onClick:t.handleDrawerOverlayClick}))}),t}return R(n,r.a.Component),F(n,[{key:"componentDidMount",value:function(){this.props.page.scrollTo&&setTimeout(function(){return document.getElementById("top").scrollIntoView()},0)}},{key:"componentDidUpdate",value:function(){var e=this.props.page;null===e.scrollTo&&void 0===e.scrollTo||("string"==typeof e.scrollTo&&setTimeout(function(){return document.getElementById(e.scrollTo).scrollIntoView({behavior:"smooth"})},0),"number"==typeof e.scrollTo&&setTimeout(function(){return window.scrollTo(0,e.scrollTo)},0))}},{key:"render",value:function(){var e=this.props.page.name,n=s()("backdrop",{"hero lazy":"home"===e,moreServices:"services"===e,moreResources:"resources"===e,moreDocuments:"docs"===e,moreFees:"fees"===e,moreClasses:"classes"===e,morePractice:"practice"===e});return r.a.createElement("div",{style:{minHeight:"calc(100vh - 60px)"}},r.a.createElement("div",{className:n}),r.a.createElement("div",null,this.renderDrawer(),this.props.children))}}]),n}(),H=function(e){var n={position:"fixed",left:0,top:0,height:50,width:"100%",display:"flex",justifyContent:"space-around",alignItems:"center",backgroundColor:"#EDEAE5",boxShadow:"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)",zIndex:24},t={cursor:"pointer"},a=e.active,o=e.onNav,i=e.showHamburger,l=e.openDrawer;return i?(n.justifyContent="space-between",r.a.createElement("div",{style:n},r.a.createElement("div",{className:"header-nav header-hamburger",style:{marginLeft:20},onClick:l},r.a.createElement("span",null,r.a.createElement("svg",{className:"hamburger",width:"34",height:"34",viewBox:"0 0 24 24"},r.a.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),r.a.createElement("path",{fill:"currentColor",d:"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"})))),r.a.createElement("div",{onClick:function(){return o({name:"home",scrollTo:"top"})},className:s()("navMenu","signature","link",{"navMenu--active":"home"===a}),style:j({},t,{marginRight:20})},"Stephanie Smith, Psy.D."))):r.a.createElement("div",{style:n},r.a.createElement("div",{onClick:function(){return o({name:"home",scrollTo:"top"})},className:s()("navMenu","signature","link",{"navMenu--active":"home"===a}),style:t},"Stephanie Smith, Psy.D."),r.a.createElement("div",{onClick:function(){return o({name:"practice",scrollTo:0})},className:s()("navMenu","link",{"navMenu--active":"practice"===a}),style:t},"Practice Areas"),r.a.createElement("div",{onClick:function(){return o({name:"services",scrollTo:0})},className:s()("navMenu","link",{"navMenu--active":"services"===a}),style:t},"Services"),r.a.createElement("div",{onClick:function(){return o({name:"classes",scrollTo:0})},className:s()("navMenu","link",{"navMenu--active":"classes"===a}),style:t},"Classes"),r.a.createElement("div",{onClick:function(){return o({name:"docs",scrollTo:0})},className:s()("navMenu","link",{"navMenu--active":"docs"===a}),style:t},"Documents"),r.a.createElement("div",{onClick:function(){return o({name:"home",scrollTo:"contact"})},className:s()("navMenu","link",{"navMenu--active":"contact"===a}),style:t},"Contact"),r.a.createElement("div",{onClick:function(){return o({name:"resources",scrollTo:0})},className:s()("navMenu","link",{"navMenu--active":"resources"===a}),style:t},"Resources"))},U=function(e){return r.a.createElement("div",{className:"footer"},r.a.createElement("div",null,r.a.createElement("span",null,"Stephanie Smith, Psy.D."),r.a.createElement("span",{id:"address"},"801 Alhambra Blvd, Suite 2B Sacramento, CA 95816"),r.a.createElement("span",null,"(916) 399-3615")),r.a.createElement("div",null,r.a.createElement("a",{href:"https://www.psychologytoday.com/profile/473076",class:"sx-verified-seal"}),r.a.createElement("script",{type:"text/javascript",src:"https://member.psychologytoday.com/verified-seal.js","data-badge":"14","data-id":"473076","data-code":"aHR0cHM6Ly93d3cucHN5Y2hvbG9neXRvZGF5LmNvbS9hcGkvdmVyaWZpZWQtc2VhbC9zZWFscy9bQkFER0VdL3Byb2ZpbGUvW1BST0ZJTEVfSURdP2NhbGxiYWNrPXN4Y2FsbGJhY2s="})))},W=function(e){var n=e.onNav;return r.a.createElement("div",null,r.a.createElement("div",{className:"backdrop"},r.a.createElement("div",{className:"hero ".concat("")})),r.a.createElement("div",{className:"content",id:"top"},r.a.createElement("div",{className:"hero-content"},r.a.createElement("blockquote",null,r.a.createElement("h1",null,'"And the day came when the risk to remain tight as a bud was more painful than the risk it took to blossom."'),r.a.createElement("footer",null,"- Anais Nin"))),r.a.createElement("div",{className:"meet card-2",id:"meet"},r.a.createElement("div",{className:"profile"},r.a.createElement("img",{className:"profilePhoto card-1",src:"res/profile.jpg"})),r.a.createElement("div",{className:"bio"},r.a.createElement("h2",{className:"bioTitle"},"Meet Dr. Stephanie Smith"),r.a.createElement("h3",{className:"bioSubtitle"},"Clinical Psychologist"),Y)),r.a.createElement("div",{className:"practiceAreas",id:"practice"},r.a.createElement("h2",null,"Practice Areas"),r.a.createElement("div",{className:"areas"},r.a.createElement("div",{className:"area card-1",onClick:function(){return n({name:"practice",scrollTo:"moreEatingConcerns"})}},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaEatingConcerns ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Eating",r.a.createElement("br",null)," Concerns"))),r.a.createElement("div",{className:"area card-1",onClick:function(){return n({name:"practice",scrollTo:"moreLifestyleChanges"})}},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaLifestyle ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Lifestyle",r.a.createElement("br",null)," Changes"))),r.a.createElement("div",{className:"area card-1",onClick:function(){return n({name:"practice",scrollTo:"moreLifeTransitions"})}},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaTransitions ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Life",r.a.createElement("br",null)," Transitions"))),r.a.createElement("div",{className:"area card-1",onClick:function(){return n({name:"practice",scrollTo:"moreReleationshipChallenges"})}},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaRelationships ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Relationship",r.a.createElement("br",null)," Challenges"))),r.a.createElement("div",{className:"area card-1",onClick:function(){return n({name:"practice",scrollTo:"moreMedicalProblems"})}},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaMedicalProblems ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Health",r.a.createElement("br",null)," Difficulties"))),r.a.createElement("div",{className:"area card-1",onClick:function(){return n({name:"practice",scrollTo:"moreStressManagement"})}},r.a.createElement("div",{className:"areaOverlay"}),r.a.createElement("div",{className:"areaImage areaStress ".concat("")}),r.a.createElement("div",{className:"areaText"},r.a.createElement("div",null,"Stress",r.a.createElement("br",null)," Management")))),r.a.createElement("div",{className:"readMore"},r.a.createElement("button",{className:"readMore button",onClick:function(){return n({name:"practice",scrollTo:0})}},"READ MORE"))),r.a.createElement("div",{className:"contact card-2 ".concat(""),id:"contact"},r.a.createElement("h2",null,"Change begins today"),r.a.createElement("h3",{style:{fontSize:23}},"Request a consultation"),r.a.createElement("p",{style:{textAlign:"center",fontSize:19,lineHeight:1.9,marginTop:40}},"Call/Text: 916-399-3615",r.a.createElement("br",null),"Email: ",r.a.createElement("a",{type:"email",href:"mailto:StephanieSmithPsyD@protonmail.com",target:"_blank"},"StephanieSmithPsyD@protonmail.com"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.psychologytoday.com/profile/473076",target:"_blank"},"Connect through Psychology Today")))))},q=(r.a.createElement(r.a.Fragment,null,r.a.createElement("form",null,r.a.createElement("div",{class:"group"},r.a.createElement("input",{type:"text",required:!0}),r.a.createElement("span",{class:"highlight"}),r.a.createElement("span",{class:"bar"}),r.a.createElement("label",null,"Name")),r.a.createElement("div",{class:"group"},r.a.createElement("input",{type:"email",required:!0}),r.a.createElement("span",{class:"highlight"}),r.a.createElement("span",{class:"bar"}),r.a.createElement("label",null,"Email")),r.a.createElement("div",{class:"group"},r.a.createElement("input",{type:"phone",required:!0}),r.a.createElement("span",{class:"highlight"}),r.a.createElement("span",{class:"bar"}),r.a.createElement("label",null,"Phone")),r.a.createElement("div",{class:"group"},r.a.createElement("textarea",{type:"text",required:!0}),r.a.createElement("span",{class:"highlight"}),r.a.createElement("span",{class:"bar"}),r.a.createElement("label",null,"Message"))),r.a.createElement("div",{class:"readMore"},r.a.createElement("button",{className:"button"},"SEND"))),function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Practice Areas"}),r.a.createElement(re,{body:X}))}),G=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Services"}),r.a.createElement(re,{body:K}),r.a.createElement(re,{body:Q}),r.a.createElement(re,{body:ee}))},$=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Classes"}),r.a.createElement(re,{body:ne}))},V=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Client Documents"}),r.a.createElement(re,{body:ae}))},Z=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Resources"}),r.a.createElement(re,{body:te}))},J=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(oe,{title:"Fees"}),r.a.createElement(re,{body:fees}))},Y=r.a.createElement("p",null,"Welcome and thank you for visiting! This is a place to explore the possibility of change for a better tomorrow. There is no “one size fits all” approach to our time together. I work collaboratively with my clients to create an environment of respect and compassion that can be applied to renew their lives. Therapy has the power to both soothe and transform. I use techniques of one-on-one therapy and classes to spark meaningful and lasting change. I am known by my clients as being down to earth, genuine, and relatable. I look forward to partnering together to build your healthier tomorrow."),X=r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",{id:"moreEatingConcerns"},"Eating Concerns"),r.a.createElement("p",null,"Individuals noticing mindless, stress, emotional, or binge eating behaviors are welcome to consider both individual and class-based therapies with me. My approach to these concerns recognizes the complex role eating can play as a mechanism of coping for individual, family, and culturally systemic issues. We work together to acknowledge the fullness of this role as well as it's history, while honoring the desire that may exist to change. Through our work we can begin to develop new and healthier coping strategies as a natural outcome of increased awareness and self-compassion. I tailor my approach to the needs and style of the individual with whom I am working."),r.a.createElement("h3",{id:"moreLifestyleChanges"},"Lifestyle Changes"),r.a.createElement("p",null,'Most of us can relate to the running mental list of things we know we "should" be doing in order to be healthier. Maybe this is moving our bodies more, eating differently, improving sleep habits, or disconnecting from technology. Maybe it could be these things plus many more! While certainly excellent habits, looking at a list of personal wellness "to dos" can be overwhelming. In fact, we often avoid thinking about these healthy living items because it can feel hopeless. Unfortunately, often this means staying stuck in a rut of feeling unhealthy. Together, we can create a plan of small steps to work towards connecting behavior changes with your deepest values. Things that may have felt forced in the past can become things we are eager for. I will leverage my training in Lifestyle Medicine to help set manageable and research supported aims to produce real improvements in your health.'),r.a.createElement("h3",{id:"moreLifeTransitions"},"Phase of Life Issues/Life Transitions"),r.a.createElement("p",null,'Though the phrase, "the only thing constant is change" is one familiar to many of us, this often feels like little comfort during the turmoil of a significant transition. Changes in life circumstances can impact us on every level of our being and external life. Seeking therapy during these times can be both anchor and guide light. I will support you to process the loss of how things have been. When you are ready, we will set consciously developed goals for the phase of life that you find yourself in now. We will work together to identify healthy core components of who you are evolving to be, and center our attention to nurture this growth. There is no set timeline of how long an adjustment period lasts. I will help you to move into the next part of your life in healthful ways, as quickly as is reasonable, and in complete respect for your own pace.'),r.a.createElement("h3",{id:"moreRelationshipCallenges"},"Relationship Challenges"),r.a.createElement("p",null,"Romantic, family, social, and occupational relationships can all be sources of significant pleasure and, consequently, significant pain. There are a multitude of reasons relationships can become troubled. Many of the roots of these reasons can be traced to communication clarity. While we cannot change other people, we can identify personal qualities in ourselves that we wish to change for the wellbeing of a current or future relationship. Working towards identifying these areas, creating mindful awareness around them, and making values-based changes can provide both personal benefits and improvements to the relationship. We can work together to identify and optimize these changes while prioritizing effective and clear communication as the cornerstone to improved relationships."),r.a.createElement("h3",{id:"moreHealthDifficulties"},"Health Difficulties"),r.a.createElement("p",null,"There is no doubt that our physical wellbeing impacts our psychological wellbeing and vice versa. Whether you are looking for support in improving your management of a medical problem, handling the stress around it, or believe there may be lifestyle changes that will reverse the condition, I would be happy to support this aspect of your health. I am a trained health psychologist and work regularly with both chronic and acute medical conditions. I have personal and professional experience with the impacts physical health can have not only on oneself, but also on those around us. I believe support can make a substantive difference in managing a health concern as well as the emotional and social impacts of this. I will work with you to accept those realities that are unchanging, as well as recognize opportunities for positive growth."),r.a.createElement("h3",{id:"moreStressManagement"},"Stress Management"),r.a.createElement("p",null,"At times we can find ourselves overwhelmed. The reasons for feeling overwhelmed might seem clear, or they may be hard to understand. It can feel like being trapped in parts of your own life. Talking through your stressors with a professional can allow space around painful parts of your experience that could ease the pressure. There may also be alternative perspectives that you aren’t able to see from being right in the thick of the stress, that may be visible from an outside perspective. Therapy can provide support to process your experiences and free you to be a more whole version of yourself; able to engage with the rest of your life and the people in it.")),K=r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",{style:{textAlign:"center"}},"What to Expect"),r.a.createElement("h3",null,"Telephone Consult"),r.a.createElement("p",null,"As our first contact for either individual therapy or classes I offer a complementary 15-minute phone consultation. This is an opportunity for us to connect about the issues that bring you into care, and to determine whether working together is the best fit for your needs. I can answer any questions that you may have about coming into care and set up your first appointment or class.",r.a.createElement("br",null),r.a.createElement("i",null,"15-min initial telephone consult— free")),r.a.createElement("h3",null,"Initial Appointment"),r.a.createElement("p",null,"An initial individual therapy appointment is a 60-minute appointment. During this appointment I will review your complete intake form with you to ensure that I have an appropriate understanding of some of your history, what brings you into care, and your goals for our work together. I will answer any questions that you have to the best of my ability. We will also use this appointment to create some initial goals for care and to set up our mutual expectations for treatment.",r.a.createElement("br",null),r.a.createElement("i",null,"60-min initial individual appointment— $150")),r.a.createElement("h3",null,"Return Appointments"),r.a.createElement("p",null,"Return appointments are 50-minute appointments. During return appointments we will work together on your goals and I will support you through the process. We will regularly check in about the progress of care and make adjustments as needed to ensure that we are working effectively together.",r.a.createElement("br",null),r.a.createElement("i",null,"50-min return individual appointment— $150")),r.a.createElement("h3",null,"Classes"),r.a.createElement("p",null,'Classes are 90 minutes in length. Due to space needed, classes are held at a nearby location separate from the main therapy office. More information about class and class content can be found under the "Classes" tab. Though classes take place over 4 sessions, the full fee must be paid in advance of the first session. After this payment, no additional charges are incurred for the remainder of the classes unless an additional service is requested or provided.',r.a.createElement("br",null),r.a.createElement("i",null,"4-session (360-min) class series— $160")),r.a.createElement("h3",null,"TeleMental Health"),r.a.createElement("p",null,"On occasion it may be indicated for us to engage in tele-health either over the phone or through video communication. These services are offered to individuals only after we have initially established in-person therapeutic relationship through at least one in-person appointment. Due to licensing requirements, I am unable to provide these services to anyone out-of-state or country at the time of service. There are a variety of platforms available for this service and, though convenient, it is important to be aware that most are not HIPAA compliant. Completing the Informed Consent form acknowledges your understanding of this and acceptance of the risk should we utilize this format of care.",r.a.createElement("br",null),r.a.createElement("i",null,"5 to 25 minutes— $75"),r.a.createElement("br",null),r.a.createElement("i",null,"26-50 minutes— $150"))),Q=r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",{style:{textAlign:"center"}},"Payment and Reimbursement"),r.a.createElement("p",null,"You will be expected to pay for each session before/at the start of session, unless we agree otherwise. Payment may be made through cash, check, or HIPAA compliant application. Use of the HIPAA compliant application incurs an additional $5 charge.")),ee=r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",{style:{textAlign:"center"}},"Insurance"),r.a.createElement("p",null,'I am an "out of network provider" for insurance networks but will provide you a Superbill which you may use to request reimbursement. The coverage you receive is entirely dependent upon the plan that you have. I recommend that you contact your insurance company directly to determine your specific coverage. Some questions that may be helpful in this conversation include:'),r.a.createElement("ol",null,r.a.createElement("li",null,"Do I have mental health insurance benefits that cover psychotherapy?"),r.a.createElement("li",null,"Does my policy cover an out of network Licensed Psychologist? If so, what percentage is covered or what is the coverage amount per therapy session?"),r.a.createElement("li",null,"What is my deductible and has it been met?"),r.a.createElement("li",null,"Are my medical and mental health/behavioral health deductibles separate?"),r.a.createElement("li",null,"How many sessions per year does my health insurance cover?"),r.a.createElement("li",null,"Does the diagnosis matter? Are some diagnoses covered and others not?"),r.a.createElement("li",null,"What paperwork or forms do I need to submit for sessions to be covered?"),r.a.createElement("li",null,"Is approval required from my primary care physician?"))),ne=r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",null,"Mood & Food"),r.a.createElement("p",null,"Mood & Food is a class designed for individuals struggling with overeating, mindless eating, stress eating, emotional eating, shame around eating, or binge eating. The course is structured into 4 classes each lasting 90 minutes. The class centers on presented material, though questions and participation are welcome and encouraged. Class materials also include handouts and at-home practice exercises. During the course of the classes we will cover topics including:"),r.a.createElement("div",{style:{display:"flex",justifyContent:"center",flexFlow:"row wrap"}},r.a.createElement("ul",null,r.a.createElement("li",null,"what emotional eating is"),r.a.createElement("li",null,"cultural implications"),r.a.createElement("li",null,"environmental impacts"),r.a.createElement("li",null,"set point theory"),r.a.createElement("li",null,"emotional vs physical hunger"),r.a.createElement("li",null,"binge eating cycle"),r.a.createElement("li",null,"interpersonal dynamics around food"),r.a.createElement("li",null,"self-talk")),r.a.createElement("ul",null,r.a.createElement("li",null,"behavior analysis & behavior change"),r.a.createElement("li",null,"mindful eating"),r.a.createElement("li",null,"loving limits"),r.a.createElement("li",null,"self-compassion"),r.a.createElement("li",null,"managing difficult emotions"),r.a.createElement("li",null,"habit formation"),r.a.createElement("li",null,"stages of change"),r.a.createElement("li",null,"healthy eating guidelines"))),r.a.createElement("p",null,"By the end of the class series participants will be able to recognize opportunities for, prepare for, and make positive changes in their relationships with themselves, food, and their environment.")),te=r.a.createElement(r.a.Fragment,null,r.a.createElement("p",null,"The below are resources that I find to be clinically valuable. I have no affiliation with any of the individuals or entities indicated below. These resources are provided purely due to my perception of their clinical benefit. I receive no compensation of any kind for sharing these resources."),r.a.createElement("h3",null,"Webpages"),r.a.createElement("p",null,r.a.createElement("a",{href:"https://anxietycanada.com/",target:"_blank"},"Anxiety Canada")," is an excellent web resource for evidence based information about anxiety. The website is written in clear language that is thoughtful, easy to understand, and helpful."),r.a.createElement("p",null,r.a.createElement("a",{href:"https://maps.anxietycanada.com/courses/my-anxiety-plan-map-for-adults/",target:"_blank"},"My Anxiety Plan")," is the online course associated with Anxiety Canada. It is a free course that provides excellent information in addition to practical tools and practices for managing anxiety and anxiety-based conditions."),r.a.createElement("p",null,r.a.createElement("a",{href:"https://brenebrown.com/",target:"_blank"},"Brene Brown")," is an author, researcher, and speaker that I highly recommend. The link is to her main webpage. Below are specific resources of hers that I recommend."),r.a.createElement("p",null,r.a.createElement("a",{href:"https://ggsc.berkeley.edu/",target:"_blank"},"The Greater Good Science Center"),"- Berkeley is a center of research and innovation focusing on making positivity and positive change accessible to all."),r.a.createElement("p",null,r.a.createElement("a",{href:"https://www.edx.org/course/the-science-of-happiness-0",target:"_blank"},"The Science of Happiness")," is the online course from the Greater Good Science Center. It is a free 8-week course that provides tools to happier experiences and greater meaning in life."),r.a.createElement("p",null,r.a.createElement("a",{href:"https://ggia.berkeley.edu/",target:"_blank"},"Greater Good in Action")," provides doable practices for making concrete and impactful positive changes"),r.a.createElement("h3",null,"Videos"),r.a.createElement("a",{href:"https://www.ted.com/talks/brene_brown_on_vulnerability?utm_campaign=tedspread&utm_medium=referral&utm_source=tedcomshare",target:"_blank"},"The Power of Vulnerability- Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.ted.com/talks/brene_brown_listening_to_shame?utm_campaign=tedspread&utm_medium=referral&utm_source=tedcomshare",target:"_blank"},"Listening to Shame- Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://player.vimeo.com/video/261348709",target:"_blank"},"SuperSoul Sessions: The Anatomy of Trust- Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://brenebrown.com/videos/",target:"_blank"},"Additional Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://youtu.be/IvtZBUSplr4",target:"_blank"},"The Space Between Self-Esteem and Self-Compassion- Kristin Neff"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://self-compassion.org/videos/",target:"_blank"},"Additional Kristin Neff"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.ted.com/talks/sandra_aamodt_why_dieting_doesn_t_usually_work?utm_campaign=tedspread&utm_medium=referral&utm_source=tedcomshare",target:"_blank"},"Why Dieting Doesn't Usually Work- Sandra Aamodt"),r.a.createElement("br",null),r.a.createElement("h3",null,"Audio Recordings"),r.a.createElement("a",{href:"https://centerformsc.org/practice-msc/guided-meditations-and-exercises/",target:"_blank"},"Mindful Self Compassion Meditations"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.uclahealth.org/marc/mindful-meditations",target:"_blank"},"UCLA Meditations (Also available in Spanish!)"),r.a.createElement("br",null),r.a.createElement("h3",null,"Books"),r.a.createElement("a",{href:"https://geneenroth.com/books/",target:"_blank"},"Women, Food, and God by Geneen Roth"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://brenebrown.com/books-audio/",target:"_blank"},"The Gifts of Imperfection by Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://brenebrown.com/books-audio/",target:"_blank"},"Daring Greatly by Brene Brown"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://brenebrown.com/books-audio/",target:"_blank"},"Rising Strong by Brene Brown"),r.a.createElement("br",null)),ae=r.a.createElement(r.a.Fragment,null,r.a.createElement("p",null,"The following forms are for your review. If we have scheduled an in-person appointment, carefully read each of the forms below. Please print, complete, and bring the first three forms to our first appointment. We will review them together. If you would like for your health information to be shared with another individual or group, or would like me to gather information from them, please print, complete, and bring the Release of Information form to your next appointment which identifies the person or entity with whom your information should be shared."),r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement("a",{href:"./res/Informed Consent.pdf",download:!0,target:"_blank"},"Informed Consent")),r.a.createElement("li",null,r.a.createElement("a",{href:"./res/Intake Form.pdf",download:!0,target:"_blank"},"Intake Form")),r.a.createElement("li",null,r.a.createElement("a",{href:"./res/Receipt of Forms.pdf",download:!0,target:"_blank"},"Receipt of Forms")),r.a.createElement("li",null,r.a.createElement("a",{href:"./res/Privacy Policy.pdf",download:!0,target:"_blank"},"Privacy Policy")),r.a.createElement("li",null,r.a.createElement("a",{href:"./res/ROI.pdf",download:!0,target:"_blank"},"Release of Information")))),re=function(e){var n=e.title?r.a.createElement("div",{className:"card-title"},e.title):void 0;return r.a.createElement("div",{className:"card card-1"},n,r.a.createElement("div",{className:"card-body"},e.body))},oe=function(e){return r.a.createElement("div",{className:"page-title",id:"top"},r.a.createElement("div",{className:"title"},e.title))},ie=function(e){function n(){return M(this,n),O(this,D(n).apply(this,arguments))}return R(n,r.a.Component),F(n,[{key:"render",value:function(){var e=this.props,n=e.handlePracticeClick,t=e.handleServicesClick,a=e.handleClassesClick,o=e.handleContactClick,i=e.handleDocumentsClick,l=e.handleResourcesClick,c={cursor:"pointer",fontSize:20,borderBottom:"1px solid currentColor",padding:10};return r.a.createElement("div",{className:"drawer"},r.a.createElement("div",{onClick:n,className:s()("navMenu","link",{"navMenu--active":!1}),style:j({},c,{borderTop:"1px solid currentColor"})},"Practice Areas"),r.a.createElement("div",{onClick:t,className:s()("navMenu","link",{"navMenu--active":!1}),style:c},"Services"),r.a.createElement("div",{onClick:a,className:s()("navMenu","link",{"navMenu--active":!1}),style:c},"Classes"),r.a.createElement("div",{onClick:i,className:s()("navMenu","link",{"navMenu--active":!1}),style:c},"Documents"),r.a.createElement("div",{onClick:o,className:s()("navMenu","link",{"navMenu--active":!1}),style:c},"Contact"),r.a.createElement("div",{onClick:l,className:s()("navMenu","link",{"navMenu--active":!1}),style:c},"Resources"))}}]),n}();t(4);i.a.render(r.a.createElement(L),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiUmVhY3RcIiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJSZWFjdERPTVwiIiwid2VicGFjazovLy8uL2Nzcy9zdHlsZS5jc3M/ZTg1ZiIsIndlYnBhY2s6Ly8vLi9jc3Mvc3R5bGUuY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly8vLi9yZXMvaGVyby5qcGciLCJ3ZWJwYWNrOi8vLy4vcmVzL2VhdGluZ2NvbmNlcm5zLmpwZyIsIndlYnBhY2s6Ly8vLi9yZXMvbGlmZXN0eWxlLmpwZyIsIndlYnBhY2s6Ly8vLi9yZXMvbWVkaWNhbHByb2JsZW1zLmpwZyIsIndlYnBhY2s6Ly8vLi9yZXMvcmVsYXRpb25zaGlwcy5qcGciLCJ3ZWJwYWNrOi8vLy4vcmVzL3N0cmVzc21hbmFnZW1lbnQuanBnIiwid2VicGFjazovLy8uL3Jlcy90cmFuc2l0aW9ucy5qcGciLCJ3ZWJwYWNrOi8vLy4vcmVzL3N1Y2N1bGVudEJ1cnN0LmpwZyIsIndlYnBhY2s6Ly8vLi9yZXMvcGluZWFwcGxlLmpwZyIsIndlYnBhY2s6Ly8vLi9yZXMvbW9yZVJlc291cmNlcy5qcGciLCJ3ZWJwYWNrOi8vLy4vcmVzL3ByYWN0aWNlYXJlYXMuanBnIiwid2VicGFjazovLy8uL3Jlcy9jb3JuZXJwbGFudC5qcGciLCJ3ZWJwYWNrOi8vLy4vcmVzL3N1Y2N1bGVudG1hdC5qcGciLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJSZWFjdCIsIl9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fIiwiaGFzT3duIiwiY2xhc3NOYW1lcyIsImNsYXNzZXMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcmciLCJhcmdUeXBlIiwicHVzaCIsIkFycmF5IiwiaXNBcnJheSIsImlubmVyIiwiYXBwbHkiLCJqb2luIiwiZGVmYXVsdCIsInVuZGVmaW5lZCIsIlJlYWN0RE9NIiwiY29udGVudCIsIm9wdGlvbnMiLCJobXIiLCJ0cmFuc2Zvcm0iLCJpbnNlcnRJbnRvIiwibG9jYWxzIiwiZ2V0VXJsIiwiX19fQ1NTX0xPQURFUl9VUkxfX18wX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfX18xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfX18yX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfX18zX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfX180X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfX181X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfX182X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfX183X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfX184X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfX185X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfX18xMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX19fMTFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9fXzEyX19fIiwidXNlU291cmNlTWFwIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwiY29uY2F0Iiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiaWQiLCJfaSIsInVybCIsIm5lZWRRdW90ZXMiLCJ0ZXN0Iiwic2xpY2UiLCJyZXBsYWNlIiwiZm4iLCJtZW1vIiwic3R5bGVzSW5Eb20iLCJpc09sZElFIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInRhcmdldCIsInBhcmVudCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImZpeFVybHMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsImRvbVN0eWxlIiwicmVmcyIsImoiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiRXJyb3IiLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwibmV4dFNpYmxpbmciLCJpbnNlcnRCZWZvcmUiLCJhcHBlbmRDaGlsZCIsImZpcnN0Q2hpbGQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJpZHgiLCJpbmRleE9mIiwic3BsaWNlIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsImF0dHJzIiwidHlwZSIsIm5vbmNlIiwibmMiLCJnZXROb25jZSIsImFkZEF0dHJzIiwiZWwiLCJrZXlzIiwiZm9yRWFjaCIsInNldEF0dHJpYnV0ZSIsIm9iaiIsInVwZGF0ZSIsInJlbW92ZSIsInJlc3VsdCIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsImF1dG9GaXhVcmxzIiwiY29udmVydFRvQWJzb2x1dGVVcmxzIiwiYmxvYiIsIm9sZFNyYyIsImhyZWYiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNyZWF0ZVRleHROb2RlIiwibmV3T2JqIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJpbmRleCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwibG9jYXRpb24iLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJob3N0IiwiY3VycmVudERpciIsInBhdGhuYW1lIiwiZnVsbE1hdGNoIiwib3JpZ1VybCIsIm5ld1VybCIsInVucXVvdGVkT3JpZ1VybCIsInRyaW0iLCIkMSIsIl9leHRlbmRzIiwiYXNzaWduIiwiaXNBYnNvbHV0ZSIsImNoYXJBdCIsInNwbGljZU9uZSIsImsiLCJwb3AiLCJyZXNvbHZlX3BhdGhuYW1lIiwidG8iLCJmcm9tIiwidG9QYXJ0cyIsInNwbGl0IiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJoYXNUcmFpbGluZ1NsYXNoIiwibGFzdCIsInVwIiwidW5zaGlmdCIsInN1YnN0ciIsIml0ZXJhdG9yIiwiaXNQcm9kdWN0aW9uIiwicHJlZml4IiwidGlueV9pbnZhcmlhbnRfZXNtIiwiY29uZGl0aW9uIiwibWVzc2FnZSIsImFkZExlYWRpbmdTbGFzaCIsInBhdGgiLCJzdHJpcEJhc2VuYW1lIiwiUmVnRXhwIiwiaGFzQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJjcmVhdGVQYXRoIiwic2VhcmNoIiwiaGFzaCIsImNyZWF0ZUxvY2F0aW9uIiwic3RhdGUiLCJjdXJyZW50TG9jYXRpb24iLCJoYXNoSW5kZXgiLCJzZWFyY2hJbmRleCIsInBhcnNlUGF0aCIsImRlY29kZVVSSSIsIlVSSUVycm9yIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJsaXN0ZW5lcnMiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImFjdGlvbiIsImdldFVzZXJDb25maXJtYXRpb24iLCJjYWxsYmFjayIsImFwcGVuZExpc3RlbmVyIiwiaXNBY3RpdmUiLCJsaXN0ZW5lciIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJhcmdzIiwiX2tleSIsImNhblVzZURPTSIsImdldENvbmZpcm1hdGlvbiIsImNvbmZpcm0iLCJQb3BTdGF0ZUV2ZW50IiwiSGFzaENoYW5nZUV2ZW50IiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwicHJvcHMiLCJ1YSIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImJhc2VuYW1lIiwiZ2V0RE9NTG9jYXRpb24iLCJoaXN0b3J5U3RhdGUiLCJfcmVmIiwiX3dpbmRvdyRsb2NhdGlvbiIsImNyZWF0ZUtleSIsIk1hdGgiLCJyYW5kb20iLCJ0cmFuc2l0aW9uTWFuYWdlciIsInNldFN0YXRlIiwibmV4dFN0YXRlIiwiaGFuZGxlUG9wU3RhdGUiLCJldmVudCIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwib2siLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwicmV2ZXJ0UG9wIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaXNCbG9ja2VkIiwicHVzaFN0YXRlIiwicHJldkluZGV4IiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsIkFwcCIsIl9SZWFjdCRDb21wb25lbnQiLCJfdGhpcyIsIl9jbGFzc0NhbGxDaGVjayIsIl9kZWZpbmVQcm9wZXJ0eSIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9nZXRQcm90b3R5cGVPZiIsInBhZ2UiLCJkb2NrIiwiY2xvc2VEcmF3ZXIiLCJjdXJyZW50Iiwic2hvd0RyYXdlciIsInNjcm9sbFRvIiwic2hvd0hhbWJ1cmdlciIsImN1cnJlbnRQYWdlIiwiY3JlYXRlSGlzdG9yeSIsIl9pbmhlcml0cyIsIkNvbXBvbmVudCIsIl9jcmVhdGVDbGFzcyIsIl90aGlzMiIsImlubmVyV2lkdGgiLCJ3aWR0aCIsImV4dGVybmFsX1JlYWN0X2RlZmF1bHQiLCJhIiwiQXBwX0hvbWUiLCJvbk5hdiIsImhhbmRsZU5hdiIsIkFwcF9QcmFjdGljZUFyZWFzIiwiQXBwX1NlcnZpY2VzIiwiQXBwX0NsYXNzZXMiLCJBcHBfUmVzb3VyY2VzIiwiQXBwX0NsaWVudERvY3VtZW50cyIsIkFwcF9GZWVzIiwiZGlzcGxheSIsImZsZXhEaXJlY3Rpb24iLCJmb250RmFtaWx5IiwiQXBwX0hlYWRlciIsImFjdGl2ZSIsIm9wZW5EcmF3ZXIiLCJ0b2dnbGVEcmF3ZXIiLCJBcHBfQm9keSIsIkFwcF9Gb290ZXIiLCJCb2R5IiwiX3RoaXMzIiwiY24iLCJoaWRlIiwib3ZlcmxheUNsYXNzZXMiLCJGcmFnbWVudCIsImNsYXNzTmFtZSIsIkFwcF9EcmF3ZXIiLCJoYW5kbGVDb250YWN0Q2xpY2siLCJoYW5kbGVTZXJ2aWNlc0NsaWNrIiwiaGFuZGxlUHJhY3RpY2VDbGljayIsImhhbmRsZUNsYXNzZXNDbGljayIsImhhbmRsZURvY3VtZW50c0NsaWNrIiwiaGFuZGxlUmVzb3VyY2VzQ2xpY2siLCJvbkNsaWNrIiwiaGFuZGxlRHJhd2VyT3ZlcmxheUNsaWNrIiwic2V0VGltZW91dCIsImdldEVsZW1lbnRCeUlkIiwic2Nyb2xsSW50b1ZpZXciLCJiZWhhdmlvciIsImhlcm8gbGF6eSIsIm1vcmVTZXJ2aWNlcyIsIm1vcmVSZXNvdXJjZXMiLCJtb3JlRG9jdW1lbnRzIiwibW9yZUZlZXMiLCJtb3JlQ2xhc3NlcyIsIm1vcmVQcmFjdGljZSIsIm1pbkhlaWdodCIsInJlbmRlckRyYXdlciIsImNoaWxkcmVuIiwiSGVhZGVyIiwiaW5saW5lU3R5bGUiLCJwb3NpdGlvbiIsImxlZnQiLCJ0b3AiLCJoZWlnaHQiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3hTaGFkb3ciLCJ6SW5kZXgiLCJtZW51U3R5bGUiLCJjdXJzb3IiLCJtYXJnaW5MZWZ0Iiwidmlld0JveCIsImZpbGwiLCJuYXZNZW51LS1hY3RpdmUiLCJfb2JqZWN0U3ByZWFkIiwibWFyZ2luUmlnaHQiLCJGb290ZXIiLCJjbGFzcyIsInNyYyIsImRhdGEtYmFkZ2UiLCJkYXRhLWlkIiwiZGF0YS1jb2RlIiwiSG9tZSIsIm1lZXRTdGVwaCIsImZvbnRTaXplIiwidGV4dEFsaWduIiwibGluZUhlaWdodCIsIm1hcmdpblRvcCIsIlByYWN0aWNlQXJlYXMiLCJyZXF1aXJlZCIsIkFwcF9QYWdlVGl0bGUiLCJ0aXRsZSIsIkFwcF9DYXJkMSIsImJvZHkiLCJwcmFjdGljZUFyZWFzIiwiU2VydmljZXMiLCJzZXJ2aWNlcyIsInNlcnZpY2VzUmVpbWJ1cnNtZW50Iiwic2VydmljZXNJbnN1cmFjZSIsIkNsYXNzZXMiLCJDbGllbnREb2N1bWVudHMiLCJjbGllbnREb2N1bWVudHMiLCJSZXNvdXJjZXMiLCJyZXNvdXJjZXMiLCJGZWVzIiwiZmVlcyIsImZsZXhGbG93IiwiZG93bmxvYWQiLCJDYXJkMSIsIlBhZ2VUaXRsZSIsIkRyYXdlciIsIl90aGlzJHByb3BzIiwiYm9yZGVyQm90dG9tIiwicGFkZGluZyIsImJvcmRlclRvcCIsInJlbmRlciJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVB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QUcsVUFBVyxPQUFRLENBQUU0QyxtQkFBbUJuRCxJQUN0RDFPLE1BQU93UixHQUhULFlBT0E3RCxFQUFBQyxFQUFBNU0sY0FBQSxPQUNFNk8sUUFBU0gsRUFDVEwsVUFBV0osSUFBRyxVQUFXLE9BQVEsQ0FBRTRDLG1CQUFtQm5ELElBQ3REMU8sTUFBT3dSLEdBSFQsV0FPQTdELEVBQUFDLEVBQUE1TSxjQUFBLE9BQ0U2TyxRQUFTRixFQUNUTixVQUFXSixJQUFHLFVBQVcsT0FBUSxDQUFFNEMsbUJBQW1CbkQsSUFDdEQxTyxNQUFPd1IsR0FIVCxhQU9BN0QsRUFBQUMsRUFBQTVNLGNBQUEsT0FDRTZPLFFBQVNOLEVBQ1RGLFVBQVdKLElBQUcsVUFBVyxPQUFRLENBQUU0QyxtQkFBbUJuRCxJQUN0RDFPLE1BQU93UixHQUhULFdBT0E3RCxFQUFBQyxFQUFBNU0sY0FBQSxPQUNFNk8sUUFBU0QsRUFDVFAsVUFBV0osSUFBRyxVQUFXLE9BQVEsQ0FBRTRDLG1CQUFtQm5ELElBQ3REMU8sTUFBT3dSLEdBSFQsNEJDcmlDUi9XLElBQVM4WixPQUFPL2EsSUFBTXdILGNBQWNvTCxHQUFNbE8sU0FBUzhSLGVBQWUiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMyk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IFJlYWN0OyIsIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTcgSmVkIFdhdHNvbi5cbiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzICgpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykgJiYgYXJnLmxlbmd0aCkge1xuXHRcdFx0XHR2YXIgaW5uZXIgPSBjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZyk7XG5cdFx0XHRcdGlmIChpbm5lcikge1xuXHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAoYXJnVHlwZSA9PT0gJ29iamVjdCcpIHtcblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiIsIm1vZHVsZS5leHBvcnRzID0gUmVhY3RET007IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gSW1wb3J0c1xudmFyIGdldFVybCA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX19fMF9fXyA9IGdldFVybChyZXF1aXJlKFwiLi4vcmVzL2hlcm8uanBnXCIpKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9fXzFfX18gPSBnZXRVcmwocmVxdWlyZShcIi4uL3Jlcy9lYXRpbmdjb25jZXJucy5qcGdcIikpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX19fMl9fXyA9IGdldFVybChyZXF1aXJlKFwiLi4vcmVzL2xpZmVzdHlsZS5qcGdcIikpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX19fM19fXyA9IGdldFVybChyZXF1aXJlKFwiLi4vcmVzL21lZGljYWxwcm9ibGVtcy5qcGdcIikpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX19fNF9fXyA9IGdldFVybChyZXF1aXJlKFwiLi4vcmVzL3JlbGF0aW9uc2hpcHMuanBnXCIpKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9fXzVfX18gPSBnZXRVcmwocmVxdWlyZShcIi4uL3Jlcy9zdHJlc3NtYW5hZ2VtZW50LmpwZ1wiKSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfX182X19fID0gZ2V0VXJsKHJlcXVpcmUoXCIuLi9yZXMvdHJhbnNpdGlvbnMuanBnXCIpKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9fXzdfX18gPSBnZXRVcmwocmVxdWlyZShcIi4uL3Jlcy9zdWNjdWxlbnRCdXJzdC5qcGdcIikpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX19fOF9fXyA9IGdldFVybChyZXF1aXJlKFwiLi4vcmVzL3BpbmVhcHBsZS5qcGdcIikpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX19fOV9fXyA9IGdldFVybChyZXF1aXJlKFwiLi4vcmVzL21vcmVSZXNvdXJjZXMuanBnXCIpKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9fXzEwX19fID0gZ2V0VXJsKHJlcXVpcmUoXCIuLi9yZXMvcHJhY3RpY2VhcmVhcy5qcGdcIikpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX19fMTFfX18gPSBnZXRVcmwocmVxdWlyZShcIi4uL3Jlcy9jb3JuZXJwbGFudC5qcGdcIikpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX19fMTJfX18gPSBnZXRVcmwocmVxdWlyZShcIi4uL3Jlcy9zdWNjdWxlbnRtYXQuanBnXCIpKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBjb2xvcjogIzNmNGM0ZTtcXG59XFxuXFxuaDIge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZm9udC1zaXplOiAzcmVtO1xcbiAgZm9udC1mYW1pbHk6ICdEYW5jaW5nIFNjcmlwdCcsIGN1cnNpdmU7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbmJvZHkge1xcbiAgbWFyZ2luOiAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4ubmF2TWVudSB7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5iYWNrZHJvcCB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgei1pbmRleDogLTE7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwdmg7XFxufVxcblxcbi5oZXJvIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX19fMF9fXyArIFwiKTtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbn1cXG5cXG5cXG4uY29udGVudCB7XFxuICBtYXJnaW4tdG9wOiA1MHB4O1xcbn1cXG5cXG4uaGVyby1jb250ZW50IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGhlaWdodDogODV2aDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmhlcm8tY29udGVudCBibG9ja3F1b3RlIHtcXG4gIHdpZHRoOiA2MCU7XFxufVxcblxcbi5oZXJvLWNvbnRlbnQgaDEge1xcbiAgLyogY29sb3I6ICNGRkZGRkY7ICovXFxufVxcblxcbmJsb2NrcXVvdGUgZm9vdGVyIHtcXG4gIHRleHQtYWxpZ246IGVuZDtcXG4gIGZvbnQtc2l6ZTogMjJweDtcXG4gIC8qIGNvbG9yOiAjRkZGRkZGOyAqL1xcbn1cXG5cXG4ubWVldCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VERUFFNTtcXG4gIHBhZGRpbmc6IDMwcHg7XFxuXFxufVxcblxcblxcblxcblxcbi5wcm9maWxlIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICB3aWR0aDogNTAlO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ucHJvZmlsZVBob3RvIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgbWF4LXdpZHRoOiA0NTBweDtcXG4gIG1pbi13aWR0aDogMDtcXG4gIG1pbi1oZWlnaHQ6IDA7XFxuICBvYmplY3QtZml0OiBjb250YWluO1xcbiAgYm9yZGVyLXJhZGl1czogMjVweDtcXG59XFxuXFxuLmJpbyB7XFxuICBmbGV4OiAxIDAgYXV0bztcXG4gIG1hcmdpbjogMjBweDtcXG4gIG1heC13aWR0aDogNTAlO1xcbn1cXG5cXG4uYmlvIC5iaW9TdWJ0aXRsZSB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5iaW8gcCB7XFxuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XFxuICAvKiBwYWRkaW5nOiAwcHggMzBweDsgKi9cXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcXG4gIC5tZWV0IHtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIH1cXG5cXG4gIC5iaW8sXFxuICAucHJvZmlsZSB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBtYXgtd2lkdGg6IDEwMCU7XFxuICB9XFxufVxcblxcbi5wcmFjdGljZUFyZWFzIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcXG4gIHBhZGRpbmc6IDMwcHg7XFxuICBib3gtc2hhZG93OiBpbnNldCAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcXG59XFxuXFxuXFxuXFxuLnByYWN0aWNlQXJlYXMgLmFyZWFzIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LXdyYXA6IHdyYXA7XFxuICBwYWRkaW5nOiAzMHB4O1xcbiAgYWxpZ24taXRlbXM6IHNwYWNlLWJldHdlZW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLnByYWN0aWNlQXJlYXMgLmFyZWFzPi5hcmVhIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4OiAxIDAgMjkwcHg7XFxuICBtYXgtd2lkdGg6IDI5MHB4O1xcbiAgaGVpZ2h0OiAzMjBweDtcXG4gIGJhY2tncm91bmQ6ICNGN0Y3Rjc7XFxuICBib3JkZXItcmFkaXVzOiAycHg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgbWFyZ2luOiAwIDMwcHggMzBweCAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4ucHJhY3RpY2VBcmVhcyAuYXJlYXM+LmFyZWE6aG92ZXIge1xcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEuMik7XFxuICBib3gtc2hhZG93OiAwIDEwcHggMjBweCByZ2JhKDAsMCwwLDAuMTkpLCAwIDZweCA2cHggcmdiYSgwLDAsMCwwLjIzKTtcXG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4zcyBlYXNlLWluLW91dDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmFyZWFJbWFnZSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMjAwcHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XFxufVxcblxcbi5hcmVhRWF0aW5nQ29uY2VybnMge1xcbiAgYmFja2dyb3VuZDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfX18xX19fICsgXCIpIG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxNDAlO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCBib3R0b20gLTUwcHg7XFxufVxcblxcbi5hcmVhTGlmZXN0eWxlIHtcXG4gIGJhY2tncm91bmQ6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX19fMl9fXyArIFwiKSBuby1yZXBlYXQ7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCBib3R0b20gLTY1cHg7XFxufVxcbi8qIFxcbi5hcmVhTGlmZXN0eWxlLmxhenkge1xcbiAgYmFja2dyb3VuZDogdXJsKCcuLi9yZXMvbGlmZXN0eWxlLXBsYWNlaG9sZGVyLmpwZycpIG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0IGJvdHRvbSAtNjVweDtcXG59ICovXFxuXFxuLmFyZWFNZWRpY2FsUHJvYmxlbXMge1xcbiAgYmFja2dyb3VuZDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfX18zX19fICsgXCIpIG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxNDAlO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdDtcXG59XFxuXFxuLyogLmFyZWFNZWRpY2FsUHJvYmxlbXMubGF6eSB7XFxuICBiYWNrZ3JvdW5kOiB1cmwoJy4uL3Jlcy9tZWRpY2FscHJvYmxlbXMtcGxhY2Vob2xkZXIuanBnJykgbm8tcmVwZWF0O1xcbn0gKi9cXG5cXG4uYXJlYVJlbGF0aW9uc2hpcHMge1xcbiAgYmFja2dyb3VuZDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfX180X19fICsgXCIpIG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0IGJvdHRvbSAtODBweDtcXG59XFxuLyogXFxuLmFyZWFSZWxhdGlvbnNoaXBzai5sYXp5IHtcXG4gIGJhY2tncm91bmQ6IHVybCgnLi4vcmVzL3JlbGF0aW9uc2hpcHMuanBnJykgbm8tcmVwZWF0O1xcbn0gKi9cXG5cXG4uYXJlYVN0cmVzcyB7XFxuICBiYWNrZ3JvdW5kOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9fXzVfX18gKyBcIikgbm8tcmVwZWF0O1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgYm90dG9tIC04MHB4O1xcbn1cXG5cXG4vKiAuYXJlYVN0cmVzcy5sYXp5IHtcXG4gIGJhY2tncm91bmQ6IHVybCgnLi4vcmVzL3N0cmVzc21hbmFnZW1lbnQtcGxhY2Vob2xkZXIuanBnJykgbm8tcmVwZWF0O1xcbn0gKi9cXG5cXG4uYXJlYVRyYW5zaXRpb25zIHtcXG4gIGJhY2tncm91bmQ6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX19fNl9fXyArIFwiKSBuby1yZXBlYXQ7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCAtMjBweDtcXG59XFxuXFxuLyogLmFyZWFUcmFuc2l0aW9ucyAubGF6eSB7XFxuICBiYWNrZ3JvdW5kOiB1cmwoJy4uL3Jlcy90cmFuc2l0aW9ucy1wbGFjZWhvbGRlci5qcGcnKSBuby1yZXBlYXQ7XFxufSAqL1xcblxcbi5hcmVhVGV4dCB7XFxuICBmb250LXNpemU6IDMwcHg7XFxuICBoZWlnaHQ6IDEyMHB4O1xcbiAgbWF4LWhlaWdodDogMTIwcHg7XFxufVxcblxcbi5hcmVhVGV4dCBkaXYge1xcbiAgbWFyZ2luLWxlZnQ6IDQycHg7XFxuICBtYXJnaW4tdG9wOiAxMnB4O1xcbn1cXG5cXG4uYXJlYU92ZXJsYXkge1xcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gIGJvcmRlci1yYWRpdXM6IDJweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiAyMzBweDtcXG4gIGhlaWdodDogMjYwcHg7XFxuICBtYXJnaW46IDMwcHg7XFxufVxcblxcbi5zZXJ2aWNlcyB7XFxuICBoZWlnaHQ6IDQwMHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZCRUVDMTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5zZXJ2aWNlc0Rlc2NyaXB0aW9uIHtcXG4gIHdpZHRoOiA1MCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIHBhZGRpbmc6IDMwcHg7XFxufVxcblxcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XFxuICAuc2VydmljZXNEZXNjcmlwdGlvbiB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcblxcbiAgLnNlcnZpY2VzSW1hZ2Uge1xcbiAgICB3aWR0aDogMCU7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICB9XFxuXFxuICAuaGVyby1jb250ZW50IGJsb2NrcXVvdGUgaDEge1xcbiAgICBmb250LXNpemU6IDEuNzVyZW07XFxuICB9XFxuXFxuICAuaGVyby1jb250ZW50IGJsb2NrcXVvdGUgZm9vdGVyIHtcXG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xcbiAgfVxcbn1cXG5cXG4uYnV0dG9uIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDJweDtcXG4gIG1hcmdpbjogMDtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIGJhY2tncm91bmQ6IHJnYmEoMTcxLCAyMDgsIDIzMCwgMSk7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDIwMG1zIGVhc2UtaW4tb3V0LCB0cmFuc2Zvcm0gMTAwbXMgZWFzZTtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBib3gtc2hhZG93OiAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE2KSwgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XFxufVxcblxcbi5idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZDogcmdiKDIwMiwgMjI2LCAyNDApO1xcbiAgYm94LXNoYWRvdzogMCAxMHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjE5KSwgMCA2cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XFxufVxcblxcbi5yZWFkTW9yZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5jbGFzc2VzIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGJhY2tncm91bmQ6ICNGRkZGRkY7XFxuICBwYWRkaW5nOiAzMHB4O1xcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xNik7XFxufVxcblxcblxcbi5jb250YWN0IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHBhZGRpbmctdG9wOiAzMHB4O1xcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7XFxufVxcblxcbi5jb250YWN0IGZvcm0ge1xcbiAgbWFyZ2luLXRvcDogMzBweDtcXG59XFxuXFxuXFxuLmdyb3VwIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIG1hcmdpbi1ib3R0b206IDQ1cHg7XFxufVxcblxcbmlucHV0LFxcbnRleHRhcmVhIHtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG4gIHBhZGRpbmc6IDEwcHggMTBweCAxMHB4IDVweDtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgd2lkdGg6IDMwMHB4O1xcbiAgYm9yZGVyOiBub25lO1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzZjRjNGU7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG4gIGNvbG9yOiAjM2Y0YzRlO1xcbn1cXG5cXG5pbnB1dDpmb2N1cyB7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG50ZXh0YXJlYTpmb2N1cyB7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4vKiBMQUJFTCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5sYWJlbCB7XFxuICBjb2xvcjogIzNmNGM0ZTtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gIGxlZnQ6IDVweDtcXG4gIHRvcDogMTBweDtcXG4gIHRyYW5zaXRpb246IDAuMnMgZWFzZSBhbGw7XFxuICAtbW96LXRyYW5zaXRpb246IDAuMnMgZWFzZSBhbGw7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IDAuMnMgZWFzZSBhbGw7XFxufVxcblxcbi8qIGFjdGl2ZSBzdGF0ZSAqL1xcbmlucHV0OmZvY3VzfmxhYmVsLFxcbmlucHV0OnZhbGlkfmxhYmVsIHtcXG4gIHRvcDogLTIwcHg7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBjb2xvcjogI0ZGRkZGRjtcXG59XFxuXFxudGV4dGFyZWEge1xcbiAgcmVzaXplOiBub25lO1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxudGV4dGFyZWE6Zm9jdXN+bGFiZWwsXFxudGV4dGFyZWE6dmFsaWR+bGFiZWwge1xcbiAgdG9wOiAtMjBweDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGNvbG9yOiAjRkZGRkZGO1xcbn1cXG5cXG4vKiBUT0RPIGxlYXJuIHRoaXMgKi9cXG5cXG4vKiBCT1RUT00gQkFSUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG4uYmFyIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgd2lkdGg6IDMwMHB4O1xcbn1cXG5cXG4uYmFyOmJlZm9yZSxcXG4uYmFyOmFmdGVyIHtcXG4gIGNvbnRlbnQ6ICcnO1xcbiAgaGVpZ2h0OiAycHg7XFxuICB3aWR0aDogMDtcXG4gIGJvdHRvbTogMXB4O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgYmFja2dyb3VuZDogIzNmNGM0ZTtcXG4gIHRyYW5zaXRpb246IDAuMnMgZWFzZSBhbGw7XFxuICAtbW96LXRyYW5zaXRpb246IDAuMnMgZWFzZSBhbGw7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IDAuMnMgZWFzZSBhbGw7XFxufVxcblxcbi5iYXI6YmVmb3JlIHtcXG4gIGxlZnQ6IDUwJTtcXG59XFxuXFxuLmJhcjphZnRlciB7XFxuICByaWdodDogNTAlO1xcbn1cXG5cXG4vKiBhY3RpdmUgc3RhdGUgKi9cXG5pbnB1dDpmb2N1c34uYmFyOmJlZm9yZSxcXG5pbnB1dDpmb2N1c34uYmFyOmFmdGVyIHtcXG4gIHdpZHRoOiA1MCU7XFxufVxcblxcbi8qIGFjdGl2ZSBzdGF0ZSAqL1xcbnRleHRhcmVhOmZvY3Vzfi5iYXI6YmVmb3JlLFxcbnRleHRhcmVhOmZvY3Vzfi5iYXI6YWZ0ZXIge1xcbiAgd2lkdGg6IDUwJTtcXG59XFxuXFxuLyogSElHSExJR0hURVIgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcbi5oaWdobGlnaHQge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgaGVpZ2h0OiA2MCU7XFxuICB3aWR0aDogMTAwcHg7XFxuICB0b3A6IDI1JTtcXG4gIGxlZnQ6IDA7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gIG9wYWNpdHk6IDAuNTtcXG59XFxuXFxuLyogYWN0aXZlIHN0YXRlICovXFxuaW5wdXQ6Zm9jdXN+LmhpZ2hsaWdodCB7XFxuICAtd2Via2l0LWFuaW1hdGlvbjogaW5wdXRIaWdobGlnaHRlciAwLjNzIGVhc2U7XFxuICAtbW96LWFuaW1hdGlvbjogaW5wdXRIaWdobGlnaHRlciAwLjNzIGVhc2U7XFxuICBhbmltYXRpb246IGlucHV0SGlnaGxpZ2h0ZXIgMC4zcyBlYXNlO1xcbn1cXG5cXG4vKiBhY3RpdmUgc3RhdGUgKi9cXG50ZXh0YXJlYTpmb2N1c34uaGlnaGxpZ2h0IHtcXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBpbnB1dEhpZ2hsaWdodGVyIDAuM3MgZWFzZTtcXG4gIC1tb3otYW5pbWF0aW9uOiBpbnB1dEhpZ2hsaWdodGVyIDAuM3MgZWFzZTtcXG4gIGFuaW1hdGlvbjogaW5wdXRIaWdobGlnaHRlciAwLjNzIGVhc2U7XFxufVxcblxcbi8qIEFOSU1BVElPTlMgPT09PT09PT09PT09PT09PSAqL1xcbkAtd2Via2l0LWtleWZyYW1lcyBpbnB1dEhpZ2hsaWdodGVyIHtcXG4gIGZyb20ge1xcbiAgICBiYWNrZ3JvdW5kOiAjM2Y0YzRlO1xcbiAgfVxcblxcbiAgdG8ge1xcbiAgICB3aWR0aDogMDtcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuICB9XFxufVxcblxcbkAtbW96LWtleWZyYW1lcyBpbnB1dEhpZ2hsaWdodGVyIHtcXG4gIGZyb20ge1xcbiAgICBiYWNrZ3JvdW5kOiAjM2Y0YzRlO1xcbiAgfVxcblxcbiAgdG8ge1xcbiAgICB3aWR0aDogMDtcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuICB9XFxufVxcblxcbkBrZXlmcmFtZXMgaW5wdXRIaWdobGlnaHRlciB7XFxuICBmcm9tIHtcXG4gICAgYmFja2dyb3VuZDogIzNmNGM0ZTtcXG4gIH1cXG5cXG4gIHRvIHtcXG4gICAgd2lkdGg6IDA7XFxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbiAgfVxcbn1cXG5cXG5cXG4uZm9vdGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRURFQUU1O1xcbiAgcGFkZGluZzogMjBweDtcXG59XFxuXFxuI2FkZHJlc3M6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6ICdcXFxcMDA3Qyc7XFxuICBwYWRkaW5nOiAwIDE1cHhcXG59XFxuXFxuI2FkZHJlc3M6YWZ0ZXIge1xcbiAgY29udGVudDogJ1xcXFwwMDdDJztcXG4gIHBhZGRpbmc6IDAgMTVweDtcXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzc2cHgpIHtcXG5cXG4gIC5mb290ZXIge1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB9XFxuXFxuICAjYWRkcmVzczpiZWZvcmUge1xcbiAgICBjb250ZW50OiBub25lO1xcbiAgICBwYWRkaW5nOiAwXFxuICB9XFxuICBcXG4gICNhZGRyZXNzOmFmdGVyIHtcXG4gICAgY29udGVudDogbm9uZTtcXG4gICAgcGFkZGluZzogMDtcXG4gIH1cXG59XFxuXFxuXFxuLmxpbms6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDNweDtcXG4gIGJvdHRvbTogLTJweDtcXG4gIGxlZnQ6IDA7XFxuICBiYWNrZ3JvdW5kOiAjM2Y0YzRlO1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XFxuICB0cmFuc2l0aW9uOiAuMjVzIGxpbmVhcjtcXG59XFxuXFxuLmxpbms6aG92ZXI6YmVmb3JlLFxcbi5saW5rOmZvY3VzOmJlZm9yZSB7XFxuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7XFxufVxcblxcbi8qIC5uYXZNZW51OmJlZm9yZSB7XFxuICBib3R0b206IC01cHggIWltcG9ydGFudDtcXG59ICovXFxuXFxuLmNvbnRhY3Qge1xcbiAgYmFja2dyb3VuZDogY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX19fN19fXyArIFwiKTtcXG59XFxuXFxuLyogLmNvbnRhY3QubGF6eSB7XFxuICBiYWNrZ3JvdW5kOiBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQgdXJsKCcuLi9yZXMvc3VjY3VsZW50QnVyc3QtcGxhY2Vob2xkZXIuanBnJyk7XFxufSAqL1xcblxcbi5tb3JlQ2xhc3NlcyB7XFxuICBiYWNrZ3JvdW5kOiBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQgdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfX184X19fICsgXCIpO1xcbn1cXG4vKiBcXG4ubW9yZUNsYXNzZXMubGF6eSB7XFxuICBiYWNrZ3JvdW5kOiBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQgdXJsKCcuLi9yZXMvcGluZWFwcGxlLXBsYWNlaG9sZGVyLmpwZycpO1xcbn0gKi9cXG5cXG4ubW9yZVJlc291cmNlcyB7XFxuICBiYWNrZ3JvdW5kOiBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQgdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfX185X19fICsgXCIpO1xcbn1cXG4vKiBcXG4ubW9yZVJlc291cmNlcy5sYXp5IHtcXG4gIGJhY2tncm91bmQ6IGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdCB1cmwoJy4uL3Jlcy9tb3JlUmVzb3VyY2VzLXBsYWNlaG9sZGVyLmpwZycpO1xcbn0gKi9cXG5cXG4ubW9yZVByYWN0aWNlIHtcXG4gIGJhY2tncm91bmQ6IGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdCB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9fXzEwX19fICsgXCIpO1xcbn1cXG5cXG4vKiAubW9yZVByYWN0aWNlLmxhenkge1xcbiAgYmFja2dyb3VuZDogY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0IHVybCgnLi4vcmVzL3ByYWN0aWNlYXJlYXMtcGxhY2Vob2xkZXIuanBnJyk7XFxufSAqL1xcblxcbi5tb3JlU2VydmljZXMge1xcbiAgYmFja2dyb3VuZDogY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX19fMTFfX18gKyBcIik7XFxufVxcblxcbi5tb3JlU2VydmljZXMubGF6eSB7XFxuICAvKiBiYWNrZ3JvdW5kOiBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQgdXJsKCcuLi9yZXMvY29ybmVycGxhbnQtcGxhY2Vob2xkZXIuanBnJyk7ICovXFxufVxcblxcbi5tb3JlRG9jdW1lbnRzIHtcXG4gIGJhY2tncm91bmQ6IGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdCB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9fXzEyX19fICsgXCIpO1xcblxcbn1cXG5cXG4vKiAubW9yZURvY3VtZW50cy5sYXp5IHtcXG4gIGJhY2tncm91bmQ6IGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdCB1cmwoJy4uL3Jlcy9zdWNjdWxlbnRtYXQtcGxhY2Vob2xkZXIuanBnJyk7XFxuXFxufSAqL1xcblxcbi5zaWduYXR1cmUge1xcbiAgZm9udC1mYW1pbHk6ICdEYW5jaW5nIFNjcmlwdCcsIGN1cnNpdmU7XFxuICBmb250LXNpemU6IDI2cHg7XFxufVxcblxcbi5uYXZNZW51OmhvdmVyIHtcXG4gIGZpbHRlcjogYnJpZ2h0bmVzcygxLjIpO1xcbn1cXG5cXG4ucGFnZS10aXRsZSB7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgbWFyZ2luLXRvcDogMTAwcHg7XFxufVxcblxcbi5wYWdlLXRpdGxlIC50aXRsZSB7XFxuICBmb250LXNpemU6IDRyZW07XFxuICBmb250LWZhbWlseTogJ0RhbmNpbmcgU2NyaXB0JywgY3Vyc2l2ZTtcXG59XFxuXFxuLmNhcmQge1xcbiAgYmFja2dyb3VuZDogI0Y3RjdGNztcXG4gIGJvcmRlci1yYWRpdXM6IDJweDtcXG4gIG1hcmdpbjogNTBweCAxNSU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIG1pbi1oZWlnaHQ6IDEwMHB4O1xcbiAgbWluLXdpZHRoOiAxMDBweDtcXG59XFxuXFxuLmNhcmQtYm9keSB7XFxuICBmb250LXNpemU6IDFyZW07XFxuICBsaW5lLWhlaWdodDogMS41cmVtO1xcbiAgbWluLWhlaWdodDogMTAwcHg7XFxuICBwYWRkaW5nOiAyMHB4O1xcbn1cXG5cXG4uY2FyZC10aXRsZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG4gIHBhZGRpbmc6IDIwcHg7XFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzIyMjIyMjtcXG4gIGhlaWdodDogMTAwJTtcXG59XFxuXFxuLmNhcmQtMSB7XFxuICBib3gtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4yNCk7XFxufVxcblxcbi5jYXJkLTIge1xcbiAgYm94LXNoYWRvdzogMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMjMpO1xcbn1cXG5cXG4uY2FyZC0zIHtcXG4gIGJveC1zaGFkb3c6IDAgMTBweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4xOSksIDAgNnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMjMpO1xcbn1cXG5cXG4uY2FyZC00IHtcXG4gIGJveC1zaGFkb3c6IDAgMTRweCAyOHB4IHJnYmEoMCwgMCwgMCwgMC4yNSksIDAgMTBweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yMik7XFxufVxcblxcbi5jYXJkLTUge1xcbiAgYm94LXNoYWRvdzogMCAxOXB4IDM4cHggcmdiYSgwLCAwLCAwLCAwLjMwKSwgMCAxNXB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjIyKTtcXG59XFxuXFxuLmJhY2tncm91bmQge1xcbiAgei1pbmRleDogLTE7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuXFxuLmRyYXdlci1vdmVybGF5IHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zMCk7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gIHotaW5kZXg6IDIwO1xcbn1cXG5cXG4uZHJhd2VyLWNvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiAwO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHdpZHRoOiAxNTVweDtcXG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDUwcHgpO1xcbiAgei1pbmRleDogMTAwO1xcbiAgLyogdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7ICovXFxuICB0b3A6IDUwcHg7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxufVxcblxcbi5kcmF3ZXIge1xcbiAgZmxleDogMTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VERUFFNTtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gIGJveC1zaGFkb3c6IDExcHggMTBweCA4cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4yNSksIDEwcHggMCA1cHggLTVweCByZ2JhKDAsIDAsIDAsIDApO1xcbiAgdHJhbnNpdGlvbjogbm9uZTtcXG59XFxuXFxuLmRyYXdlcisuZGFyayB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzBDM0M2O1xcbn1cXG5cXG4uZHJhd2VyLWJ1dHRvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDBweDtcXG59XFxuXFxuLmhlYWRlci1uYXYtYnV0dG9uIHtcXG4gIGhlaWdodDogNDBweDtcXG4gIHdpZHRoOiAxMDBweDtcXG59XFxuXFxuLmRyYXdlci1pdGVtIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5kcmF3ZXItaXRlbT5kaXYge1xcbiAgZmxleDogMTtcXG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xcbn1cXG5cXG4uaGVhZGVyLWhhbWJ1cmdlciB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5oZWFkZXItaGFtYnVyZ2VyOmhvdmVyICoge1xcbiAgY29sb3I6ICM4NzkwOTI7XFxufVxcblxcbi5oaWRlIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi8qIC5tb3JlU2VydmljZXMgaDIge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZm9udC1zaXplOiAzcmVtO1xcbiAgbWFyZ2luOiB1bnNldDtcXG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIHNhbnMtc2VyaWY7XFxufSAqL1wiLCBcIlwiXSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIntcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gbW9kdWxlc1tfaV07IC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcbiAgICAgIC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG4gICAgICAvLyB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG4gICAgICAvLyBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cbiAgICAgIGlmIChpdGVtWzBdID09IG51bGwgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgaWYgKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiKFwiLmNvbmNhdChpdGVtWzJdLCBcIikgYW5kIChcIikuY29uY2F0KG1lZGlhUXVlcnksIFwiKVwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290KS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG5lZWRRdW90ZXMpIHtcbiAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfSAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cblxuXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH0gLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuXG5cbiAgaWYgKC9bXCInKCkgXFx0XFxuXS8udGVzdCh1cmwpIHx8IG5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csICdcXFxcbicpLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJtb2R1bGUuZXhwb3J0cyA9IFwiZGlzdC9yZXMvaGVyby5qcGdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IFwiZGlzdC9yZXMvZWF0aW5nY29uY2VybnMuanBnXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBcImRpc3QvcmVzL2xpZmVzdHlsZS5qcGdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IFwiZGlzdC9yZXMvbWVkaWNhbHByb2JsZW1zLmpwZ1wiOyIsIm1vZHVsZS5leHBvcnRzID0gXCJkaXN0L3Jlcy9yZWxhdGlvbnNoaXBzLmpwZ1wiOyIsIm1vZHVsZS5leHBvcnRzID0gXCJkaXN0L3Jlcy9zdHJlc3NtYW5hZ2VtZW50LmpwZ1wiOyIsIm1vZHVsZS5leHBvcnRzID0gXCJkaXN0L3Jlcy90cmFuc2l0aW9ucy5qcGdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IFwiZGlzdC9yZXMvc3VjY3VsZW50QnVyc3QuanBnXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBcImRpc3QvcmVzL3BpbmVhcHBsZS5qcGdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IFwiZGlzdC9yZXMvbW9yZVJlc291cmNlcy5qcGdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IFwiZGlzdC9yZXMvcHJhY3RpY2VhcmVhcy5qcGdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IFwiZGlzdC9yZXMvY29ybmVycGxhbnQuanBnXCI7IiwibW9kdWxlLmV4cG9ydHMgPSBcImRpc3QvcmVzL3N1Y2N1bGVudG1hdC5qcGdcIjsiLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gKHRhcmdldCwgcGFyZW50KSB7XG4gIGlmIChwYXJlbnQpe1xuICAgIHJldHVybiBwYXJlbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuICB9XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG59O1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24odGFyZ2V0LCBwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBwYXNzaW5nIGZ1bmN0aW9uIGluIG9wdGlvbnMsIHRoZW4gdXNlIGl0IGZvciByZXNvbHZlIFwiaGVhZFwiIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgLy8gVXNlZnVsIGZvciBTaGFkb3cgUm9vdCBzdHlsZSBpLmVcbiAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgLy8gICBpbnNlcnRJbnRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvb1wiKS5zaGFkb3dSb290IH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGdldFRhcmdldC5jYWxsKHRoaXMsIHRhcmdldCwgcGFyZW50KTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Ly8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcblx0XHRcdFx0XHQvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG5cdFx0XHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG5cdFx0fVxuXHRcdHJldHVybiBtZW1vW3RhcmdldF1cblx0fTtcbn0pKCk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG4gICAgICAgIGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUsIHRhcmdldCk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cblx0aWYob3B0aW9ucy5hdHRycy5ub25jZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcblx0XHRpZiAobm9uY2UpIHtcblx0XHRcdG9wdGlvbnMuYXR0cnMubm9uY2UgPSBub25jZTtcblx0XHR9XG5cdH1cblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBnZXROb25jZSgpIHtcblx0aWYgKHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdHJldHVybiBfX3dlYnBhY2tfbm9uY2VfXztcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGUsIHVwZGF0ZSwgcmVtb3ZlLCByZXN1bHQ7XG5cblx0Ly8gSWYgYSB0cmFuc2Zvcm0gZnVuY3Rpb24gd2FzIGRlZmluZWQsIHJ1biBpdCBvbiB0aGUgY3NzXG5cdGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XG5cdCAgICByZXN1bHQgPSB0eXBlb2Ygb3B0aW9ucy50cmFuc2Zvcm0gPT09ICdmdW5jdGlvbidcblx0XHQgPyBvcHRpb25zLnRyYW5zZm9ybShvYmouY3NzKSBcblx0XHQgOiBvcHRpb25zLnRyYW5zZm9ybS5kZWZhdWx0KG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8pIHtcbiAgdmFyIGZyb20gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gdG8gJiYgdG8uc3BsaXQoJy8nKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IGZyb20gJiYgZnJvbS5zcGxpdCgnLycpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkge1xuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuICB9aWYgKG11c3RFbmRBYnMgJiYgZnJvbVBhcnRzWzBdICE9PSAnJyAmJiAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKSkgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lOyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gdmFsdWVFcXVhbChhLCBiKSB7XG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYikgJiYgYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuZXZlcnkoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgYVR5cGUgPSB0eXBlb2YgYSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYSk7XG4gIHZhciBiVHlwZSA9IHR5cGVvZiBiID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihiKTtcblxuICBpZiAoYVR5cGUgIT09IGJUeXBlKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKGFUeXBlID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBhVmFsdWUgPSBhLnZhbHVlT2YoKTtcbiAgICB2YXIgYlZhbHVlID0gYi52YWx1ZU9mKCk7XG5cbiAgICBpZiAoYVZhbHVlICE9PSBhIHx8IGJWYWx1ZSAhPT0gYikgcmV0dXJuIHZhbHVlRXF1YWwoYVZhbHVlLCBiVmFsdWUpO1xuXG4gICAgdmFyIGFLZXlzID0gT2JqZWN0LmtleXMoYSk7XG4gICAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXMoYik7XG5cbiAgICBpZiAoYUtleXMubGVuZ3RoICE9PSBiS2V5cy5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICAgIHJldHVybiBhS2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7IiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoY29uZGl0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXggKyBcIjogXCIgKyAobWVzc2FnZSB8fCAnJykpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKCdeJyArIHByZWZpeCArICcoXFxcXC98XFxcXD98I3wkKScsICdpJykudGVzdChwYXRoKTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG5cbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcblxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRoO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uO1xuXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufVxuZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbmZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuXG5mdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn1cblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB2YXIgaGFzaEluZGV4ID0gd2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZignIycpO1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24uaHJlZi5zbGljZSgwLCBoYXNoSW5kZXggPj0gMCA/IGhhc2hJbmRleCA6IDApICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB2b2lkIDAgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfSAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cblxuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpIDogdm9pZCAwO1xuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpIDogdm9pZCAwO1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdm9pZCAwID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gX3Byb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcblxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBwYXJzZVBhdGgsIGNyZWF0ZVBhdGggfTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY24gZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSBhcyBjcmVhdGVIaXN0b3J5LCBIaXN0b3J5LCBMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuXG5cblxuLy8gVE9ETzogYWNjZXNzaWJpbGl0eVxuXG5leHBvcnQgY2xhc3MgQXBwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgaGlzdG9yeTtcblxuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBwYWdlOiB7XG4gICAgICAgIG5hbWU6ICdob21lJyxcbiAgICAgICAgc2Nyb2xsVG86IG51bGxcbiAgICAgIH0sXG4gICAgICBzaG93SGFtYnVyZ2VyOiBmYWxzZSxcbiAgICAgIHNob3dEcmF3ZXI6IGZhbHNlXG4gICAgfTtcblxuICAgIGNvbnN0IGN1cnJlbnRMb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTtcbiAgICB0aGlzLmN1cnJlbnRQYWdlID0gY3VycmVudExvY2F0aW9uO1xuICAgIHRoaXMuaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkoKTtcblxuICAgIHRoaXMuaGlzdG9yeS5saXN0ZW4oKGxvY2F0aW9uKSA9PiB7XG4gICAgICB0aGlzLmN1cnJlbnRQYWdlID0gbG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSk7XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCB3aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICAgIGlmICh3aWR0aCA+IDgwMCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IHNob3dEcmF3ZXI6IGZhbHNlIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgc2hvd0RyYXdlcjogZmFsc2UsXG4gICAgICAgIHNob3dIYW1idXJnZXI6IHRydWVcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB7XG4gICAgICBjb25zdCB3aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICAgICAgY29uc3Qge1xuICAgICAgICBzaG93SGFtYnVyZ2VyXG4gICAgICB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgaWYgKHdpZHRoID4gODAwICYmIHNob3dIYW1idXJnZXIpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgc2hvd0RyYXdlcjogZmFsc2UsXG4gICAgICAgICAgc2hvd0hhbWJ1cmdlcjogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHdpZHRoIDwgODAwICYmICFzaG93SGFtYnVyZ2VyKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHNob3dIYW1idXJnZXI6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBoYW5kbGVOYXYgPSAodGFyZ2V0KSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IHBhZ2U6IHRhcmdldCB9KTtcblxuICAgIGlmICh0YXJnZXQuZG9jaykge1xuICAgICAgdGhpcy5jbG9zZURyYXdlcigpO1xuICAgIH1cblxuICAgIHN3aXRjaCAocGFnZS5uYW1lKSB7XG4gICAgICBjYXNlICdob21lJzpcbiAgICAgICAgdGhpcy5oaXN0b3J5LnB1c2goJy8nKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdwcmFjdGljZSc6XG4gICAgICAgIHRoaXMuaGlzdG9yeS5wdXNoKCcvcHJhY3RpY2UtYXJlYXMnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzZXJ2aWNlcyc6XG4gICAgICAgIHRoaXMuaGlzdG9yeS5wdXNoKCcvc2VydmljZXMnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdjbGFzc2VzJzpcbiAgICAgICAgdGhpcy5oaXN0b3J5LnB1c2goJy9jbGFzc2VzJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncmVzb3VyY2VzJzpcbiAgICAgICAgdGhpcy5oaXN0b3J5LnB1c2goJy9yZXNvdXJjZXMnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdkb2NzJzpcbiAgICAgICAgdGhpcy5oaXN0b3J5LnB1c2goJy9jbGllbnQtZG9jdW1lbnRzJyk7XG4gICAgfVxuICB9XG5cbiAgdG9nZ2xlRHJhd2VyID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoKGN1cnJlbnQpID0+ICh7XG4gICAgICBzaG93RHJhd2VyOiAhY3VycmVudC5zaG93RHJhd2VyXG4gICAgfSkpO1xuICB9XG5cbiAgY2xvc2VEcmF3ZXIgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzaG93RHJhd2VyOiBmYWxzZVxuICAgIH0pXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgdGVtcGxhdGVTdHlsZSA9IHtcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgZm9udEZhbWlseTogJ1JvYm90bywgc2Fucy1zZXJpZidcbiAgICB9O1xuXG4gICAgY29uc3Qge1xuICAgICAgcGFnZVxuICAgIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgY29uc3Qge1xuICAgICAgbmFtZVxuICAgIH0gPSBwYWdlO1xuXG4gICAgbGV0IGNvbnRlbnQgPSA8ZGl2IC8+O1xuXG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdob21lJzpcbiAgICAgICAgY29udGVudCA9IDxIb21lIG9uTmF2PXt0aGlzLmhhbmRsZU5hdn0gLz5cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdwcmFjdGljZSc6XG4gICAgICAgIGNvbnRlbnQgPSA8UHJhY3RpY2VBcmVhcyAvPjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzZXJ2aWNlcyc6XG4gICAgICAgIGNvbnRlbnQgPSA8U2VydmljZXMgLz47XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY2xhc3Nlcyc6XG4gICAgICAgIGNvbnRlbnQgPSA8Q2xhc3NlcyAvPjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdyZXNvdXJjZXMnOlxuICAgICAgICBjb250ZW50ID0gPFJlc291cmNlcyAvPjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdkb2NzJzpcbiAgICAgICAgY29udGVudCA9IDxDbGllbnREb2N1bWVudHMgLz47XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnZmVlcyc6XG4gICAgICAgIGNvbnRlbnQgPSA8RmVlcyAvPjtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgc3R5bGU9e3RlbXBsYXRlU3R5bGV9XG4gICAgICA+XG4gICAgICAgIDxIZWFkZXJcbiAgICAgICAgICBzaG93SGFtYnVyZ2VyPXt0aGlzLnN0YXRlLnNob3dIYW1idXJnZXJ9XG4gICAgICAgICAgYWN0aXZlPXtuYW1lfVxuICAgICAgICAgIG9uTmF2PXt0aGlzLmhhbmRsZU5hdn1cbiAgICAgICAgICBvcGVuRHJhd2VyPXt0aGlzLnRvZ2dsZURyYXdlcn1cbiAgICAgICAgLz5cbiAgICAgICAgPEJvZHlcbiAgICAgICAgICBwYWdlPXtwYWdlfVxuICAgICAgICAgIGNsb3NlRHJhd2VyPXt0aGlzLmNsb3NlRHJhd2VyfVxuICAgICAgICAgIHNob3dEcmF3ZXI9e3RoaXMuc3RhdGUuc2hvd0RyYXdlcn1cbiAgICAgICAgICBvbk5hdj17dGhpcy5oYW5kbGVOYXZ9XG4gICAgICAgID5cbiAgICAgICAgICB7Y29udGVudH1cbiAgICAgICAgPC9Cb2R5PlxuICAgICAgICA8Rm9vdGVyXG4gICAgICAgICAgb25OYXY9e3RoaXMuaGFuZGxlTmF2fVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5jbGFzcyBCb2R5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCB7XG4gICAgICBwYWdlXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBpZiAocGFnZS5zY3JvbGxUbykge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9wJykuc2Nyb2xsSW50b1ZpZXcoKSwgMCk7XG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHBhZ2VcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGlmIChwYWdlLnNjcm9sbFRvICE9PSBudWxsIHx8IHBhZ2Uuc2Nyb2xsVG8gIT09IHVuZGVmaW5lZCkge1xuICAgICAgaWYgKHR5cGVvZiBwYWdlLnNjcm9sbFRvID09PSAnc3RyaW5nJykge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBhZ2Uuc2Nyb2xsVG8pLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6IFwic21vb3RoXCIgfSksIDApO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIHBhZ2Uuc2Nyb2xsVG8gPT09ICdudW1iZXInKSB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gd2luZG93LnNjcm9sbFRvKDAsIHBhZ2Uuc2Nyb2xsVG8pLCAwKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBoYW5kbGVEcmF3ZXJPdmVybGF5Q2xpY2sgPSAoKSA9PiB7XG4gICAgdGhpcy5wcm9wcy5jbG9zZURyYXdlcigpXG4gIH1cblxuICByZW5kZXJEcmF3ZXIgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBzaG93RHJhd2VyIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3QgY2xhc3NlcyA9IGNuKCdkcmF3ZXItY29udGFpbmVyJywge1xuICAgICAgJ2hpZGUnOiAhc2hvd0RyYXdlclxuICAgIH0pO1xuXG4gICAgY29uc3Qgb3ZlcmxheUNsYXNzZXMgPSBjbignZHJhd2VyLW92ZXJsYXknLCB7XG4gICAgICAnaGlkZSc6ICFzaG93RHJhd2VyXG4gICAgfSk7XG5cblxuICAgIGNvbnN0IG9uRHJhd2VyUHJhY3RpY2VDbGljayA9ICgpID0+IHtcbiAgICAgIHRoaXMucHJvcHMub25OYXYoeyBuYW1lOiAncHJhY3RpY2UnLCBzY3JvbGxUbzogMCwgZG9jazogdHJ1ZSB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBvbkRyYXdlclNlcnZpY2VzQ2xpY2sgPSAoKSA9PiB7XG4gICAgICB0aGlzLnByb3BzLm9uTmF2KHsgbmFtZTogJ3NlcnZpY2VzJywgc2Nyb2xsVG86IDAsIGRvY2s6IHRydWUgfSk7XG4gICAgfVxuXG4gICAgY29uc3Qgb25EcmF3ZXJDb250YWN0Q2xpY2sgPSAoKSA9PiB7XG4gICAgICB0aGlzLnByb3BzLm9uTmF2KHsgbmFtZTogJ2hvbWUnLCBzY3JvbGxUbzogJ2NvbnRhY3QnLCBkb2NrOiB0cnVlIH0pXG4gICAgfVxuXG4gICAgY29uc3Qgb25EcmF3ZXJDbGFzc2VzQ2xpY2sgPSAoKSA9PiB7XG4gICAgICB0aGlzLnByb3BzLm9uTmF2KHsgbmFtZTogJ2NsYXNzZXMnLCBzY3JvbGxUbzogMCwgZG9jazogdHJ1ZSB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBvbkRyYXdlckRvY3VtZW50c0NsaWNrID0gKCkgPT4ge1xuICAgICAgdGhpcy5wcm9wcy5vbk5hdih7IG5hbWU6ICdkb2NzJywgc2Nyb2xsVG86IDAsIGRvY2s6IHRydWUgfSlcbiAgICB9XG5cbiAgICBjb25zdCBvbkRyYXdlclJlc291cmNlc0NsaWNrID0gKCkgPT4ge1xuICAgICAgdGhpcy5wcm9wcy5vbk5hdih7IG5hbWU6ICdyZXNvdXJjZXMnLCBzY3JvbGxUbzogMCwgZG9jazogdHJ1ZSB9KVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzfT5cbiAgICAgICAgICA8RHJhd2VyXG4gICAgICAgICAgICBoYW5kbGVDb250YWN0Q2xpY2s9e29uRHJhd2VyQ29udGFjdENsaWNrfVxuICAgICAgICAgICAgaGFuZGxlU2VydmljZXNDbGljaz17b25EcmF3ZXJTZXJ2aWNlc0NsaWNrfVxuICAgICAgICAgICAgaGFuZGxlUHJhY3RpY2VDbGljaz17b25EcmF3ZXJQcmFjdGljZUNsaWNrfVxuICAgICAgICAgICAgaGFuZGxlQ2xhc3Nlc0NsaWNrPXtvbkRyYXdlckNsYXNzZXNDbGlja31cbiAgICAgICAgICAgIGhhbmRsZURvY3VtZW50c0NsaWNrPXtvbkRyYXdlckRvY3VtZW50c0NsaWNrfVxuICAgICAgICAgICAgaGFuZGxlUmVzb3VyY2VzQ2xpY2s9e29uRHJhd2VyUmVzb3VyY2VzQ2xpY2t9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtvdmVybGF5Q2xhc3Nlc30gb25DbGljaz17dGhpcy5oYW5kbGVEcmF3ZXJPdmVybGF5Q2xpY2t9PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBwYWdlXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBib2R5U3R5bGUgPSB7XG4gICAgICBtaW5IZWlnaHQ6IGBjYWxjKDEwMHZoIC0gNjBweClgXG4gICAgfTtcblxuICAgIGNvbnN0IG4gPSBwYWdlLm5hbWU7XG4gICAgY29uc3QgY2xhc3NlcyA9IGNuKCdiYWNrZHJvcCcsIHtcbiAgICAgICdoZXJvIGxhenknOiBuID09PSAnaG9tZScsXG4gICAgICAnbW9yZVNlcnZpY2VzJzogbiA9PT0gJ3NlcnZpY2VzJyxcbiAgICAgICdtb3JlUmVzb3VyY2VzJzogbiA9PT0gJ3Jlc291cmNlcycsXG4gICAgICAnbW9yZURvY3VtZW50cyc6IG4gPT09ICdkb2NzJyxcbiAgICAgICdtb3JlRmVlcyc6IG4gPT09ICdmZWVzJyxcbiAgICAgICdtb3JlQ2xhc3Nlcyc6IG4gPT09ICdjbGFzc2VzJyxcbiAgICAgICdtb3JlUHJhY3RpY2UnOiBuID09PSAncHJhY3RpY2UnXG4gICAgfSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICBzdHlsZT17Ym9keVN0eWxlfVxuICAgICAgPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3Nlc30gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICA+XG4gICAgICAgICAge3RoaXMucmVuZGVyRHJhd2VyKCl9XG4gICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5jb25zdCBIZWFkZXIgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgaW5saW5lU3R5bGUgPSB7XG4gICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgbGVmdDogMCxcbiAgICB0b3A6IDAsXG4gICAgaGVpZ2h0OiA1MCxcbiAgICB3aWR0aDogJzEwMCUnLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWFyb3VuZCcsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI0VERUFFNScsXG4gICAgYm94U2hhZG93OiAnMCAzcHggNnB4IHJnYmEoMCwwLDAsMC4xNiksIDAgM3B4IDZweCByZ2JhKDAsMCwwLDAuMjMpJyxcbiAgICB6SW5kZXg6IDI0LFxuICB9O1xuXG4gIGNvbnN0IG1lbnVTdHlsZSA9IHtcbiAgICBjdXJzb3I6ICdwb2ludGVyJ1xuICB9XG5cbiAgY29uc3Qge1xuICAgIGFjdGl2ZSxcbiAgICBvbk5hdixcbiAgICBzaG93SGFtYnVyZ2VyLFxuICAgIG9wZW5EcmF3ZXJcbiAgfSA9IHByb3BzO1xuXG4gIGNvbnN0IHJlbmRlckhhbWJ1cmdlciA9ICgpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICBjbGFzc05hbWU9J2hlYWRlci1uYXYgaGVhZGVyLWhhbWJ1cmdlcidcbiAgICAgICAgc3R5bGU9e3sgbWFyZ2luTGVmdDogMjAgfX1cbiAgICAgICAgb25DbGljaz17b3BlbkRyYXdlcn1cbiAgICAgID5cbiAgICAgICAgPHNwYW4+XG4gICAgICAgICAgPHN2ZyBjbGFzc05hbWU9J2hhbWJ1cmdlcicgd2lkdGg9XCIzNFwiIGhlaWdodD1cIjM0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPjxwYXRoIGQ9XCJNMCAwaDI0djI0SDB6XCIgZmlsbD1cIm5vbmVcIiAvPjxwYXRoIGZpbGw9XCJjdXJyZW50Q29sb3JcIiBkPVwiTTMgMThoMTh2LTJIM3Yyem0wLTVoMTh2LTJIM3Yyem0wLTd2MmgxOFY2SDN6XCIgLz48L3N2Zz5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIGlmIChzaG93SGFtYnVyZ2VyKSB7XG4gICAgaW5saW5lU3R5bGUuanVzdGlmeUNvbnRlbnQgPSAnc3BhY2UtYmV0d2Vlbic7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgc3R5bGU9e2lubGluZVN0eWxlfVxuICAgICAgPlxuICAgICAgICB7cmVuZGVySGFtYnVyZ2VyKCl9XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbk5hdih7IG5hbWU6ICdob21lJywgc2Nyb2xsVG86ICd0b3AnIH0pfVxuICAgICAgICAgIGNsYXNzTmFtZT17Y24oJ25hdk1lbnUnLCAnc2lnbmF0dXJlJywgJ2xpbmsnLCB7ICduYXZNZW51LS1hY3RpdmUnOiBhY3RpdmUgPT09ICdob21lJyB9KX1cbiAgICAgICAgICBzdHlsZT17eyAuLi5tZW51U3R5bGUsIG1hcmdpblJpZ2h0OiAyMCB9fVxuICAgICAgICA+XG4gICAgICAgICAgU3RlcGhhbmllIFNtaXRoLCBQc3kuRC5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBzdHlsZT17aW5saW5lU3R5bGV9XG4gICAgPlxuICAgICAgPGRpdlxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbk5hdih7IG5hbWU6ICdob21lJywgc2Nyb2xsVG86ICd0b3AnIH0pfVxuICAgICAgICBjbGFzc05hbWU9e2NuKCduYXZNZW51JywgJ3NpZ25hdHVyZScsICdsaW5rJywgeyAnbmF2TWVudS0tYWN0aXZlJzogYWN0aXZlID09PSAnaG9tZScgfSl9XG4gICAgICAgIHN0eWxlPXttZW51U3R5bGV9XG4gICAgICA+XG4gICAgICAgIFN0ZXBoYW5pZSBTbWl0aCwgUHN5LkQuXG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXZcbiAgICAgICAgb25DbGljaz17KCkgPT4gb25OYXYoeyBuYW1lOiAncHJhY3RpY2UnLCBzY3JvbGxUbzogMCB9KX1cbiAgICAgICAgY2xhc3NOYW1lPXtjbignbmF2TWVudScsICdsaW5rJywgeyAnbmF2TWVudS0tYWN0aXZlJzogYWN0aXZlID09PSAncHJhY3RpY2UnIH0pfVxuICAgICAgICBzdHlsZT17bWVudVN0eWxlfVxuICAgICAgPlxuICAgICAgICBQcmFjdGljZSBBcmVhc1xuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IG9uTmF2KHsgbmFtZTogJ3NlcnZpY2VzJywgc2Nyb2xsVG86IDAgfSl9XG4gICAgICAgIGNsYXNzTmFtZT17Y24oJ25hdk1lbnUnLCAnbGluaycsIHsgJ25hdk1lbnUtLWFjdGl2ZSc6IGFjdGl2ZSA9PT0gJ3NlcnZpY2VzJyB9KX1cbiAgICAgICAgc3R5bGU9e21lbnVTdHlsZX1cbiAgICAgID5cbiAgICAgICAgU2VydmljZXNcbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdlxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbk5hdih7IG5hbWU6ICdjbGFzc2VzJywgc2Nyb2xsVG86IDAgfSl9XG4gICAgICAgIGNsYXNzTmFtZT17Y24oJ25hdk1lbnUnLCAnbGluaycsIHsgJ25hdk1lbnUtLWFjdGl2ZSc6IGFjdGl2ZSA9PT0gJ2NsYXNzZXMnIH0pfVxuICAgICAgICBzdHlsZT17bWVudVN0eWxlfVxuICAgICAgPlxuICAgICAgICBDbGFzc2VzXG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXZcbiAgICAgICAgb25DbGljaz17KCkgPT4gb25OYXYoeyBuYW1lOiAnZG9jcycsIHNjcm9sbFRvOiAwIH0pfVxuICAgICAgICBjbGFzc05hbWU9e2NuKCduYXZNZW51JywgJ2xpbmsnLCB7ICduYXZNZW51LS1hY3RpdmUnOiBhY3RpdmUgPT09ICdkb2NzJyB9KX1cbiAgICAgICAgc3R5bGU9e21lbnVTdHlsZX1cbiAgICAgID5cbiAgICAgICAgRG9jdW1lbnRzXG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXZcbiAgICAgICAgb25DbGljaz17KCkgPT4gb25OYXYoeyBuYW1lOiAnaG9tZScsIHNjcm9sbFRvOiAnY29udGFjdCcgfSl9XG4gICAgICAgIGNsYXNzTmFtZT17Y24oJ25hdk1lbnUnLCAnbGluaycsIHsgJ25hdk1lbnUtLWFjdGl2ZSc6IGFjdGl2ZSA9PT0gJ2NvbnRhY3QnIH0pfVxuICAgICAgICBzdHlsZT17bWVudVN0eWxlfVxuICAgICAgPlxuICAgICAgICBDb250YWN0XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXZcbiAgICAgICAgb25DbGljaz17KCkgPT4gb25OYXYoeyBuYW1lOiAncmVzb3VyY2VzJywgc2Nyb2xsVG86IDAgfSl9XG4gICAgICAgIGNsYXNzTmFtZT17Y24oJ25hdk1lbnUnLCAnbGluaycsIHsgJ25hdk1lbnUtLWFjdGl2ZSc6IGFjdGl2ZSA9PT0gJ3Jlc291cmNlcycgfSl9XG4gICAgICAgIHN0eWxlPXttZW51U3R5bGV9XG4gICAgICA+XG4gICAgICAgIFJlc291cmNlc1xuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5jb25zdCBGb290ZXIgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9J2Zvb3RlcidcbiAgICA+XG4gICAgICA8ZGl2PlxuICAgICAgICA8c3Bhbj5cbiAgICAgICAgICBTdGVwaGFuaWUgU21pdGgsIFBzeS5ELlxuICAgICAgPC9zcGFuPlxuICAgICAgICA8c3BhbiBpZD0nYWRkcmVzcyc+XG4gICAgICAgICAgODAxIEFsaGFtYnJhIEJsdmQsIFN1aXRlIDJCIFNhY3JhbWVudG8sIENBIDk1ODE2XG4gICAgICA8L3NwYW4+XG4gICAgICAgIDxzcGFuPlxuICAgICAgICAgICg5MTYpIDM5OS0zNjE1XG4gICAgICA8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5wc3ljaG9sb2d5dG9kYXkuY29tL3Byb2ZpbGUvNDczMDc2XCIgY2xhc3M9XCJzeC12ZXJpZmllZC1zZWFsXCI+PC9hPlxuICAgICAgICA8c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL21lbWJlci5wc3ljaG9sb2d5dG9kYXkuY29tL3ZlcmlmaWVkLXNlYWwuanNcIiBkYXRhLWJhZGdlPVwiMTRcIiBkYXRhLWlkPVwiNDczMDc2XCIgZGF0YS1jb2RlPVwiYUhSMGNITTZMeTkzZDNjdWNITjVZMmh2Ykc5bmVYUnZaR0Y1TG1OdmJTOWhjR2t2ZG1WeWFXWnBaV1F0YzJWaGJDOXpaV0ZzY3k5YlFrRkVSMFZkTDNCeWIyWnBiR1V2VzFCU1QwWkpURVZmU1VSZFAyTmhiR3hpWVdOclBYTjRZMkZzYkdKaFkycz1cIj48L3NjcmlwdD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2ID5cbiAgKTtcbn07XG5cblxuY29uc3QgSG9tZSA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgb25OYXZcbiAgfSA9IHByb3BzO1xuXG4gIC8vIGNvbnN0IFtpc0xhenksIHNldExhenldID0gUmVhY3QudXNlU3RhdGUodHJ1ZSk7XG5cbiAgLy8gUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgLy8gICBpZiAoaXNMYXp5KSB7XG4gIC8vICAgICBzZXRMYXp5KGZhbHNlKTtcbiAgLy8gICB9XG4gIC8vIH0pO1xuXG4gIGxldCBsYXp5ID0gJyc7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9J2JhY2tkcm9wJz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2BoZXJvICR7bGF6eX1gfSAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nY29udGVudCcgaWQ9J3RvcCc+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdoZXJvLWNvbnRlbnQnPlxuICAgICAgICAgIDxibG9ja3F1b3RlPlxuICAgICAgICAgICAgPGgxPlxuICAgICAgICAgICAgICBcIkFuZCB0aGUgZGF5IGNhbWUgd2hlbiB0aGUgcmlzayB0byByZW1haW4gdGlnaHQgYXMgYSBidWQgd2FzIG1vcmUgcGFpbmZ1bCB0aGFuIHRoZSByaXNrIGl0IHRvb2sgdG8gYmxvc3NvbS5cIlxuICAgICAgICAgICAgICA8L2gxPlxuICAgICAgICAgICAgPGZvb3Rlcj4tIEFuYWlzIE5pblxuICAgICAgICAgICAgICA8L2Zvb3Rlcj5cbiAgICAgICAgICA8L2Jsb2NrcXVvdGU+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWVldCBjYXJkLTInIGlkPSdtZWV0JyA+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3Byb2ZpbGUnPlxuICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9J3Byb2ZpbGVQaG90byBjYXJkLTEnIHNyYz0ncmVzL3Byb2ZpbGUuanBnJyAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdiaW8nPlxuICAgICAgICAgICAgPGgyIGNsYXNzTmFtZT0nYmlvVGl0bGUnPlxuICAgICAgICAgICAgICBNZWV0IERyLiBTdGVwaGFuaWUgU21pdGhcbiAgICAgICAgICAgICAgPC9oMj5cbiAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9J2Jpb1N1YnRpdGxlJz5cbiAgICAgICAgICAgICAgQ2xpbmljYWwgUHN5Y2hvbG9naXN0XG4gICAgICAgICAgICAgIDwvaDM+XG4gICAgICAgICAgICB7bWVldFN0ZXBofVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J3ByYWN0aWNlQXJlYXMnIGlkPSdwcmFjdGljZSc+XG4gICAgICAgICAgPGgyPlByYWN0aWNlIEFyZWFzPC9oMj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYXJlYXMnPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2FyZWEgY2FyZC0xJ1xuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbk5hdih7IG5hbWU6ICdwcmFjdGljZScsIHNjcm9sbFRvOiAnbW9yZUVhdGluZ0NvbmNlcm5zJyB9KX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2FyZWFPdmVybGF5JyAvPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGFyZWFJbWFnZSBhcmVhRWF0aW5nQ29uY2VybnMgJHtsYXp5fWB9IC8+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhcmVhVGV4dCc+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgIEVhdGluZzxiciAvPiBDb25jZXJuc1xuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYXJlYSBjYXJkLTEnXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uTmF2KHsgbmFtZTogJ3ByYWN0aWNlJywgc2Nyb2xsVG86ICdtb3JlTGlmZXN0eWxlQ2hhbmdlcycgfSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhcmVhT3ZlcmxheScgLz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2BhcmVhSW1hZ2UgYXJlYUxpZmVzdHlsZSAke2xhenl9YH0gLz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2FyZWFUZXh0Jz5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgTGlmZXN0eWxlPGJyIC8+IENoYW5nZXNcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2FyZWEgY2FyZC0xJ1xuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbk5hdih7IG5hbWU6ICdwcmFjdGljZScsIHNjcm9sbFRvOiAnbW9yZUxpZmVUcmFuc2l0aW9ucycgfSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhcmVhT3ZlcmxheScgLz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2BhcmVhSW1hZ2UgYXJlYVRyYW5zaXRpb25zICR7bGF6eX1gfSAvPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYXJlYVRleHQnPlxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICBMaWZlPGJyIC8+IFRyYW5zaXRpb25zXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhcmVhIGNhcmQtMSdcbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25OYXYoeyBuYW1lOiAncHJhY3RpY2UnLCBzY3JvbGxUbzogJ21vcmVSZWxlYXRpb25zaGlwQ2hhbGxlbmdlcycgfSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhcmVhT3ZlcmxheScgLz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2BhcmVhSW1hZ2UgYXJlYVJlbGF0aW9uc2hpcHMgJHtsYXp5fWB9IC8+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhcmVhVGV4dCc+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgIFJlbGF0aW9uc2hpcDxiciAvPiBDaGFsbGVuZ2VzXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhcmVhIGNhcmQtMSdcbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25OYXYoeyBuYW1lOiAncHJhY3RpY2UnLCBzY3JvbGxUbzogJ21vcmVNZWRpY2FsUHJvYmxlbXMnIH0pfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYXJlYU92ZXJsYXknIC8+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgYXJlYUltYWdlIGFyZWFNZWRpY2FsUHJvYmxlbXMgJHtsYXp5fWB9IC8+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhcmVhVGV4dCc+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgIEhlYWx0aDxiciAvPiBEaWZmaWN1bHRpZXNcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2FyZWEgY2FyZC0xJ1xuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbk5hdih7IG5hbWU6ICdwcmFjdGljZScsIHNjcm9sbFRvOiAnbW9yZVN0cmVzc01hbmFnZW1lbnQnIH0pfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYXJlYU92ZXJsYXknIC8+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgYXJlYUltYWdlIGFyZWFTdHJlc3MgJHtsYXp5fWB9IC8+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhcmVhVGV4dCc+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgIFN0cmVzczxiciAvPiBNYW5hZ2VtZW50XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncmVhZE1vcmUnPlxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9J3JlYWRNb3JlIGJ1dHRvbicgb25DbGljaz17KCkgPT4gb25OYXYoeyBuYW1lOiAncHJhY3RpY2UnLCBzY3JvbGxUbzogMCB9KX0+XG4gICAgICAgICAgICAgIFJFQUQgTU9SRVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRhY3QgY2FyZC0yICR7bGF6eX1gfSBpZD0nY29udGFjdCc+XG4gICAgICAgICAgPGgyPkNoYW5nZSBiZWdpbnMgdG9kYXk8L2gyPlxuICAgICAgICAgIDxoMyBzdHlsZT17eyBmb250U2l6ZTogMjMgfX0+UmVxdWVzdCBhIGNvbnN1bHRhdGlvbjwvaDM+XG4gICAgICAgICAgPHAgc3R5bGU9e3sgdGV4dEFsaWduOiAnY2VudGVyJywgZm9udFNpemU6IDE5LCBsaW5lSGVpZ2h0OiAxLjksIG1hcmdpblRvcDogNDAgfX0+XG4gICAgICAgICAgICBDYWxsL1RleHQ6IDkxNi0zOTktMzYxNTxiciAvPlxuICAgICAgICAgICAgRW1haWw6IDxhIHR5cGU9J2VtYWlsJyBocmVmPSdtYWlsdG86U3RlcGhhbmllU21pdGhQc3lEQHByb3Rvbm1haWwuY29tJyB0YXJnZXQ9J19ibGFuayc+U3RlcGhhbmllU21pdGhQc3lEQHByb3Rvbm1haWwuY29tPC9hPjxiciAvPlxuICAgICAgICAgICAgPGEgaHJlZj0naHR0cHM6Ly93d3cucHN5Y2hvbG9neXRvZGF5LmNvbS9wcm9maWxlLzQ3MzA3NicgdGFyZ2V0PSdfYmxhbmsnPkNvbm5lY3QgdGhyb3VnaCBQc3ljaG9sb2d5IFRvZGF5PC9hPlxuICAgICAgICAgIDwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuY29uc3QgbWFpbCA9IChcbiAgPFJlYWN0LkZyYWdtZW50PlxuICAgIDxmb3JtPlxuICAgICAgPGRpdiBjbGFzcz1cImdyb3VwXCI+XG4gICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHJlcXVpcmVkIC8+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCI+PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImJhclwiPjwvc3Bhbj5cbiAgICAgICAgPGxhYmVsPk5hbWU8L2xhYmVsPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiZ3JvdXBcIj5cbiAgICAgICAgPGlucHV0IHR5cGU9XCJlbWFpbFwiIHJlcXVpcmVkIC8+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiaGlnaGxpZ2h0XCI+PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImJhclwiPjwvc3Bhbj5cbiAgICAgICAgPGxhYmVsPkVtYWlsPC9sYWJlbD5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImdyb3VwXCI+XG4gICAgICAgIDxpbnB1dCB0eXBlPVwicGhvbmVcIiByZXF1aXJlZCAvPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiPjwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJiYXJcIj48L3NwYW4+XG4gICAgICAgIDxsYWJlbD5QaG9uZTwvbGFiZWw+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJncm91cFwiPlxuICAgICAgICA8dGV4dGFyZWEgdHlwZT1cInRleHRcIiByZXF1aXJlZCAvPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImhpZ2hsaWdodFwiPjwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJiYXJcIj48L3NwYW4+XG4gICAgICAgIDxsYWJlbD5NZXNzYWdlPC9sYWJlbD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZm9ybT5cbiAgICA8ZGl2IGNsYXNzPSdyZWFkTW9yZSc+XG4gICAgICA8YnV0dG9uIGNsYXNzTmFtZT0nYnV0dG9uJz5TRU5EPC9idXR0b24+XG4gICAgPC9kaXY+XG4gIDwvUmVhY3QuRnJhZ21lbnQ+XG4pO1xuXG4vKiogSG9tZSAqL1xuXG5cbi8qKiBQYWdlcyAqL1xuXG5jb25zdCBQcmFjdGljZUFyZWFzID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxQYWdlVGl0bGVcbiAgICAgICAgdGl0bGU9J1ByYWN0aWNlIEFyZWFzJ1xuICAgICAgLz5cbiAgICAgIDxDYXJkMVxuICAgICAgICBib2R5PXtwcmFjdGljZUFyZWFzfVxuICAgICAgLz5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApXG59XG5cbmNvbnN0IFNlcnZpY2VzID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxQYWdlVGl0bGVcbiAgICAgICAgdGl0bGU9J1NlcnZpY2VzJ1xuICAgICAgLz5cbiAgICAgIDxDYXJkMVxuICAgICAgICBib2R5PXtzZXJ2aWNlc31cbiAgICAgIC8+XG4gICAgICA8Q2FyZDFcbiAgICAgICAgYm9keT17c2VydmljZXNSZWltYnVyc21lbnR9XG4gICAgICAvPlxuICAgICAgPENhcmQxXG4gICAgICAgIGJvZHk9e3NlcnZpY2VzSW5zdXJhY2V9XG4gICAgICAvPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59XG5cbmNvbnN0IENsYXNzZXMgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPFBhZ2VUaXRsZVxuICAgICAgICB0aXRsZT17J0NsYXNzZXMnfVxuICAgICAgLz5cbiAgICAgIDxDYXJkMVxuICAgICAgICBib2R5PXtjbGFzc2VzfVxuICAgICAgLz5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuXG4gICk7XG59XG5cbmNvbnN0IENsaWVudERvY3VtZW50cyA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8UGFnZVRpdGxlXG4gICAgICAgIHRpdGxlPXsnQ2xpZW50IERvY3VtZW50cyd9XG4gICAgICAvPlxuICAgICAgPENhcmQxXG4gICAgICAgIGJvZHk9e2NsaWVudERvY3VtZW50c31cbiAgICAgIC8+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn1cblxuY29uc3QgUmVzb3VyY2VzID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxQYWdlVGl0bGVcbiAgICAgICAgdGl0bGU9eydSZXNvdXJjZXMnfVxuICAgICAgLz5cbiAgICAgIDxDYXJkMVxuICAgICAgICBib2R5PXtyZXNvdXJjZXN9XG4gICAgICAvPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG5cbiAgKTtcbn1cblxuY29uc3QgRmVlcyA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8UGFnZVRpdGxlXG4gICAgICAgIHRpdGxlPXsnRmVlcyd9XG4gICAgICAvPlxuICAgICAgPENhcmQxXG4gICAgICAgIGJvZHk9e2ZlZXN9XG4gICAgICAvPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG5cbiAgKTtcbn1cblxuXG5cbi8qKiBQYWdlcyBjb250ZW50cyAqL1xuXG5jb25zdCBtZWV0U3RlcGggPSAoXG4gIDxwPlxuICAgIFdlbGNvbWUgYW5kIHRoYW5rIHlvdSBmb3IgdmlzaXRpbmchIFRoaXMgaXMgYSBwbGFjZSB0byBleHBsb3JlIHRoZSBwb3NzaWJpbGl0eSBvZiBjaGFuZ2UgZm9yIGEgYmV0dGVyIHRvbW9ycm93LiBUaGVyZSBpcyBubyDigJxvbmUgc2l6ZSBmaXRzIGFsbOKAnSBhcHByb2FjaCB0byBvdXIgdGltZSB0b2dldGhlci4gSSB3b3JrIGNvbGxhYm9yYXRpdmVseSB3aXRoIG15IGNsaWVudHMgdG8gY3JlYXRlIGFuIGVudmlyb25tZW50IG9mIHJlc3BlY3QgYW5kIGNvbXBhc3Npb24gdGhhdCBjYW4gYmUgYXBwbGllZCB0byByZW5ldyB0aGVpciBsaXZlcy4gVGhlcmFweSBoYXMgdGhlIHBvd2VyIHRvIGJvdGggc29vdGhlIGFuZCB0cmFuc2Zvcm0uIEkgdXNlIHRlY2huaXF1ZXMgb2Ygb25lLW9uLW9uZSB0aGVyYXB5IGFuZCBjbGFzc2VzIHRvIHNwYXJrIG1lYW5pbmdmdWwgYW5kIGxhc3RpbmcgY2hhbmdlLiBJIGFtIGtub3duIGJ5IG15IGNsaWVudHMgYXMgYmVpbmcgZG93biB0byBlYXJ0aCwgZ2VudWluZSwgYW5kIHJlbGF0YWJsZS4gSSBsb29rIGZvcndhcmQgdG8gcGFydG5lcmluZyB0b2dldGhlciB0byBidWlsZCB5b3VyIGhlYWx0aGllciB0b21vcnJvdy5cbiAgPC9wPlxuKTtcblxuY29uc3QgcHJhY3RpY2VBcmVhcyA9IChcbiAgPFJlYWN0LkZyYWdtZW50PlxuICAgIDxoMyBpZD0nbW9yZUVhdGluZ0NvbmNlcm5zJz5FYXRpbmcgQ29uY2VybnM8L2gzPlxuICAgIDxwPlxuICAgICAgSW5kaXZpZHVhbHMgbm90aWNpbmcgbWluZGxlc3MsIHN0cmVzcywgZW1vdGlvbmFsLCBvciBiaW5nZSBlYXRpbmcgYmVoYXZpb3JzIGFyZSB3ZWxjb21lIHRvIGNvbnNpZGVyIGJvdGggaW5kaXZpZHVhbCBhbmQgY2xhc3MtYmFzZWQgdGhlcmFwaWVzIHdpdGggbWUuIE15IGFwcHJvYWNoIHRvIHRoZXNlIGNvbmNlcm5zIHJlY29nbml6ZXMgdGhlIGNvbXBsZXggcm9sZSBlYXRpbmcgY2FuIHBsYXkgYXMgYSBtZWNoYW5pc20gb2YgY29waW5nIGZvciBpbmRpdmlkdWFsLCBmYW1pbHksIGFuZCBjdWx0dXJhbGx5IHN5c3RlbWljIGlzc3Vlcy4gV2Ugd29yayB0b2dldGhlciB0byBhY2tub3dsZWRnZSB0aGUgZnVsbG5lc3Mgb2YgdGhpcyByb2xlIGFzIHdlbGwgYXMgaXQncyBoaXN0b3J5LCB3aGlsZSBob25vcmluZyB0aGUgZGVzaXJlIHRoYXQgbWF5IGV4aXN0IHRvIGNoYW5nZS4gVGhyb3VnaCBvdXIgd29yayB3ZSBjYW4gYmVnaW4gdG8gZGV2ZWxvcCBuZXcgYW5kIGhlYWx0aGllciBjb3Bpbmcgc3RyYXRlZ2llcyBhcyBhIG5hdHVyYWwgb3V0Y29tZSBvZiBpbmNyZWFzZWQgYXdhcmVuZXNzIGFuZCBzZWxmLWNvbXBhc3Npb24uIEkgdGFpbG9yIG15IGFwcHJvYWNoIHRvIHRoZSBuZWVkcyBhbmQgc3R5bGUgb2YgdGhlIGluZGl2aWR1YWwgd2l0aCB3aG9tIEkgYW0gd29ya2luZy5cbiAgICA8L3A+XG5cbiAgICA8aDNcbiAgICAgIGlkPSdtb3JlTGlmZXN0eWxlQ2hhbmdlcydcbiAgICA+TGlmZXN0eWxlIENoYW5nZXM8L2gzPlxuXG4gICAgPHA+XG4gICAgICBNb3N0IG9mIHVzIGNhbiByZWxhdGUgdG8gdGhlIHJ1bm5pbmcgbWVudGFsIGxpc3Qgb2YgdGhpbmdzIHdlIGtub3cgd2UgXCJzaG91bGRcIiBiZSBkb2luZyBpbiBvcmRlciB0byBiZSBoZWFsdGhpZXIuIE1heWJlIHRoaXMgaXMgbW92aW5nIG91ciBib2RpZXMgbW9yZSwgZWF0aW5nIGRpZmZlcmVudGx5LCBpbXByb3Zpbmcgc2xlZXAgaGFiaXRzLCBvciBkaXNjb25uZWN0aW5nIGZyb20gdGVjaG5vbG9neS4gTWF5YmUgaXQgY291bGQgYmUgdGhlc2UgdGhpbmdzIHBsdXMgbWFueSBtb3JlISBXaGlsZSBjZXJ0YWlubHkgZXhjZWxsZW50IGhhYml0cywgbG9va2luZyBhdCBhIGxpc3Qgb2YgcGVyc29uYWwgd2VsbG5lc3MgXCJ0byBkb3NcIiBjYW4gYmUgb3ZlcndoZWxtaW5nLiBJbiBmYWN0LCB3ZSBvZnRlbiBhdm9pZCB0aGlua2luZyBhYm91dCB0aGVzZSBoZWFsdGh5IGxpdmluZyBpdGVtcyBiZWNhdXNlIGl0IGNhbiBmZWVsIGhvcGVsZXNzLiBVbmZvcnR1bmF0ZWx5LCBvZnRlbiB0aGlzIG1lYW5zIHN0YXlpbmcgc3R1Y2sgaW4gYSBydXQgb2YgZmVlbGluZyB1bmhlYWx0aHkuIFRvZ2V0aGVyLCB3ZSBjYW4gY3JlYXRlIGEgcGxhbiBvZiBzbWFsbCBzdGVwcyB0byB3b3JrIHRvd2FyZHMgY29ubmVjdGluZyBiZWhhdmlvciBjaGFuZ2VzIHdpdGggeW91ciBkZWVwZXN0IHZhbHVlcy4gVGhpbmdzIHRoYXQgbWF5IGhhdmUgZmVsdCBmb3JjZWQgaW4gdGhlIHBhc3QgY2FuIGJlY29tZSB0aGluZ3Mgd2UgYXJlIGVhZ2VyIGZvci4gSSB3aWxsIGxldmVyYWdlIG15IHRyYWluaW5nIGluIExpZmVzdHlsZSBNZWRpY2luZSB0byBoZWxwIHNldCBtYW5hZ2VhYmxlIGFuZCByZXNlYXJjaCBzdXBwb3J0ZWQgYWltcyB0byBwcm9kdWNlIHJlYWwgaW1wcm92ZW1lbnRzIGluIHlvdXIgaGVhbHRoLlxuPC9wPlxuXG4gICAgPGgzXG4gICAgICBpZD0nbW9yZUxpZmVUcmFuc2l0aW9ucydcbiAgICA+UGhhc2Ugb2YgTGlmZSBJc3N1ZXMvTGlmZSBUcmFuc2l0aW9uczwvaDM+XG4gICAgPHA+XG4gICAgICBUaG91Z2ggdGhlIHBocmFzZSwgXCJ0aGUgb25seSB0aGluZyBjb25zdGFudCBpcyBjaGFuZ2VcIiBpcyBvbmUgZmFtaWxpYXIgdG8gbWFueSBvZiB1cywgdGhpcyBvZnRlbiBmZWVscyBsaWtlIGxpdHRsZSBjb21mb3J0IGR1cmluZyB0aGUgdHVybW9pbCBvZiBhIHNpZ25pZmljYW50IHRyYW5zaXRpb24uIENoYW5nZXMgaW4gbGlmZSBjaXJjdW1zdGFuY2VzIGNhbiBpbXBhY3QgdXMgb24gZXZlcnkgbGV2ZWwgb2Ygb3VyIGJlaW5nIGFuZCBleHRlcm5hbCBsaWZlLiBTZWVraW5nIHRoZXJhcHkgZHVyaW5nIHRoZXNlIHRpbWVzIGNhbiBiZSBib3RoIGFuY2hvciBhbmQgZ3VpZGUgbGlnaHQuIEkgd2lsbCBzdXBwb3J0IHlvdSB0byBwcm9jZXNzIHRoZSBsb3NzIG9mIGhvdyB0aGluZ3MgaGF2ZSBiZWVuLiBXaGVuIHlvdSBhcmUgcmVhZHksIHdlIHdpbGwgc2V0IGNvbnNjaW91c2x5IGRldmVsb3BlZCBnb2FscyBmb3IgdGhlIHBoYXNlIG9mIGxpZmUgdGhhdCB5b3UgZmluZCB5b3Vyc2VsZiBpbiBub3cuIFdlIHdpbGwgd29yayB0b2dldGhlciB0byBpZGVudGlmeSBoZWFsdGh5IGNvcmUgY29tcG9uZW50cyBvZiB3aG8geW91IGFyZSBldm9sdmluZyB0byBiZSwgYW5kIGNlbnRlciBvdXIgYXR0ZW50aW9uIHRvIG51cnR1cmUgdGhpcyBncm93dGguIFRoZXJlIGlzIG5vIHNldCB0aW1lbGluZSBvZiBob3cgbG9uZyBhbiBhZGp1c3RtZW50IHBlcmlvZCBsYXN0cy4gSSB3aWxsIGhlbHAgeW91IHRvIG1vdmUgaW50byB0aGUgbmV4dCBwYXJ0IG9mIHlvdXIgbGlmZSBpbiBoZWFsdGhmdWwgd2F5cywgYXMgcXVpY2tseSBhcyBpcyByZWFzb25hYmxlLCBhbmQgaW4gY29tcGxldGUgcmVzcGVjdCBmb3IgeW91ciBvd24gcGFjZS5cbjwvcD5cblxuICAgIDxoM1xuICAgICAgaWQ9J21vcmVSZWxhdGlvbnNoaXBDYWxsZW5nZXMnXG4gICAgPlJlbGF0aW9uc2hpcCBDaGFsbGVuZ2VzPC9oMz5cbiAgICA8cD5cbiAgICAgIFJvbWFudGljLCBmYW1pbHksIHNvY2lhbCwgYW5kIG9jY3VwYXRpb25hbCByZWxhdGlvbnNoaXBzIGNhbiBhbGwgYmUgc291cmNlcyBvZiBzaWduaWZpY2FudCBwbGVhc3VyZSBhbmQsIGNvbnNlcXVlbnRseSwgc2lnbmlmaWNhbnQgcGFpbi4gVGhlcmUgYXJlIGEgbXVsdGl0dWRlIG9mIHJlYXNvbnMgcmVsYXRpb25zaGlwcyBjYW4gYmVjb21lIHRyb3VibGVkLiBNYW55IG9mIHRoZSByb290cyBvZiB0aGVzZSByZWFzb25zIGNhbiBiZSB0cmFjZWQgdG8gY29tbXVuaWNhdGlvbiBjbGFyaXR5LiBXaGlsZSB3ZSBjYW5ub3QgY2hhbmdlIG90aGVyIHBlb3BsZSwgd2UgY2FuIGlkZW50aWZ5IHBlcnNvbmFsIHF1YWxpdGllcyBpbiBvdXJzZWx2ZXMgdGhhdCB3ZSB3aXNoIHRvIGNoYW5nZSBmb3IgdGhlIHdlbGxiZWluZyBvZiBhIGN1cnJlbnQgb3IgZnV0dXJlIHJlbGF0aW9uc2hpcC4gV29ya2luZyB0b3dhcmRzIGlkZW50aWZ5aW5nIHRoZXNlIGFyZWFzLCBjcmVhdGluZyBtaW5kZnVsIGF3YXJlbmVzcyBhcm91bmQgdGhlbSwgYW5kIG1ha2luZyB2YWx1ZXMtYmFzZWQgY2hhbmdlcyBjYW4gcHJvdmlkZSBib3RoIHBlcnNvbmFsIGJlbmVmaXRzIGFuZCBpbXByb3ZlbWVudHMgdG8gdGhlIHJlbGF0aW9uc2hpcC4gV2UgY2FuIHdvcmsgdG9nZXRoZXIgdG8gaWRlbnRpZnkgYW5kIG9wdGltaXplIHRoZXNlIGNoYW5nZXMgd2hpbGUgcHJpb3JpdGl6aW5nIGVmZmVjdGl2ZSBhbmQgY2xlYXIgY29tbXVuaWNhdGlvbiBhcyB0aGUgY29ybmVyc3RvbmUgdG8gaW1wcm92ZWQgcmVsYXRpb25zaGlwcy5cbjwvcD5cbiAgICA8aDNcbiAgICAgIGlkPSdtb3JlSGVhbHRoRGlmZmljdWx0aWVzJ1xuICAgID5IZWFsdGggRGlmZmljdWx0aWVzPC9oMz5cbiAgICA8cD5cbiAgICAgIFRoZXJlIGlzIG5vIGRvdWJ0IHRoYXQgb3VyIHBoeXNpY2FsIHdlbGxiZWluZyBpbXBhY3RzIG91ciBwc3ljaG9sb2dpY2FsIHdlbGxiZWluZyBhbmQgdmljZSB2ZXJzYS4gV2hldGhlciB5b3UgYXJlIGxvb2tpbmcgZm9yIHN1cHBvcnQgaW4gaW1wcm92aW5nIHlvdXIgbWFuYWdlbWVudCBvZiBhIG1lZGljYWwgcHJvYmxlbSwgaGFuZGxpbmcgdGhlIHN0cmVzcyBhcm91bmQgaXQsIG9yIGJlbGlldmUgdGhlcmUgbWF5IGJlIGxpZmVzdHlsZSBjaGFuZ2VzIHRoYXQgd2lsbCByZXZlcnNlIHRoZSBjb25kaXRpb24sIEkgd291bGQgYmUgaGFwcHkgdG8gc3VwcG9ydCB0aGlzIGFzcGVjdCBvZiB5b3VyIGhlYWx0aC4gSSBhbSBhIHRyYWluZWQgaGVhbHRoIHBzeWNob2xvZ2lzdCBhbmQgd29yayByZWd1bGFybHkgd2l0aCBib3RoIGNocm9uaWMgYW5kIGFjdXRlIG1lZGljYWwgY29uZGl0aW9ucy4gSSBoYXZlIHBlcnNvbmFsIGFuZCBwcm9mZXNzaW9uYWwgZXhwZXJpZW5jZSB3aXRoIHRoZSBpbXBhY3RzIHBoeXNpY2FsIGhlYWx0aCBjYW4gaGF2ZSBub3Qgb25seSBvbiBvbmVzZWxmLCBidXQgYWxzbyBvbiB0aG9zZSBhcm91bmQgdXMuIEkgYmVsaWV2ZSBzdXBwb3J0IGNhbiBtYWtlIGEgc3Vic3RhbnRpdmUgZGlmZmVyZW5jZSBpbiBtYW5hZ2luZyBhIGhlYWx0aCBjb25jZXJuIGFzIHdlbGwgYXMgdGhlIGVtb3Rpb25hbCBhbmQgc29jaWFsIGltcGFjdHMgb2YgdGhpcy4gSSB3aWxsIHdvcmsgd2l0aCB5b3UgdG8gYWNjZXB0IHRob3NlIHJlYWxpdGllcyB0aGF0IGFyZSB1bmNoYW5naW5nLCBhcyB3ZWxsIGFzIHJlY29nbml6ZSBvcHBvcnR1bml0aWVzIGZvciBwb3NpdGl2ZSBncm93dGguXG48L3A+XG4gICAgPGgzXG4gICAgICBpZD0nbW9yZVN0cmVzc01hbmFnZW1lbnQnXG4gICAgPlN0cmVzcyBNYW5hZ2VtZW50PC9oMz5cbiAgICA8cD5cbiAgICAgIEF0IHRpbWVzIHdlIGNhbiBmaW5kIG91cnNlbHZlcyBvdmVyd2hlbG1lZC4gVGhlIHJlYXNvbnMgZm9yIGZlZWxpbmcgb3ZlcndoZWxtZWQgbWlnaHQgc2VlbSBjbGVhciwgb3IgdGhleSBtYXkgYmUgaGFyZCB0byB1bmRlcnN0YW5kLiBJdCBjYW4gZmVlbCBsaWtlIGJlaW5nIHRyYXBwZWQgaW4gcGFydHMgb2YgeW91ciBvd24gbGlmZS4gVGFsa2luZyB0aHJvdWdoIHlvdXIgc3RyZXNzb3JzIHdpdGggYSBwcm9mZXNzaW9uYWwgY2FuIGFsbG93IHNwYWNlIGFyb3VuZCBwYWluZnVsIHBhcnRzIG9mIHlvdXIgZXhwZXJpZW5jZSB0aGF0IGNvdWxkIGVhc2UgdGhlIHByZXNzdXJlLiBUaGVyZSBtYXkgYWxzbyBiZSBhbHRlcm5hdGl2ZSBwZXJzcGVjdGl2ZXMgdGhhdCB5b3UgYXJlbuKAmXQgYWJsZSB0byBzZWUgZnJvbSBiZWluZyByaWdodCBpbiB0aGUgdGhpY2sgb2YgdGhlIHN0cmVzcywgdGhhdCBtYXkgYmUgdmlzaWJsZSBmcm9tIGFuIG91dHNpZGUgcGVyc3BlY3RpdmUuIFRoZXJhcHkgY2FuIHByb3ZpZGUgc3VwcG9ydCB0byBwcm9jZXNzIHlvdXIgZXhwZXJpZW5jZXMgYW5kIGZyZWUgeW91IHRvIGJlIGEgbW9yZSB3aG9sZSB2ZXJzaW9uIG9mIHlvdXJzZWxmOyBhYmxlIHRvIGVuZ2FnZSB3aXRoIHRoZSByZXN0IG9mIHlvdXIgbGlmZSBhbmQgdGhlIHBlb3BsZSBpbiBpdC5cbiAgICA8L3A+XG4gIDwvUmVhY3QuRnJhZ21lbnQ+XG4pO1xuXG5jb25zdCBzZXJ2aWNlcyA9IChcbiAgPFJlYWN0LkZyYWdtZW50PlxuICAgIDxoMyBzdHlsZT17eyB0ZXh0QWxpZ246ICdjZW50ZXInIH19PlxuICAgICAgV2hhdCB0byBFeHBlY3RcbiAgICA8L2gzPlxuICAgIDxoMz5UZWxlcGhvbmUgQ29uc3VsdDwvaDM+XG4gICAgPHA+XG4gICAgICBBcyBvdXIgZmlyc3QgY29udGFjdCBmb3IgZWl0aGVyIGluZGl2aWR1YWwgdGhlcmFweSBvciBjbGFzc2VzIEkgb2ZmZXIgYSBjb21wbGVtZW50YXJ5IDE1LW1pbnV0ZSBwaG9uZSBjb25zdWx0YXRpb24uIFRoaXMgaXMgYW4gb3Bwb3J0dW5pdHkgZm9yIHVzIHRvIGNvbm5lY3QgYWJvdXQgdGhlIGlzc3VlcyB0aGF0IGJyaW5nIHlvdSBpbnRvIGNhcmUsIGFuZCB0byBkZXRlcm1pbmUgd2hldGhlciB3b3JraW5nIHRvZ2V0aGVyIGlzIHRoZSBiZXN0IGZpdCBmb3IgeW91ciBuZWVkcy4gSSBjYW4gYW5zd2VyIGFueSBxdWVzdGlvbnMgdGhhdCB5b3UgbWF5IGhhdmUgYWJvdXQgY29taW5nIGludG8gY2FyZSBhbmQgc2V0IHVwIHlvdXIgZmlyc3QgYXBwb2ludG1lbnQgb3IgY2xhc3MuXG4gICAgICA8YnIgLz5cbiAgICAgIDxpPjE1LW1pbiBpbml0aWFsIHRlbGVwaG9uZSBjb25zdWx0JiN4MjAxNDsgZnJlZTwvaT5cbiAgICA8L3A+XG4gICAgPGgzPkluaXRpYWwgQXBwb2ludG1lbnQ8L2gzPlxuICAgIDxwPlxuICAgICAgQW4gaW5pdGlhbCBpbmRpdmlkdWFsIHRoZXJhcHkgYXBwb2ludG1lbnQgaXMgYSA2MC1taW51dGUgYXBwb2ludG1lbnQuIER1cmluZyB0aGlzIGFwcG9pbnRtZW50IEkgd2lsbCByZXZpZXcgeW91ciBjb21wbGV0ZSBpbnRha2UgZm9ybSB3aXRoIHlvdSB0byBlbnN1cmUgdGhhdCBJIGhhdmUgYW4gYXBwcm9wcmlhdGUgdW5kZXJzdGFuZGluZyBvZiBzb21lIG9mIHlvdXIgaGlzdG9yeSwgd2hhdCBicmluZ3MgeW91IGludG8gY2FyZSwgYW5kIHlvdXIgZ29hbHMgZm9yIG91ciB3b3JrIHRvZ2V0aGVyLiBJIHdpbGwgYW5zd2VyIGFueSBxdWVzdGlvbnMgdGhhdCB5b3UgaGF2ZSB0byB0aGUgYmVzdCBvZiBteSBhYmlsaXR5LiBXZSB3aWxsIGFsc28gdXNlIHRoaXMgYXBwb2ludG1lbnQgdG8gY3JlYXRlIHNvbWUgaW5pdGlhbCBnb2FscyBmb3IgY2FyZSBhbmQgdG8gc2V0IHVwIG91ciBtdXR1YWwgZXhwZWN0YXRpb25zIGZvciB0cmVhdG1lbnQuXG4gICAgICA8YnIgLz5cbiAgICAgIDxpPjYwLW1pbiBpbml0aWFsIGluZGl2aWR1YWwgYXBwb2ludG1lbnQmI3gyMDE0OyAkMTUwPC9pPlxuICAgIDwvcD5cbiAgICA8aDM+UmV0dXJuIEFwcG9pbnRtZW50czwvaDM+XG4gICAgPHA+XG4gICAgICBSZXR1cm4gYXBwb2ludG1lbnRzIGFyZSA1MC1taW51dGUgYXBwb2ludG1lbnRzLiBEdXJpbmcgcmV0dXJuIGFwcG9pbnRtZW50cyB3ZSB3aWxsIHdvcmsgdG9nZXRoZXIgb24geW91ciBnb2FscyBhbmQgSSB3aWxsIHN1cHBvcnQgeW91IHRocm91Z2ggdGhlIHByb2Nlc3MuIFdlIHdpbGwgcmVndWxhcmx5IGNoZWNrIGluIGFib3V0IHRoZSBwcm9ncmVzcyBvZiBjYXJlIGFuZCBtYWtlIGFkanVzdG1lbnRzIGFzIG5lZWRlZCB0byBlbnN1cmUgdGhhdCB3ZSBhcmUgd29ya2luZyBlZmZlY3RpdmVseSB0b2dldGhlci5cbiAgICAgIDxiciAvPlxuICAgICAgPGk+NTAtbWluIHJldHVybiBpbmRpdmlkdWFsIGFwcG9pbnRtZW50JiN4MjAxNDsgJDE1MDwvaT5cbiAgICA8L3A+XG4gICAgPGgzPkNsYXNzZXM8L2gzPlxuICAgIDxwPlxuICAgICAgQ2xhc3NlcyBhcmUgOTAgbWludXRlcyBpbiBsZW5ndGguIER1ZSB0byBzcGFjZSBuZWVkZWQsIGNsYXNzZXMgYXJlIGhlbGQgYXQgYSBuZWFyYnkgbG9jYXRpb24gc2VwYXJhdGUgZnJvbSB0aGUgbWFpbiB0aGVyYXB5IG9mZmljZS4gTW9yZSBpbmZvcm1hdGlvbiBhYm91dCBjbGFzcyBhbmQgY2xhc3MgY29udGVudCBjYW4gYmUgZm91bmQgdW5kZXIgdGhlIFwiQ2xhc3Nlc1wiIHRhYi4gVGhvdWdoIGNsYXNzZXMgdGFrZSBwbGFjZSBvdmVyIDQgc2Vzc2lvbnMsIHRoZSBmdWxsIGZlZSBtdXN0IGJlIHBhaWQgaW4gYWR2YW5jZSBvZiB0aGUgZmlyc3Qgc2Vzc2lvbi4gQWZ0ZXIgdGhpcyBwYXltZW50LCBubyBhZGRpdGlvbmFsIGNoYXJnZXMgYXJlIGluY3VycmVkIGZvciB0aGUgcmVtYWluZGVyIG9mIHRoZSBjbGFzc2VzIHVubGVzcyBhbiBhZGRpdGlvbmFsIHNlcnZpY2UgaXMgcmVxdWVzdGVkIG9yIHByb3ZpZGVkLlxuICAgICAgPGJyIC8+XG4gICAgICA8aT40LXNlc3Npb24gKDM2MC1taW4pIGNsYXNzIHNlcmllcyYjeDIwMTQ7ICQxNjA8L2k+XG4gICAgPC9wPlxuICAgIDxoMz5UZWxlTWVudGFsIEhlYWx0aDwvaDM+XG4gICAgPHA+XG4gICAgICBPbiBvY2Nhc2lvbiBpdCBtYXkgYmUgaW5kaWNhdGVkIGZvciB1cyB0byBlbmdhZ2UgaW4gdGVsZS1oZWFsdGggZWl0aGVyIG92ZXIgdGhlIHBob25lIG9yIHRocm91Z2ggdmlkZW8gY29tbXVuaWNhdGlvbi4gVGhlc2Ugc2VydmljZXMgYXJlIG9mZmVyZWQgdG8gaW5kaXZpZHVhbHMgb25seSBhZnRlciB3ZSBoYXZlIGluaXRpYWxseSBlc3RhYmxpc2hlZCBpbi1wZXJzb24gdGhlcmFwZXV0aWMgcmVsYXRpb25zaGlwIHRocm91Z2ggYXQgbGVhc3Qgb25lIGluLXBlcnNvbiBhcHBvaW50bWVudC4gRHVlIHRvIGxpY2Vuc2luZyByZXF1aXJlbWVudHMsIEkgYW0gdW5hYmxlIHRvIHByb3ZpZGUgdGhlc2Ugc2VydmljZXMgdG8gYW55b25lIG91dC1vZi1zdGF0ZSBvciBjb3VudHJ5IGF0IHRoZSB0aW1lIG9mIHNlcnZpY2UuIFRoZXJlIGFyZSBhIHZhcmlldHkgb2YgcGxhdGZvcm1zIGF2YWlsYWJsZSBmb3IgdGhpcyBzZXJ2aWNlIGFuZCwgdGhvdWdoIGNvbnZlbmllbnQsIGl0IGlzIGltcG9ydGFudCB0byBiZSBhd2FyZSB0aGF0IG1vc3QgYXJlIG5vdCBISVBBQSBjb21wbGlhbnQuIENvbXBsZXRpbmcgdGhlIEluZm9ybWVkIENvbnNlbnQgZm9ybSBhY2tub3dsZWRnZXMgeW91ciB1bmRlcnN0YW5kaW5nIG9mIHRoaXMgYW5kIGFjY2VwdGFuY2Ugb2YgdGhlIHJpc2sgc2hvdWxkIHdlIHV0aWxpemUgdGhpcyBmb3JtYXQgb2YgY2FyZS5cbiAgICAgIDxiciAvPlxuICAgICAgPGk+NSB0byAyNSBtaW51dGVzJiN4MjAxNDsgJDc1PC9pPlxuICAgICAgPGJyIC8+XG4gICAgICA8aT4yNi01MCBtaW51dGVzJiN4MjAxNDsgJDE1MDwvaT5cbiAgICA8L3A+XG4gIDwvUmVhY3QuRnJhZ21lbnQ+XG4pO1xuXG5jb25zdCBzZXJ2aWNlc1JlaW1idXJzbWVudCA9IChcbiAgPFJlYWN0LkZyYWdtZW50PlxuICAgIDxoMyBzdHlsZT17eyB0ZXh0QWxpZ246ICdjZW50ZXInIH19PlxuICAgICAgUGF5bWVudCBhbmQgUmVpbWJ1cnNlbWVudFxuICAgIDwvaDM+XG4gICAgPHA+XG4gICAgICBZb3Ugd2lsbCBiZSBleHBlY3RlZCB0byBwYXkgZm9yIGVhY2ggc2Vzc2lvbiBiZWZvcmUvYXQgdGhlIHN0YXJ0IG9mIHNlc3Npb24sIHVubGVzcyB3ZSBhZ3JlZSBvdGhlcndpc2UuIFBheW1lbnQgbWF5IGJlIG1hZGUgdGhyb3VnaCBjYXNoLCBjaGVjaywgb3IgSElQQUEgY29tcGxpYW50IGFwcGxpY2F0aW9uLiBVc2Ugb2YgdGhlIEhJUEFBIGNvbXBsaWFudCBhcHBsaWNhdGlvbiBpbmN1cnMgYW4gYWRkaXRpb25hbCAkNSBjaGFyZ2UuXG4gICAgPC9wPlxuICA8L1JlYWN0LkZyYWdtZW50PlxuKTtcblxuY29uc3Qgc2VydmljZXNJbnN1cmFjZSA9IChcbiAgPFJlYWN0LkZyYWdtZW50PlxuICAgIDxoMyBzdHlsZT17eyB0ZXh0QWxpZ246ICdjZW50ZXInIH19PlxuICAgICAgSW5zdXJhbmNlXG4gICAgPC9oMz5cbiAgICA8cD5cbiAgICAgIEkgYW0gYW4gXCJvdXQgb2YgbmV0d29yayBwcm92aWRlclwiIGZvciBpbnN1cmFuY2UgbmV0d29ya3MgYnV0IHdpbGwgcHJvdmlkZSB5b3UgYSBTdXBlcmJpbGwgd2hpY2ggeW91IG1heSB1c2UgdG8gcmVxdWVzdCByZWltYnVyc2VtZW50LiBUaGUgY292ZXJhZ2UgeW91IHJlY2VpdmUgaXMgZW50aXJlbHkgZGVwZW5kZW50IHVwb24gdGhlIHBsYW4gdGhhdCB5b3UgaGF2ZS4gSSByZWNvbW1lbmQgdGhhdCB5b3UgY29udGFjdCB5b3VyIGluc3VyYW5jZSBjb21wYW55IGRpcmVjdGx5IHRvIGRldGVybWluZSB5b3VyIHNwZWNpZmljIGNvdmVyYWdlLiBTb21lIHF1ZXN0aW9ucyB0aGF0IG1heSBiZSBoZWxwZnVsIGluIHRoaXMgY29udmVyc2F0aW9uIGluY2x1ZGU6XG4gICAgPC9wPlxuICAgIDxvbD5cbiAgICAgIDxsaT5cbiAgICAgICAgRG8gSSBoYXZlIG1lbnRhbCBoZWFsdGggaW5zdXJhbmNlIGJlbmVmaXRzIHRoYXQgY292ZXIgcHN5Y2hvdGhlcmFweT9cbiAgICAgIDwvbGk+XG4gICAgICA8bGk+XG4gICAgICAgIERvZXMgbXkgcG9saWN5IGNvdmVyIGFuIG91dCBvZiBuZXR3b3JrIExpY2Vuc2VkIFBzeWNob2xvZ2lzdD8gSWYgc28sIHdoYXQgcGVyY2VudGFnZSBpcyBjb3ZlcmVkIG9yIHdoYXQgaXMgdGhlIGNvdmVyYWdlIGFtb3VudCBwZXIgdGhlcmFweSBzZXNzaW9uP1xuICAgICAgPC9saT5cbiAgICAgIDxsaT5cbiAgICAgICAgV2hhdCBpcyBteSBkZWR1Y3RpYmxlIGFuZCBoYXMgaXQgYmVlbiBtZXQ/XG4gICAgICA8L2xpPlxuICAgICAgPGxpPlxuICAgICAgICBBcmUgbXkgbWVkaWNhbCBhbmQgbWVudGFsIGhlYWx0aC9iZWhhdmlvcmFsIGhlYWx0aCBkZWR1Y3RpYmxlcyBzZXBhcmF0ZT9cbiAgICAgIDwvbGk+XG4gICAgICA8bGk+XG4gICAgICAgIEhvdyBtYW55IHNlc3Npb25zIHBlciB5ZWFyIGRvZXMgbXkgaGVhbHRoIGluc3VyYW5jZSBjb3Zlcj9cbiAgICAgIDwvbGk+XG4gICAgICA8bGk+XG4gICAgICAgIERvZXMgdGhlIGRpYWdub3NpcyBtYXR0ZXI/IEFyZSBzb21lIGRpYWdub3NlcyBjb3ZlcmVkIGFuZCBvdGhlcnMgbm90P1xuICAgICAgPC9saT5cbiAgICAgIDxsaT5cbiAgICAgICAgV2hhdCBwYXBlcndvcmsgb3IgZm9ybXMgZG8gSSBuZWVkIHRvIHN1Ym1pdCBmb3Igc2Vzc2lvbnMgdG8gYmUgY292ZXJlZD9cbiAgICAgIDwvbGk+XG4gICAgICA8bGk+XG4gICAgICAgIElzIGFwcHJvdmFsIHJlcXVpcmVkIGZyb20gbXkgcHJpbWFyeSBjYXJlIHBoeXNpY2lhbj9cbiAgICAgIDwvbGk+XG4gICAgPC9vbD5cbiAgPC9SZWFjdC5GcmFnbWVudD5cbik7XG5cblxuY29uc3QgY2xhc3NlcyA9IChcbiAgPFJlYWN0LkZyYWdtZW50PlxuICAgIDxoMz5cbiAgICAgIE1vb2QgJiBGb29kXG4gICAgPC9oMz5cbiAgICA8cD5cbiAgICAgIE1vb2QgJiBGb29kIGlzIGEgY2xhc3MgZGVzaWduZWQgZm9yIGluZGl2aWR1YWxzIHN0cnVnZ2xpbmcgd2l0aCBvdmVyZWF0aW5nLCBtaW5kbGVzcyBlYXRpbmcsIHN0cmVzcyBlYXRpbmcsIGVtb3Rpb25hbCBlYXRpbmcsIHNoYW1lIGFyb3VuZCBlYXRpbmcsIG9yIGJpbmdlIGVhdGluZy4gVGhlIGNvdXJzZSBpcyBzdHJ1Y3R1cmVkIGludG8gNCBjbGFzc2VzIGVhY2ggbGFzdGluZyA5MCBtaW51dGVzLiBUaGUgY2xhc3MgY2VudGVycyBvbiBwcmVzZW50ZWQgbWF0ZXJpYWwsIHRob3VnaCBxdWVzdGlvbnMgYW5kIHBhcnRpY2lwYXRpb24gYXJlIHdlbGNvbWUgYW5kIGVuY291cmFnZWQuIENsYXNzIG1hdGVyaWFscyBhbHNvIGluY2x1ZGUgaGFuZG91dHMgYW5kIGF0LWhvbWUgcHJhY3RpY2UgZXhlcmNpc2VzLiBEdXJpbmcgdGhlIGNvdXJzZSBvZiB0aGUgY2xhc3NlcyB3ZSB3aWxsIGNvdmVyIHRvcGljcyBpbmNsdWRpbmc6XG4gICAgPC9wPlxuICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsIGZsZXhGbG93OiAncm93IHdyYXAnIH19PlxuICAgICAgPHVsPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgd2hhdCBlbW90aW9uYWwgZWF0aW5nIGlzXG4gICAgICA8L2xpPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgY3VsdHVyYWwgaW1wbGljYXRpb25zXG4gICAgICA8L2xpPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgZW52aXJvbm1lbnRhbCBpbXBhY3RzXG4gICAgICAgIDwvbGk+XG4gICAgICAgIDxsaT5cbiAgICAgICAgICBzZXQgcG9pbnQgdGhlb3J5XG4gICAgICAgIDwvbGk+XG4gICAgICAgIDxsaT5cbiAgICAgICAgICBlbW90aW9uYWwgdnMgcGh5c2ljYWwgaHVuZ2VyXG4gICAgICAgIDwvbGk+XG4gICAgICAgIDxsaT5cbiAgICAgICAgICBiaW5nZSBlYXRpbmcgY3ljbGVcbiAgICAgICAgPC9saT5cbiAgICAgICAgPGxpPlxuICAgICAgICAgIGludGVycGVyc29uYWwgZHluYW1pY3MgYXJvdW5kIGZvb2RcbiAgICAgICAgPC9saT5cbiAgICAgICAgPGxpPlxuICAgICAgICAgIHNlbGYtdGFsa1xuICAgICAgICA8L2xpPlxuICAgICAgPC91bD5cbiAgICAgIDx1bD5cbiAgICAgICAgPGxpPlxuICAgICAgICAgIGJlaGF2aW9yIGFuYWx5c2lzICYgYmVoYXZpb3IgY2hhbmdlXG4gICAgICA8L2xpPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgbWluZGZ1bCBlYXRpbmdcbiAgICAgIDwvbGk+XG4gICAgICAgIDxsaT5cbiAgICAgICAgICBsb3ZpbmcgbGltaXRzXG4gICAgICAgIDwvbGk+XG4gICAgICAgIDxsaT5cbiAgICAgICAgICBzZWxmLWNvbXBhc3Npb25cbiAgICAgICAgPC9saT5cbiAgICAgICAgPGxpPlxuICAgICAgICAgIG1hbmFnaW5nIGRpZmZpY3VsdCBlbW90aW9uc1xuICAgICAgICA8L2xpPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgaGFiaXQgZm9ybWF0aW9uXG4gICAgICAgIDwvbGk+XG4gICAgICAgIDxsaT5cbiAgICAgICAgICBzdGFnZXMgb2YgY2hhbmdlXG4gICAgICAgIDwvbGk+XG4gICAgICAgIDxsaT5cbiAgICAgICAgICBoZWFsdGh5IGVhdGluZyBndWlkZWxpbmVzXG4gICAgICAgIDwvbGk+XG4gICAgICA8L3VsPlxuICAgIDwvZGl2PlxuICAgIDxwPlxuICAgICAgQnkgdGhlIGVuZCBvZiB0aGUgY2xhc3Mgc2VyaWVzIHBhcnRpY2lwYW50cyB3aWxsIGJlIGFibGUgdG8gcmVjb2duaXplIG9wcG9ydHVuaXRpZXMgZm9yLCBwcmVwYXJlIGZvciwgYW5kIG1ha2UgcG9zaXRpdmUgY2hhbmdlcyBpbiB0aGVpciByZWxhdGlvbnNoaXBzIHdpdGggdGhlbXNlbHZlcywgZm9vZCwgYW5kIHRoZWlyIGVudmlyb25tZW50LlxuICAgIDwvcD5cbiAgPC9SZWFjdC5GcmFnbWVudD5cbik7XG5cbmNvbnN0IHJlc291cmNlcyA9IChcbiAgPFJlYWN0LkZyYWdtZW50PlxuICAgIDxwPlxuICAgICAgVGhlIGJlbG93IGFyZSByZXNvdXJjZXMgdGhhdCBJIGZpbmQgdG8gYmUgY2xpbmljYWxseSB2YWx1YWJsZS4gSSBoYXZlIG5vIGFmZmlsaWF0aW9uIHdpdGggYW55IG9mIHRoZSBpbmRpdmlkdWFscyBvciBlbnRpdGllcyBpbmRpY2F0ZWQgYmVsb3cuIFRoZXNlIHJlc291cmNlcyBhcmUgcHJvdmlkZWQgcHVyZWx5IGR1ZSB0byBteSBwZXJjZXB0aW9uIG9mIHRoZWlyIGNsaW5pY2FsIGJlbmVmaXQuIEkgcmVjZWl2ZSBubyBjb21wZW5zYXRpb24gb2YgYW55IGtpbmQgZm9yIHNoYXJpbmcgdGhlc2UgcmVzb3VyY2VzLlxuICAgIDwvcD5cbiAgICA8aDM+V2VicGFnZXM8L2gzPlxuICAgIDxwPlxuICAgICAgPGEgaHJlZj1cImh0dHBzOi8vYW54aWV0eWNhbmFkYS5jb20vXCIgdGFyZ2V0PVwiX2JsYW5rXCI+QW54aWV0eSBDYW5hZGE8L2E+IGlzIGFuIGV4Y2VsbGVudCB3ZWIgcmVzb3VyY2UgZm9yIGV2aWRlbmNlIGJhc2VkIGluZm9ybWF0aW9uIGFib3V0IGFueGlldHkuIFRoZSB3ZWJzaXRlIGlzIHdyaXR0ZW4gaW4gY2xlYXIgbGFuZ3VhZ2UgdGhhdCBpcyB0aG91Z2h0ZnVsLCBlYXN5IHRvIHVuZGVyc3RhbmQsIGFuZCBoZWxwZnVsLlxuICAgIDwvcD5cbiAgICA8cD5cbiAgICAgIDxhIGhyZWY9XCJodHRwczovL21hcHMuYW54aWV0eWNhbmFkYS5jb20vY291cnNlcy9teS1hbnhpZXR5LXBsYW4tbWFwLWZvci1hZHVsdHMvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+TXkgQW54aWV0eSBQbGFuPC9hPiBpcyB0aGUgb25saW5lIGNvdXJzZSBhc3NvY2lhdGVkIHdpdGggQW54aWV0eSBDYW5hZGEuIEl0IGlzIGEgZnJlZSBjb3Vyc2UgdGhhdCBwcm92aWRlcyBleGNlbGxlbnQgaW5mb3JtYXRpb24gaW4gYWRkaXRpb24gdG8gcHJhY3RpY2FsIHRvb2xzIGFuZCBwcmFjdGljZXMgZm9yIG1hbmFnaW5nIGFueGlldHkgYW5kIGFueGlldHktYmFzZWQgY29uZGl0aW9ucy5cbiAgICA8L3A+XG4gICAgPHA+XG4gICAgICA8YSBocmVmPVwiaHR0cHM6Ly9icmVuZWJyb3duLmNvbS9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5CcmVuZSBCcm93bjwvYT4gaXMgYW4gYXV0aG9yLCByZXNlYXJjaGVyLCBhbmQgc3BlYWtlciB0aGF0IEkgaGlnaGx5IHJlY29tbWVuZC4gVGhlIGxpbmsgaXMgdG8gaGVyIG1haW4gd2VicGFnZS4gQmVsb3cgYXJlIHNwZWNpZmljIHJlc291cmNlcyBvZiBoZXJzIHRoYXQgSSByZWNvbW1lbmQuXG4gICAgPC9wPlxuICAgIDxwPlxuICAgICAgPGEgaHJlZj1cImh0dHBzOi8vZ2dzYy5iZXJrZWxleS5lZHUvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+VGhlIEdyZWF0ZXIgR29vZCBTY2llbmNlIENlbnRlcjwvYT4tIEJlcmtlbGV5IGlzIGEgY2VudGVyIG9mIHJlc2VhcmNoIGFuZCBpbm5vdmF0aW9uIGZvY3VzaW5nIG9uIG1ha2luZyBwb3NpdGl2aXR5IGFuZCBwb3NpdGl2ZSBjaGFuZ2UgYWNjZXNzaWJsZSB0byBhbGwuXG4gICAgPC9wPlxuICAgIDxwPlxuICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmVkeC5vcmcvY291cnNlL3RoZS1zY2llbmNlLW9mLWhhcHBpbmVzcy0wXCIgdGFyZ2V0PVwiX2JsYW5rXCI+VGhlIFNjaWVuY2Ugb2YgSGFwcGluZXNzPC9hPiBpcyB0aGUgb25saW5lIGNvdXJzZSBmcm9tIHRoZSBHcmVhdGVyIEdvb2QgU2NpZW5jZSBDZW50ZXIuIEl0IGlzIGEgZnJlZSA4LXdlZWsgY291cnNlIHRoYXQgcHJvdmlkZXMgdG9vbHMgdG8gaGFwcGllciBleHBlcmllbmNlcyBhbmQgZ3JlYXRlciBtZWFuaW5nIGluIGxpZmUuXG4gICAgPC9wPlxuICAgIDxwPlxuICAgICAgPGEgaHJlZj1cImh0dHBzOi8vZ2dpYS5iZXJrZWxleS5lZHUvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+R3JlYXRlciBHb29kIGluIEFjdGlvbjwvYT4gcHJvdmlkZXMgZG9hYmxlIHByYWN0aWNlcyBmb3IgbWFraW5nIGNvbmNyZXRlIGFuZCBpbXBhY3RmdWwgcG9zaXRpdmUgY2hhbmdlc1xuICAgIDwvcD5cblxuICAgIDxoMz5WaWRlb3M8L2gzPlxuXG4gICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LnRlZC5jb20vdGFsa3MvYnJlbmVfYnJvd25fb25fdnVsbmVyYWJpbGl0eT91dG1fY2FtcGFpZ249dGVkc3ByZWFkJnV0bV9tZWRpdW09cmVmZXJyYWwmdXRtX3NvdXJjZT10ZWRjb21zaGFyZVwiIHRhcmdldD1cIl9ibGFua1wiPlRoZSBQb3dlciBvZiBWdWxuZXJhYmlsaXR5LSBCcmVuZSBCcm93bjwvYT48YnIgLz5cbiAgICA8YSBocmVmPVwiaHR0cHM6Ly93d3cudGVkLmNvbS90YWxrcy9icmVuZV9icm93bl9saXN0ZW5pbmdfdG9fc2hhbWU/dXRtX2NhbXBhaWduPXRlZHNwcmVhZCZ1dG1fbWVkaXVtPXJlZmVycmFsJnV0bV9zb3VyY2U9dGVkY29tc2hhcmVcIiB0YXJnZXQ9XCJfYmxhbmtcIj5MaXN0ZW5pbmcgdG8gU2hhbWUtIEJyZW5lIEJyb3duPC9hPjxiciAvPlxuICAgIDxhIGhyZWY9XCJodHRwczovL3BsYXllci52aW1lby5jb20vdmlkZW8vMjYxMzQ4NzA5XCIgdGFyZ2V0PVwiX2JsYW5rXCI+U3VwZXJTb3VsIFNlc3Npb25zOiBUaGUgQW5hdG9teSBvZiBUcnVzdC0gQnJlbmUgQnJvd248L2E+PGJyIC8+XG4gICAgPGEgaHJlZj1cImh0dHBzOi8vYnJlbmVicm93bi5jb20vdmlkZW9zL1wiIHRhcmdldD1cIl9ibGFua1wiPkFkZGl0aW9uYWwgQnJlbmUgQnJvd248L2E+PGJyIC8+XG4gICAgPGEgaHJlZj1cImh0dHBzOi8veW91dHUuYmUvSXZ0WkJVU3BscjRcIiB0YXJnZXQ9XCJfYmxhbmtcIj5UaGUgU3BhY2UgQmV0d2VlbiBTZWxmLUVzdGVlbSBhbmQgU2VsZi1Db21wYXNzaW9uLSBLcmlzdGluIE5lZmY8L2E+PGJyIC8+XG4gICAgPGEgaHJlZj1cImh0dHBzOi8vc2VsZi1jb21wYXNzaW9uLm9yZy92aWRlb3MvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+QWRkaXRpb25hbCBLcmlzdGluIE5lZmY8L2E+PGJyIC8+XG4gICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LnRlZC5jb20vdGFsa3Mvc2FuZHJhX2FhbW9kdF93aHlfZGlldGluZ19kb2Vzbl90X3VzdWFsbHlfd29yaz91dG1fY2FtcGFpZ249dGVkc3ByZWFkJnV0bV9tZWRpdW09cmVmZXJyYWwmdXRtX3NvdXJjZT10ZWRjb21zaGFyZVwiIHRhcmdldD1cIl9ibGFua1wiPldoeSBEaWV0aW5nIERvZXNuJ3QgVXN1YWxseSBXb3JrLSBTYW5kcmEgQWFtb2R0PC9hPjxiciAvPlxuXG4gICAgPGgzPkF1ZGlvIFJlY29yZGluZ3M8L2gzPlxuXG4gICAgPGEgaHJlZj1cImh0dHBzOi8vY2VudGVyZm9ybXNjLm9yZy9wcmFjdGljZS1tc2MvZ3VpZGVkLW1lZGl0YXRpb25zLWFuZC1leGVyY2lzZXMvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+TWluZGZ1bCBTZWxmIENvbXBhc3Npb24gTWVkaXRhdGlvbnM8L2E+PGJyIC8+XG4gICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LnVjbGFoZWFsdGgub3JnL21hcmMvbWluZGZ1bC1tZWRpdGF0aW9uc1wiIHRhcmdldD1cIl9ibGFua1wiPlVDTEEgTWVkaXRhdGlvbnMgKEFsc28gYXZhaWxhYmxlIGluIFNwYW5pc2ghKTwvYT48YnIgLz5cblxuICAgIDxoMz5Cb29rczwvaDM+XG4gICAgPGEgaHJlZj1cImh0dHBzOi8vZ2VuZWVucm90aC5jb20vYm9va3MvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+V29tZW4sIEZvb2QsIGFuZCBHb2QgYnkgR2VuZWVuIFJvdGg8L2E+PGJyIC8+XG4gICAgPGEgaHJlZj1cImh0dHBzOi8vYnJlbmVicm93bi5jb20vYm9va3MtYXVkaW8vXCIgdGFyZ2V0PVwiX2JsYW5rXCI+VGhlIEdpZnRzIG9mIEltcGVyZmVjdGlvbiBieSBCcmVuZSBCcm93bjwvYT48YnIgLz5cbiAgICA8YSBocmVmPVwiaHR0cHM6Ly9icmVuZWJyb3duLmNvbS9ib29rcy1hdWRpby9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5EYXJpbmcgR3JlYXRseSBieSBCcmVuZSBCcm93bjwvYT48YnIgLz5cbiAgICA8YSBocmVmPVwiaHR0cHM6Ly9icmVuZWJyb3duLmNvbS9ib29rcy1hdWRpby9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5SaXNpbmcgU3Ryb25nIGJ5IEJyZW5lIEJyb3duPC9hPjxiciAvPlxuICA8L1JlYWN0LkZyYWdtZW50PlxuKTtcblxuY29uc3QgY2xpZW50RG9jdW1lbnRzID0gKFxuICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgPHA+XG4gICAgICBUaGUgZm9sbG93aW5nIGZvcm1zIGFyZSBmb3IgeW91ciByZXZpZXcuIElmIHdlIGhhdmUgc2NoZWR1bGVkIGFuIGluLXBlcnNvbiBhcHBvaW50bWVudCwgY2FyZWZ1bGx5IHJlYWQgZWFjaCBvZiB0aGUgZm9ybXMgYmVsb3cuIFBsZWFzZSBwcmludCwgY29tcGxldGUsIGFuZCBicmluZyB0aGUgZmlyc3QgdGhyZWUgZm9ybXMgdG8gb3VyIGZpcnN0IGFwcG9pbnRtZW50LiBXZSB3aWxsIHJldmlldyB0aGVtIHRvZ2V0aGVyLiBJZiB5b3Ugd291bGQgbGlrZSBmb3IgeW91ciBoZWFsdGggaW5mb3JtYXRpb24gdG8gYmUgc2hhcmVkIHdpdGggYW5vdGhlciBpbmRpdmlkdWFsIG9yIGdyb3VwLCBvciB3b3VsZCBsaWtlIG1lIHRvIGdhdGhlciBpbmZvcm1hdGlvbiBmcm9tIHRoZW0sIHBsZWFzZSBwcmludCwgY29tcGxldGUsIGFuZCBicmluZyB0aGUgUmVsZWFzZSBvZiBJbmZvcm1hdGlvbiBmb3JtIHRvIHlvdXIgbmV4dCBhcHBvaW50bWVudCB3aGljaCBpZGVudGlmaWVzIHRoZSBwZXJzb24gb3IgZW50aXR5IHdpdGggd2hvbSB5b3VyIGluZm9ybWF0aW9uIHNob3VsZCBiZSBzaGFyZWQuXG4gICAgPC9wPlxuICAgIDx1bD5cbiAgICAgIDxsaT5cbiAgICAgICAgPGEgaHJlZj1cIi4vcmVzL0luZm9ybWVkIENvbnNlbnQucGRmXCIgZG93bmxvYWQgdGFyZ2V0PVwiX2JsYW5rXCI+SW5mb3JtZWQgQ29uc2VudDwvYT5cbiAgICAgIDwvbGk+XG4gICAgICA8bGk+XG4gICAgICAgIDxhIGhyZWY9XCIuL3Jlcy9JbnRha2UgRm9ybS5wZGZcIiBkb3dubG9hZCB0YXJnZXQ9XCJfYmxhbmtcIj5JbnRha2UgRm9ybTwvYT5cbiAgICAgIDwvbGk+XG4gICAgICA8bGk+XG4gICAgICAgIDxhIGhyZWY9XCIuL3Jlcy9SZWNlaXB0IG9mIEZvcm1zLnBkZlwiIGRvd25sb2FkIHRhcmdldD1cIl9ibGFua1wiPlJlY2VpcHQgb2YgRm9ybXM8L2E+XG4gICAgICA8L2xpPlxuICAgICAgPGxpPlxuICAgICAgICA8YSBocmVmPVwiLi9yZXMvUHJpdmFjeSBQb2xpY3kucGRmXCIgZG93bmxvYWQgdGFyZ2V0PVwiX2JsYW5rXCI+UHJpdmFjeSBQb2xpY3k8L2E+XG4gICAgICA8L2xpPlxuICAgICAgPGxpPlxuICAgICAgICA8YSBocmVmPVwiLi9yZXMvUk9JLnBkZlwiIGRvd25sb2FkIHRhcmdldD1cIl9ibGFua1wiPlJlbGVhc2Ugb2YgSW5mb3JtYXRpb248L2E+XG4gICAgICA8L2xpPlxuXG4gICAgPC91bD5cbiAgPC9SZWFjdC5GcmFnbWVudD5cbik7XG5cblxuXG5jb25zdCBDYXJkMSA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aXRsZSA9IHByb3BzLnRpdGxlID9cbiAgICAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nY2FyZC10aXRsZSc+XG4gICAgICAgIHtwcm9wcy50aXRsZX1cbiAgICAgIDwvZGl2PlxuICAgICkgOiB1bmRlZmluZWQ7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9J2NhcmQgY2FyZC0xJ1xuICAgID5cbiAgICAgIHt0aXRsZX1cbiAgICAgIDxkaXYgY2xhc3NOYW1lPSdjYXJkLWJvZHknPlxuICAgICAgICB7cHJvcHMuYm9keX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5cblxuXG5cbmNvbnN0IFBhZ2VUaXRsZSA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPSdwYWdlLXRpdGxlJyBpZD0ndG9wJz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPSd0aXRsZSc+XG4gICAgICAgIHtwcm9wcy50aXRsZX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5cbmNsYXNzIERyYXdlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBoYW5kbGVQcmFjdGljZUNsaWNrLFxuICAgICAgaGFuZGxlU2VydmljZXNDbGljayxcbiAgICAgIGhhbmRsZUNsYXNzZXNDbGljayxcbiAgICAgIGhhbmRsZUNvbnRhY3RDbGljayxcbiAgICAgIGhhbmRsZURvY3VtZW50c0NsaWNrLFxuICAgICAgaGFuZGxlUmVzb3VyY2VzQ2xpY2tcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IGFjdGl2ZSA9ICcnXG5cbiAgICBjb25zdCBtZW51U3R5bGUgPSB7XG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgIGZvbnRTaXplOiAyMCxcbiAgICAgIGJvcmRlckJvdHRvbTogJzFweCBzb2xpZCBjdXJyZW50Q29sb3InLFxuICAgICAgcGFkZGluZzogMTBcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPSdkcmF3ZXInPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25DbGljaz17aGFuZGxlUHJhY3RpY2VDbGlja31cbiAgICAgICAgICBjbGFzc05hbWU9e2NuKCduYXZNZW51JywgJ2xpbmsnLCB7ICduYXZNZW51LS1hY3RpdmUnOiBhY3RpdmUgPT09ICdwcmFjdGljZScgfSl9XG4gICAgICAgICAgc3R5bGU9e3sgLi4ubWVudVN0eWxlLCBib3JkZXJUb3A6ICcxcHggc29saWQgY3VycmVudENvbG9yJyB9fVxuICAgICAgICA+XG4gICAgICAgICAgUHJhY3RpY2UgQXJlYXNcbiAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25DbGljaz17aGFuZGxlU2VydmljZXNDbGlja31cbiAgICAgICAgICBjbGFzc05hbWU9e2NuKCduYXZNZW51JywgJ2xpbmsnLCB7ICduYXZNZW51LS1hY3RpdmUnOiBhY3RpdmUgPT09ICdzZXJ2aWNlcycgfSl9XG4gICAgICAgICAgc3R5bGU9e21lbnVTdHlsZX1cbiAgICAgICAgPlxuICAgICAgICAgIFNlcnZpY2VzXG4gICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNsYXNzZXNDbGlja31cbiAgICAgICAgICBjbGFzc05hbWU9e2NuKCduYXZNZW51JywgJ2xpbmsnLCB7ICduYXZNZW51LS1hY3RpdmUnOiBhY3RpdmUgPT09ICdjbGFzc2VzJyB9KX1cbiAgICAgICAgICBzdHlsZT17bWVudVN0eWxlfVxuICAgICAgICA+XG4gICAgICAgICAgQ2xhc3Nlc1xuICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVEb2N1bWVudHNDbGlja31cbiAgICAgICAgICBjbGFzc05hbWU9e2NuKCduYXZNZW51JywgJ2xpbmsnLCB7ICduYXZNZW51LS1hY3RpdmUnOiBhY3RpdmUgPT09ICdkb2NzJyB9KX1cbiAgICAgICAgICBzdHlsZT17bWVudVN0eWxlfVxuICAgICAgICA+XG4gICAgICAgICAgRG9jdW1lbnRzXG4gICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNvbnRhY3RDbGlja31cbiAgICAgICAgICBjbGFzc05hbWU9e2NuKCduYXZNZW51JywgJ2xpbmsnLCB7ICduYXZNZW51LS1hY3RpdmUnOiBhY3RpdmUgPT09ICdjb250YWN0JyB9KX1cbiAgICAgICAgICBzdHlsZT17bWVudVN0eWxlfVxuICAgICAgICA+XG4gICAgICAgICAgQ29udGFjdFxuICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVSZXNvdXJjZXNDbGlja31cbiAgICAgICAgICBjbGFzc05hbWU9e2NuKCduYXZNZW51JywgJ2xpbmsnLCB7ICduYXZNZW51LS1hY3RpdmUnOiBhY3RpdmUgPT09ICdyZXNvdXJjZXMnIH0pfVxuICAgICAgICAgIHN0eWxlPXttZW51U3R5bGV9XG4gICAgICAgID5cbiAgICAgICAgICBSZXNvdXJjZXNcbiAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQnV0dG9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHRvLFxuICAgICAgdGV4dCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICBjbGFzc2VzXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgY2xhc3NOYW1lPXtgYnV0dG9uICR7Y2xhc3Nlc31gfVxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgID5cbiAgICAgICAgICB7dGV4dH1cbiAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5cbmltcG9ydCB7IEFwcCB9IGZyb20gJy4vQXBwJztcblxuaW1wb3J0ICcuLi9jc3Mvc3R5bGUuY3NzJztcblxuUmVhY3RET00ucmVuZGVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoQXBwKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSk7IFxuIl0sInNvdXJjZVJvb3QiOiIifQ==